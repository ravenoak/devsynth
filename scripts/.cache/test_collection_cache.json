{
  "metadata": {
    "last_updated": "2025-08-02T11:29:50.187217",
    "file_timestamps": {
      "tests/unit/__init__.py": 1753230317.206726,
      "tests/unit/behavior/test_alignment_metrics_steps_unit.py": 1753561422.2704334,
      "tests/unit/behavior/test_analyze_commands_steps_unit.py": 1753561422.270535,
      "tests/unit/interface/test_webui_gather_wizard.py": 1754164034.7879672,
      "tests/unit/interface/test_uxbridge_config.py": 1754157770.6881196,
      "tests/unit/interface/test_webui_run_edge_cases.py": 1754163131.527578,
      "tests/unit/interface/test_webui_gather_wizard_with_state.py": 1754170095.2907631,
      "tests/unit/interface/test_state_access.py": 1754167409.6814013,
      "tests/unit/interface/test_webui_setup.py": 1754158041.455613,
      "tests/unit/interface/test_uxbridge_aliases.py": 1754158403.808997,
      "tests/unit/interface/test_api_advanced.py": 1754165516.8692157,
      "tests/unit/interface/test_uxbridge.py": 1754158041.4566846,
      "tests/unit/interface/test_webui_cli_imports.py": 1754163202.2535777,
      "tests/unit/interface/test_agentapi_class.py": 1754169940.6082716,
      "tests/unit/interface/__init__.py": 1752081103.1072373,
      "tests/unit/interface/test_cli_components.py": 1754157770.694064,
      "tests/unit/interface/test_uxbridge_sanitization.py": 1754163202.2588654,
      "tests/unit/interface/test_ux_bridge.py": 1754167409.686702,
      "tests/unit/interface/test_output_formatter.py": 1754157770.695112,
      "tests/unit/interface/test_webui_navigation_and_validation.py": 1754167409.7209105,
      "tests/unit/interface/test_streamlit_mocks.py": 1754157770.6958895,
      "tests/unit/interface/test_webui_onboarding.py": 1754157770.6961493,
      "tests/unit/interface/test_webui.py": 1754167386.2721272,
      "tests/unit/interface/test_webui_enhanced.py": 1754157770.6983237,
      "tests/unit/interface/test_webui_progress.py": 1754157770.6988616,
      "tests/unit/interface/test_webui_requirements_wizard.py": 1754170234.443164,
      "tests/unit/interface/test_webui_requirements.py": 1754158403.8083253,
      "tests/unit/interface/test_cliuxbridge.py": 1754167409.6704748,
      "tests/unit/interface/test_output_sanitization.py": 1754167753.921069,
      "tests/unit/interface/test_webui_progress_time.py": 1754158041.4645123,
      "tests/unit/interface/test_webui_error_handling.py": 1754168490.5899022,
      "tests/unit/interface/test_bridge_conformance.py": 1754168100.5054753,
      "tests/unit/interface/test_uxbridge_consistency.py": 1754168228.3860276,
      "tests/unit/interface/test_uxbridge_question_result.py": 1754168329.0758362,
      "tests/unit/interface/test_wizard_state_manager.py": 1754167409.7601862,
      "tests/unit/interface/test_api_endpoints.py": 1754167999.9806187,
      "tests/unit/interface/test_webui_wizard_state.py": 1754167409.7458773,
      "tests/unit/core/test_unified_config_loader.py": 1754150708.8739893,
      "tests/unit/core/test_core_values.py": 1754150708.8730931,
      "tests/unit/core/test_config_loader.py": 1754106340.376677,
      "tests/unit/core/__init__.py": 1753230317.2071216,
      "tests/unit/fallback/test_retry_conditions.py": 1754150832.2016022,
      "tests/unit/fallback/__init__.py": 1753561422.2705758,
      "tests/unit/fallback/test_retry_metrics.py": 1754150832.2033553,
      "tests/unit/fallback/test_retry_counts.py": 1754150832.2024398,
      "tests/unit/config/test_project_config_validation.py": 1754150708.8707926,
      "tests/unit/config/__init__.py": 1752081103.1045642,
      "tests/unit/config/test_unified_loader.py": 1754150708.8717659,
      "tests/unit/config/test_config_validation_extended.py": 1754150708.8704312,
      "tests/unit/security/test_memory_encryption.py": 1753459299.7867472,
      "tests/unit/security/test_validation.py": 1752081103.1110923,
      "tests/unit/security/test_sanitization.py": 1752081103.1108458,
      "tests/unit/security/test_security_flags_env.py": 1753737683.5522149,
      "tests/unit/security/__init__.py": 1752081103.1101577,
      "tests/unit/security/test_authentication.py": 1752081103.1103792,
      "tests/unit/security/test_authorization_checks.py": 1753459299.7865188,
      "tests/unit/security/test_api_authentication.py": 1752081103.1102767,
      "tests/unit/security/test_authorization.py": 1752081103.1104941,
      "tests/unit/security/test_tls_config.py": 1752081103.1109667,
      "tests/unit/security/test_argon2_hash.py": 1753459299.786453,
      "tests/unit/security/test_encryption.py": 1752081103.110619,
      "tests/unit/general/test_unified_agent.py": 1754107096.844965,
      "tests/unit/general/test_unified_config_loader.py": 1753212133.599835,
      "tests/unit/general/test_core_config_loader.py": 1753212133.5941727,
      "tests/unit/general/test_core_values.py": 1753212133.594244,
      "tests/unit/general/test_promise_agent.py": 1753212133.5978932,
      "tests/unit/general/test_kuzu_store.py": 1753850089.3074257,
      "tests/unit/general/test_api_health.py": 1753212133.5927522,
      "tests/unit/general/test_memory_system.py": 1753212133.5963602,
      "tests/unit/general/test_config_settings.py": 1753212133.5939302,
      "tests/unit/general/test_config_loader.py": 1753212133.5938218,
      "tests/unit/general/test_core_workflows.py": 1753561422.271345,
      "tests/unit/general/test_wsde_dynamic_roles.py": 1753212133.60068,
      "tests/unit/general/test_workflow_models.py": 1753212133.6006014,
      "tests/unit/general/test_memory_models.py": 1753212133.5961812,
      "tests/unit/general/test_agent_adapter.py": 1754107096.8473883,
      "tests/unit/general/test_provider_logging.py": 1753737683.5518053,
      "tests/unit/general/test_ingest_cmd.py": 1753371393.1725814,
      "tests/unit/general/test_methodology_logging.py": 1753212133.5967312,
      "tests/unit/general/test_kuzu_store_fallback.py": 1753850089.3076122,
      "tests/unit/general/test_unified_agent_code_prompt.py": 1753212133.5996854,
      "tests/unit/general/test_wsde_team_voting_invalid.py": 1753212133.601245,
      "tests/unit/general/test_agent_coordinator.py": 1754085060.2051296,
      "tests/unit/general/test_no_devsynth_dir_creation.py": 1753212133.5970879,
      "tests/unit/general/test_documentation_fetcher.py": 1753212133.5945783,
      "tests/unit/general/test_token_tracker.py": 1753756170.006765,
      "tests/unit/general/test_mypy_config.py": 1753212133.5970132,
      "tests/unit/general/test_primus_selection.py": 1753212133.5975475,
      "tests/unit/general/test_delegate_task_disabled.py": 1753212133.5943937,
      "tests/unit/general/test_requirement.py": 1753212133.5985801,
      "tests/unit/general/test_fallback_utils.py": 1753212133.5949821,
      "tests/unit/general/test_unit_cli_commands.py": 1754107096.8505914,
      "tests/unit/general/test_requirement_port.py": 1753212133.5989306,
      "tests/unit/general/test_exceptions.py": 1753212133.5949101,
      "tests/unit/general/__init__.py": 1753230317.2074919,
      "tests/unit/general/test_enhanced_chromadb_store.py": 1753212133.59481,
      "tests/unit/general/test_memory_system_with_kuzu.py": 1753212133.5966597,
      "tests/unit/general/test_ingestion_type_hints.py": 1753212133.5951962,
      "tests/unit/general/test_wsde_voting_mechanisms.py": 1753212133.6014538,
      "tests/unit/general/test_agent_system.py": 1753212133.592607,
      "tests/unit/general/test_ux_bridge.py": 1753212133.6002676,
      "tests/unit/general/test_chroma_db_adapter.py": 1753212133.5931015,
      "tests/unit/general/test_wsde_voting.py": 1753212133.6013272,
      "tests/unit/general/test_agent_collaboration.py": 1754150832.2054832,
      "tests/unit/general/test_code_analyzer.py": 1753212133.5935926,
      "tests/unit/general/test_workflow.py": 1753212133.6003523,
      "tests/unit/general/test_kuzu_project_startup.py": 1753850089.3072383,
      "tests/unit/general/test_edrr_cycle_cmd.py": 1753212133.5946562,
      "tests/unit/general/test_multi_agent_adapter_workflow.py": 1753212133.596801,
      "tests/unit/general/test_lmstudio_provider_unit.py": 1753212133.5960424,
      "tests/unit/general/test_memory_system_with_chromadb.py": 1753212133.596453,
      "tests/unit/general/test_test_first_metrics.py": 1753212133.5994253,
      "tests/unit/general/test_path_restrictions.py": 1753212133.597399,
      "tests/unit/general/test_inspect_config_cmd.py": 1753212133.5952837,
      "tests/unit/general/test_code_analysis_interface.py": 1753212133.5934122,
      "tests/unit/general/test_dialectical_reasoner.py": 1753212133.594511,
      "tests/unit/general/test_template_location.py": 1753212133.5992243,
      "tests/unit/general/test_agent_models.py": 1753212133.5923815,
      "tests/unit/general/test_ports_with_fixtures.py": 1753212133.5974777,
      "tests/unit/general/test_wsde_team_extended.py": 1754085060.219133,
      "tests/unit/general/test_isolation.py": 1753212133.5954022,
      "tests/unit/general/test_memory_store.py": 1753212133.596248,
      "tests/unit/general/test_requirement_models.py": 1753212133.598683,
      "tests/unit/general/test_ingestion_edrr_integration.py": 1753371393.1726959,
      "tests/unit/general/test_logging_setup.py": 1753212133.5961125,
      "tests/unit/general/test_cli_commands.py": 1753212133.593337,
      "tests/unit/general/test_agent_adapter_delegate.py": 1754107096.8563414,
      "tests/unit/general/test_cli.py": 1754107096.8568509,
      "tests/unit/general/test_base.py": 1753212133.5928206,
      "tests/unit/general/test_langgraph_adapter.py": 1753212133.5957808,
      "tests/unit/general/test_wsde_team_coordinator.py": 1754107096.857677,
      "tests/unit/general/test_onnx_port.py": 1753212133.597154,
      "tests/unit/general/test_chromadb_store.py": 1753212133.5931878,
      "tests/unit/general/test_edrr_manifest_string.py": 1753212133.5947363,
      "tests/unit/general/test_llm_provider_selection.py": 1753212133.5958524,
      "tests/unit/general/test_resource_markers.py": 1753212133.5991309,
      "tests/unit/general/test_anthropic_provider_unit.py": 1753212133.5926852,
      "tests/unit/general/test_kuzu_adapter.py": 1753561422.2716115,
      "tests/unit/general/test_rdflib_store.py": 1753212133.5982316,
      "tests/unit/general/test_knowledge_graph_utils.py": 1753212133.5954683,
      "tests/unit/general/test_wsde_role_mapping.py": 1753371393.1731493,
      "tests/unit/general/test_promise_system.py": 1753212133.5979972,
      "tests/unit/general/test_requirement_service.py": 1753212133.599054,
      "tests/unit/general/test_project_yaml.py": 1753212133.59763,
      "tests/unit/general/test_wsde_model.py": 1753212133.6007645,
      "tests/unit/general/test_code_analysis_models.py": 1753212133.5934942,
      "tests/unit/methodology/test_sprint_adapter.py": 1753287084.4683545,
      "tests/unit/methodology/test_adhoc_adapter.py": 1753287084.4682605,
      "tests/unit/methodology/__init__.py": 1753561422.2719567,
      "tests/unit/methodology/test_milestone_adapter.py": 1753459299.7863834,
      "tests/unit/methodology/test_kanban_adapter.py": 1753459299.7863092,
      "tests/unit/docs/test_feature_matrix.py": 1752081103.105328,
      "tests/unit/docs/__init__.py": 1752081103.1052132,
      "tests/unit/cli/__init__.py": 1753749403.3962214,
      "tests/unit/cli/test_cli_entry.py": 1753749403.3963306,
      "tests/unit/fakes/test_fake_onnx_runtime.py": 1753918920.5851927,
      "tests/unit/fakes/__init__.py": 1752081103.1071713,
      "tests/unit/adapters/test_provider_system.py": 1754158909.769974,
      "tests/unit/adapters/test_kuzu_memory_store.py": 1754158325.304584,
      "tests/unit/adapters/test_provider_factory.py": 1754158325.334354,
      "tests/unit/adapters/__init__.py": 1753230317.2068558,
      "tests/unit/adapters/test_chromadb_vector_adapter.py": 1754158909.7725534,
      "tests/unit/adapters/test_sync_manager.py": 1754158325.3579524,
      "tests/unit/adapters/test_provider_factory_env_vars.py": 1754158325.245298,
      "tests/unit/adapters/test_chromadb_memory_store.py": 1754158909.7922015,
      "tests/unit/adapters/llm/__init__.py": 1752081103.0943153,
      "tests/unit/adapters/llm/test_llm_adapter.py": 1754158909.7943165,
      "tests/unit/adapters/memory/test_memory_adapter.py": 1754158325.4250672,
      "tests/unit/adapters/memory/__init__.py": 1752081103.0944948,
      "tests/unit/adapters/memory/test_memory_adapter_factory.py": 1754158325.3915849,
      "tests/unit/adapters/memory/test_vector_store_provider_factory.py": 1754158325.4354746,
      "tests/unit/adapters/providers/test_provider_factory.py": 1754158325.4126523,
      "tests/unit/adapters/providers/test_embeddings.py": 1754158325.4631162,
      "tests/unit/adapters/providers/__init__.py": 1752081103.0948431,
      "tests/unit/adapters/providers/test_fallback.py": 1754158325.279199,
      "tests/unit/adapters/cli/test_typer_adapter.py": 1754158325.314151,
      "tests/unit/adapters/cli/__init__.py": 1752081103.0941324,
      "tests/unit/scripts/test_security_ops.py": 1753850089.307953,
      "tests/unit/application/test_offline_provider_cli.py": 1754158588.1212275,
      "tests/unit/application/__init__.py": 1752081103.0959487,
      "tests/unit/application/test_prompt_auto_tuning.py": 1754158588.1497483,
      "tests/unit/application/test_offline_provider_unit.py": 1754158588.1506734,
      "tests/unit/application/collaboration/test_delegate_task.py": 1754158588.1548827,
      "tests/unit/application/collaboration/test_coordinator.py": 1754158588.160649,
      "tests/unit/application/collaboration/__init__.py": 1752081103.098734,
      "tests/unit/application/collaboration/test_collaborative_wsde_team.py": 1754158256.7377403,
      "tests/unit/application/collaboration/test_wsde_team_consensus_summary.py": 1754158588.1622446,
      "tests/unit/application/collaboration/test_message_protocol.py": 1754158588.163008,
      "tests/unit/application/collaboration/test_collaborative_wsde_team_task_management.py": 1754158256.7151923,
      "tests/unit/application/collaboration/test_delegate_workflows.py": 1754158588.1643512,
      "tests/unit/application/documentation/__init__.py": 1752081103.099573,
      "tests/unit/application/documentation/test_documentation_manager_utils.py": 1754158588.1681108,
      "tests/unit/application/documentation/test_documentation_ingestion_manager.py": 1754158588.1841714,
      "tests/unit/application/code_analysis/test_ast_transformer.py": 1754158588.1891923,
      "tests/unit/application/code_analysis/__init__.py": 1752081103.098106,
      "tests/unit/application/code_analysis/test_ast_workflow_integration.py": 1754158588.1916914,
      "tests/unit/application/code_analysis/test_project_state_analyzer.py": 1754158588.1952355,
      "tests/unit/application/code_analysis/test_self_analyzer.py": 1754158588.202166,
      "tests/unit/application/code_analysis/test_transformer.py": 1754158588.2113059,
      "tests/unit/application/llm/__init__.py": 1752081103.1019883,
      "tests/unit/application/llm/test_offline_provider_deps.py": 1754158588.2134588,
      "tests/unit/application/llm/test_offline_provider.py": 1754158588.218471,
      "tests/unit/application/llm/test_import_without_lmstudio.py": 1754158588.2192988,
      "tests/unit/application/memory/test_sync_across_backends.py": 1754158588.2207854,
      "tests/unit/application/memory/test_retry.py": 1754158588.225703,
      "tests/unit/application/memory/test_import_without_tinydb.py": 1754158588.2264643,
      "tests/unit/application/memory/test_kuzu_store.py": 1754158588.2270641,
      "tests/unit/application/memory/test_tinydb_store.py": 1754158588.234171,
      "tests/unit/application/memory/test_duckdb_store.py": 1754158588.251057,
      "tests/unit/application/memory/test_basic_crud_adapters.py": 1754158588.252278,
      "tests/unit/application/memory/test_circuit_breaker.py": 1754158588.2553582,
      "tests/unit/application/memory/test_import_without_duckdb.py": 1754158588.2561083,
      "tests/unit/application/memory/test_memory_manager_search.py": 1754158255.823579,
      "tests/unit/application/memory/test_recovery.py": 1754158588.262662,
      "tests/unit/application/memory/__init__.py": 1752081103.1021674,
      "tests/unit/application/memory/test_faiss_store.py": 1754158588.2701883,
      "tests/unit/application/memory/test_lmdb_store.py": 1754158588.2847114,
      "tests/unit/application/memory/test_fallback.py": 1754158256.7698088,
      "tests/unit/application/memory/test_memory_adapters_regression.py": 1754158588.2865782,
      "tests/unit/application/memory/test_vector_memory_adapter_extra.py": 1754158588.2873607,
      "tests/unit/application/memory/test_chromadb_store.py": 1754158588.2934222,
      "tests/unit/application/memory/test_graph_memory_adapter.py": 1754158588.3134408,
      "tests/unit/application/memory/test_sync_wrappers.py": 1754158256.109287,
      "tests/unit/application/memory/test_duckdb_store_hnsw.py": 1754158256.7196827,
      "tests/unit/application/memory/test_memory_manager.py": 1754158256.75527,
      "tests/unit/application/memory/test_rdflib_store.py": 1754158588.3351638,
      "tests/unit/application/memory/test_knowledge_graph_utils.py": 1754158588.34543,
      "tests/unit/application/memory/test_multi_layered_memory.py": 1754158588.3699946,
      "tests/unit/application/config/test_unified_config_loader.py": 1754158588.3723557,
      "tests/unit/application/config/__init__.py": 1753230317.2069824,
      "tests/unit/application/agents/test_unified_agent_generic.py": 1754158255.1785216,
      "tests/unit/application/agents/test_refactor_agent.py": 1754158256.724554,
      "tests/unit/application/agents/test_code_agent.py": 1754158256.5508943,
      "tests/unit/application/agents/test_wsde_memory_integration.py": 1754158256.5119586,
      "tests/unit/application/agents/__init__.py": 1749786618.066864,
      "tests/unit/application/agents/test_critic_agent.py": 1754158256.7302814,
      "tests/unit/application/agents/test_planner_agent.py": 1754158256.5358913,
      "tests/unit/application/agents/test_validation_agent.py": 1754158255.5281157,
      "tests/unit/application/agents/test_multi_language_code.py": 1754158256.6319356,
      "tests/unit/application/agents/test_agent_memory_integration.py": 1754158588.376821,
      "tests/unit/application/agents/test_base_agent.py": 1754158588.3875868,
      "tests/unit/application/agents/test_specification_agent.py": 1754158256.7115548,
      "tests/unit/application/agents/test_diagram_agent.py": 1754158256.5033398,
      "tests/unit/application/agents/test_documentation_agent.py": 1754158256.6385314,
      "tests/unit/application/agents/test_test_agent.py": 1754158588.3891854,
      "tests/unit/application/cli/test_metrics_commands.py": 1754158256.7171068,
      "tests/unit/application/cli/test_autocomplete.py": 1754158256.705302,
      "tests/unit/application/cli/test_serve_cmd.py": 1754158254.8064957,
      "tests/unit/application/cli/__init__.py": 1752081103.0969455,
      "tests/unit/application/cli/test_doctor_cmd.py": 1754158588.3940299,
      "tests/unit/application/cli/test_enhanced_progress.py": 1754158588.408245,
      "tests/unit/application/cli/test_init_cmd.py": 1754158084.9744027,
      "tests/unit/application/cli/test_config_validation.py": 1754158256.731348,
      "tests/unit/application/cli/test_setup_wizard.py": 1754158256.5525293,
      "tests/unit/application/cli/test_ingest_phases.py": 1754158256.7326307,
      "tests/unit/application/cli/test_requirements_commands.py": 1754158255.6638465,
      "tests/unit/application/cli/test_help.py": 1754158256.7270865,
      "tests/unit/application/promises/test_basic_promise.py": 1754158588.4095502,
      "tests/unit/application/promises/test_timeout.py": 1754158588.4104886,
      "tests/unit/application/promises/__init__.py": 1749362091.404768,
      "tests/unit/application/orchestration/__init__.py": 1752081103.1037977,
      "tests/unit/application/orchestration/test_workflow_manager.py": 1754158588.41103,
      "tests/unit/application/prompts/__init__.py": 1751397052.774335,
      "tests/unit/application/prompts/test_auto_tuning.py": 1754158588.4132123,
      "tests/unit/application/edrr/test_auto_progress.py": 1754158256.1989439,
      "tests/unit/application/edrr/test_edrr_phase_transitions.py": 1754158256.654234,
      "tests/unit/application/edrr/test_edrr_coordinator.py": 1754158588.4891758,
      "tests/unit/application/edrr/test_phase_progression.py": 1754158588.4919748,
      "tests/unit/application/edrr/test_manifest_parser.py": 1754158588.6120512,
      "tests/unit/application/edrr/test_micro_cycle_execution.py": 1754158588.61602,
      "tests/unit/application/edrr/test_templates.py": 1754158588.6191375,
      "tests/unit/application/edrr/test_micro_cycle_hooks.py": 1754158588.6208904,
      "tests/unit/application/edrr/test_coordinator.py": 1754158256.1105187,
      "tests/unit/application/edrr/test_execute_single_agent_task.py": 1754158588.622044,
      "tests/unit/application/edrr/test_recursive_edrr_coordinator.py": 1754158588.6880267,
      "tests/unit/application/edrr/__init__.py": 1752081103.0999413,
      "tests/unit/application/edrr/test_enhanced_recursion_termination.py": 1754158588.6918807,
      "tests/unit/application/edrr/test_coordinator_phases_simple.py": 1754158588.6962829,
      "tests/unit/application/edrr/test_progress_recursion.py": 1754158588.7014053,
      "tests/unit/application/edrr/test_edrr_coordinator_enhanced.py": 1754158588.721071,
      "tests/unit/application/edrr/test_coordinator_core.py": 1754158588.7578242,
      "tests/unit/application/edrr/test_micro_cycle.py": 1754158588.7632434,
      "tests/unit/application/edrr/test_recursion_features.py": 1754158588.792105,
      "tests/unit/application/edrr/test_result_analysis.py": 1754158588.796965,
      "tests/unit/application/wsde/__init__.py": 1753749403.3960118,
      "tests/unit/application/wsde/test_wsde_utils.py": 1754158256.1982565,
      "tests/unit/domain/test_code_analysis_interfaces.py": 1753212133.591426,
      "tests/unit/domain/test_wsde_expertise_score.py": 1752081103.1067703,
      "tests/unit/domain/test_wsde_phase_role_rotation.py": 1752081103.106881,
      "tests/unit/domain/test_primus_selection_edge_cases.py": 1754150791.5510535,
      "tests/unit/domain/__init__.py": 1753230317.2072525,
      "tests/unit/domain/test_wsde_team.py": 1752081103.107103,
      "tests/unit/domain/test_requirement_interfaces.py": 1754150791.5524871,
      "tests/unit/domain/test_wsde_facade_roles.py": 1753737683.55111,
      "tests/unit/domain/test_memory_type.py": 1754150791.54989,
      "tests/unit/domain/test_wsde_core_methods.py": 1754150791.553509,
      "tests/unit/domain/test_wsde_primus_selection.py": 1752081103.1069875,
      "tests/unit/domain/test_wsde_voting_logic.py": 1753498752.805306,
      "tests/unit/domain/models/test_wsde_context_driven_leadership.py": 1754150749.274516,
      "tests/unit/domain/models/test_wsde_dialectical_reasoning.py": 1754150749.275991,
      "tests/unit/domain/models/test_wsde_base_methods.py": 1754150749.2709978,
      "tests/unit/domain/models/test_wsde.py": 1752081103.105873,
      "tests/unit/domain/models/__init__.py": 1753230317.2073743,
      "tests/unit/domain/models/test_project_model.py": 1752081103.1057177,
      "tests/unit/domain/models/test_wsde_team.py": 1752081103.1065373,
      "tests/unit/domain/models/test_wsde_code_improvements.py": 1754150749.2712703,
      "tests/unit/domain/models/test_wsde_dynamic_workflows.py": 1752081103.106411,
      "tests/unit/domain/models/test_wsde_security_checks.py": 1753212133.5913582,
      "tests/integration/__init__.py": 1753230317.2061715,
      "tests/integration/interface/test_bridge_consistency.py": 1754159660.5630536,
      "tests/integration/interface/__init__.py": 1752081103.087321,
      "tests/integration/interface/test_small_workflow_bridge.py": 1754159673.9616714,
      "tests/integration/interface/test_multi_agent_collaboration.py": 1753980530.2163837,
      "tests/integration/memory/test_cross_store_sync.py": 1754106340.4070792,
      "tests/integration/config/__init__.py": 1753230317.2063053,
      "tests/integration/config/test_unified_loader.py": 1754159526.2349575,
      "tests/integration/general/test_graph_memory_edrr_integration.py": 1753737683.5503898,
      "tests/integration/general/test_complex_workflow.py": 1753459299.7842505,
      "tests/integration/general/test_cli_webui_agentapi_pipeline.py": 1754159581.3373897,
      "tests/integration/general/test_provider_system.py": 1754107096.8926127,
      "tests/integration/general/test_agent_api.py": 1754159543.2055273,
      "tests/integration/general/test_openai_provider.py": 1753212133.5882225,
      "tests/integration/general/test_config_loader.py": 1754159597.4530303,
      "tests/integration/general/test_delegate_task.py": 1753212133.5855992,
      "tests/integration/general/test_edrr_micro_cycle_auto_transition.py": 1753212133.586214,
      "tests/integration/general/test_chromadb_client_connection.py": 1753850089.3061788,
      "tests/integration/general/test_end_to_end_workflow.py": 1753459299.784537,
      "tests/integration/general/test_edrr_dynamic_roles.py": 1753212133.5860336,
      "tests/integration/general/test_edrr_micro_cycle_context.py": 1753212133.586306,
      "tests/integration/general/test_webui_pages.py": 1754159660.561671,
      "tests/integration/general/test_chromadb_memory_store_integration.py": 1753371393.170049,
      "tests/integration/general/test_edrr_manifest_dependencies.py": 1753212133.586122,
      "tests/integration/general/test_webui_setup.py": 1754159660.56218,
      "tests/integration/general/test_lmstudio_provider.py": 1753212133.5878594,
      "tests/integration/general/test_wsde_edrr_integration_end_to_end.py": 1753930966.1213434,
      "tests/integration/general/test_edrr_auto_phase_transition.py": 1753212133.5859475,
      "tests/integration/general/test_wsde_memory_edrr_integration.py": 1753212133.5899875,
      "tests/integration/general/test_collaborative_voting.py": 1753911249.705711,
      "tests/integration/general/test_wsde_peer_review_memory_integration.py": 1754072006.2196698,
      "tests/integration/general/test_edrr_real_llm_integration.py": 1753212133.5866127,
      "tests/integration/general/test_ingestion_pipeline.py": 1753582889.3404694,
      "tests/integration/general/test_refactor_workflow.py": 1753459299.7847853,
      "tests/integration/general/test_anthropic_provider.py": 1753212133.5833313,
      "tests/integration/general/test_cli_webui_parity.py": 1754159581.3379574,
      "tests/integration/general/__init__.py": 1753230317.2065089,
      "tests/integration/general/test_requirements_gathering.py": 1753459299.7850163,
      "tests/integration/general/test_agent_api_security.py": 1754159560.5149467,
      "tests/integration/general/test_memory_agent_integration.py": 1753662662.6467419,
      "tests/integration/general/test_prompt_auto_tuning.py": 1754159628.8041577,
      "tests/integration/general/test_feature_flag_integration.py": 1753212133.5869083,
      "tests/integration/general/test_agentapi_routes.py": 1754159560.5163097,
      "tests/integration/general/test_wsde_edrr_integration_advanced.py": 1753932332.7219074,
      "tests/integration/general/test_delegate_task_primus_selection.py": 1753212133.5857706,
      "tests/integration/general/test_agent_system_integration.py": 1754159560.5159469,
      "tests/integration/general/test_edrr_primus_rotation.py": 1753212133.5865436,
      "tests/integration/general/test_config_loader_integration.py": 1754159597.4539447,
      "tests/integration/general/test_project_state_analyzer.py": 1754159628.8036103,
      "tests/integration/general/test_wsde_edrr_component_interactions.py": 1753212133.589736,
      "tests/integration/general/test_multi_agent_roles_and_voting.py": 1753212133.5880399,
      "tests/integration/general/test_kuzu_memory_fallback.py": 1753212133.587544,
      "tests/integration/general/test_graph_memory_error_handling.py": 1754159613.1090386,
      "tests/integration/general/test_edrr_mock_llm_integration.py": 1753212133.5863955,
      "tests/integration/general/test_kuzu_memory_integration.py": 1753662662.6463916,
      "tests/integration/general/test_delegate_task_consensus.py": 1753212133.585683,
      "tests/integration/general/test_self_analyzer.py": 1754159644.5252802,
      "tests/integration/general/test_wsde_peer_review_workflow.py": 1753212133.5902948,
      "tests/integration/general/test_error_handling_at_integration_points.py": 1753212133.5868282,
      "tests/integration/general/test_webui_e2e_workflows.py": 1754159660.5611687,
      "tests/integration/general/test_edrr_peer_review_voting.py": 1753212133.5864642,
      "tests/integration/general/test_agentapi.py": 1754107096.900886,
      "tests/integration/general/test_provider_system_configurations.py": 1754159644.524492,
      "tests/integration/general/test_comprehensive_workflow.py": 1753212133.5850449,
      "tests/integration/general/test_non_hierarchical_decision.py": 1753212133.5881126,
      "tests/integration/general/test_code_analysis_edrr_integration.py": 1753212133.5840847,
      "tests/integration/general/test_delegate_task_workflow.py": 1753212133.5858412,
      "tests/integration/general/test_query_router_integration.py": 1754106340.4138014,
      "tests/integration/general/test_agent_collaboration_integration.py": 1753212133.5830147,
      "tests/integration/general/test_config_loader_workflow.py": 1754159597.4546123,
      "tests/integration/general/test_collaborative_decision_making.py": 1753212133.58444,
      "tests/integration/general/test_code_analysis_wsde_integration.py": 1753212133.584357,
      "tests/integration/general/test_provider_system_async.py": 1754159628.8049388,
      "tests/integration/edrr/test_wsde_edrr_integration.py": 1754159526.2364101,
      "tests/integration/edrr/__init__.py": 1752081103.0871758,
      "tests/behavior/test_webui_spec_editor_extended.py": 1754006428.9504056,
      "tests/behavior/test_cross_interface_consistency.py": 1753498752.80267,
      "tests/behavior/test_requirements_wizard.py": 1753212133.581825,
      "tests/behavior/test_agent_api_interactions.py": 1754006428.9507146,
      "tests/behavior/test_webui_navigation_prompts.py": 1754006428.9508815,
      "tests/behavior/conftest.py": 1753850089.3039632,
      "tests/behavior/test_config_loader.py": 1753287084.4647446,
      "tests/behavior/test_delegate_task.py": 1753287084.4654806,
      "tests/behavior/test_edrr_cycle.py": 1753287084.4660273,
      "tests/behavior/test_interactive_workflow.py": 1754148682.1090717,
      "tests/behavior/test_webui_spec_editor.py": 1753287084.4676042,
      "tests/behavior/test_webui_integration.py": 1754006428.9511642,
      "tests/behavior/test_cli_ux_enhancements.py": 1754006428.9513137,
      "tests/behavior/test_retry_mechanism.py": 1754013600.2847679,
      "tests/behavior/test_uxbridge.py": 1754006428.951475,
      "tests/behavior/test_simple_standalone.py": 1751760740.8965237,
      "tests/behavior/test_requirements_wizard_navigation.py": 1753212133.5819345,
      "tests/behavior/test_edrr_real_llm_integration.py": 1753287084.4661314,
      "tests/behavior/test_cross_interface_consistency_extended.py": 1754009405.1989496,
      "tests/behavior/test_simple.py": 1753287084.4669282,
      "tests/behavior/test_cli_webui_parity.py": 1754148682.1113274,
      "tests/behavior/__init__.py": 1753233344.5495346,
      "tests/behavior/test_requirement_analysis.py": 1753287084.4665651,
      "tests/behavior/test_micro_edrr_cycle.py": 1753911249.7053263,
      "tests/behavior/test_enhanced_chromadb_integration.py": 1754006428.9518218,
      "tests/behavior/test_devsynth_doctor.py": 1753287084.4656935,
      "tests/behavior/test_webui_doctor.py": 1754006395.0257394,
      "tests/behavior/test_validate_manifest_command.py": 1753287084.467145,
      "tests/behavior/test_validate_metadata_command.py": 1753287084.4672527,
      "tests/behavior/test_webui_commands.py": 1754006428.9520714,
      "tests/behavior/test_setup_wizard.py": 1753287084.4668186,
      "tests/behavior/test_doctor_command.py": 1753287084.4658039,
      "tests/behavior/test_delegate_task_consensus.py": 1753287084.465593,
      "tests/behavior/test_webui.py": 1754006428.952273,
      "tests/behavior/test_agentapi.py": 1754148682.1132078,
      "tests/behavior/test_chromadb_integration.py": 1754006428.9524252,
      "tests/behavior/test_webui_onboarding_flow.py": 1753287084.4673643,
      "tests/behavior/test_cli_commands.py": 1754013642.6660192,
      "tests/behavior/test_uxbridge_cli_webui.py": 1754006428.9526186,
      "tests/behavior/test_project_initialization.py": 1753850089.3058267,
      "tests/behavior/test_alignment_metrics_command.py": 1753287084.4639518,
      "tests/behavior/test_doctor_missing_env.py": 1753287084.4659169,
      "tests/behavior/test_api_stub_usage.py": 1753287084.4640737,
      "tests/behavior/features/__init__.py": 1752081103.0799882,
      "tests/behavior/features/general/__init__.py": 1753230317.2051935,
      "tests/behavior/features/examples/__init__.py": 1752081103.0803008,
      "tests/behavior/steps/test_self_analyzer_steps.py": 1754157785.2344007,
      "tests/behavior/steps/test_webui_gather_wizard_steps.py": 1754157785.2353158,
      "tests/behavior/steps/test_wsde_voting_mechanisms_steps.py": 1754157785.2365105,
      "tests/behavior/steps/test_webui_inspect_config_steps.py": 1754157785.2368531,
      "tests/behavior/steps/test_delegate_task_consensus_steps.py": 1754157785.2372856,
      "tests/behavior/steps/test_wsde_edrr_integration_steps.py": 1754157785.2381825,
      "tests/behavior/steps/test_webui_doctor_steps.py": 1754157785.2385728,
      "tests/behavior/steps/test_apispec_generation_steps.py": 1754157785.2387526,
      "tests/behavior/steps/test_training_materials_steps.py": 1754157785.2391653,
      "tests/behavior/steps/test_metrics_steps.py": 1754157785.2397323,
      "tests/behavior/steps/config_loader_steps.py": 1754006692.9370902,
      "tests/behavior/steps/uxbridge_shared_steps.py": 1754006692.9372594,
      "tests/behavior/steps/test_webui_analysis_steps.py": 1754157785.2402365,
      "tests/behavior/steps/test_webui_webapp_steps.py": 1754157785.2405565,
      "tests/behavior/steps/test_requirement_analysis_steps.py": 1754157785.240872,
      "tests/behavior/steps/test_memory_manager_steps.py": 1754157785.2414358,
      "tests/behavior/steps/test_api_stub_steps.py": 1754157785.241743,
      "tests/behavior/steps/doctor_command_steps.py": 1754006692.9375384,
      "tests/behavior/steps/test_serve_command_steps.py": 1754157785.242086,
      "tests/behavior/steps/test_micro_edrr_cycle_steps.py": 1754157785.2424748,
      "tests/behavior/steps/test_simple_addition_steps.py": 1754157785.2427304,
      "tests/behavior/steps/webui_integration_steps.py": 1754006692.9379227,
      "tests/behavior/steps/test_webui_config_steps.py": 1754157785.243302,
      "tests/behavior/steps/test_consensus_building_steps.py": 1754157785.2443807,
      "tests/behavior/steps/test_wsde_message_passing_peer_review_steps.py": 1754159317.2812576,
      "tests/behavior/steps/enhanced_chromadb_steps.py": 1754006692.9382396,
      "tests/behavior/steps/test_project_ingestion_steps.py": 1754157785.245519,
      "tests/behavior/steps/test_multi_disciplinary_dialectical_reasoning_steps.py": 1754157785.2470343,
      "tests/behavior/steps/spec_command_steps.py": 1754006692.9385176,
      "tests/behavior/steps/test_enhanced_dialectical_reasoning_steps.py": 1754157785.2484283,
      "tests/behavior/steps/test_project_initialization_steps.py": 1754157785.2486746,
      "tests/behavior/steps/test_memory_backend_integration_steps.py": 1754159317.2866101,
      "tests/behavior/steps/uxbridge_steps.py": 1754006692.9387677,
      "tests/behavior/steps/test_wsde_memory_integration_steps.py": 1754157785.2505286,
      "tests/behavior/steps/test_doctor_missing_env_steps.py": 1754157785.2507513,
      "tests/behavior/steps/test_webui_apispec_steps.py": 1754157785.251094,
      "tests/behavior/steps/test_agent_api_steps.py": 1754157785.2514956,
      "tests/behavior/steps/edrr_coordinator_steps.py": 1754006692.952887,
      "tests/behavior/steps/test_webui_refactor_steps.py": 1754157785.2517695,
      "tests/behavior/steps/chromadb_steps.py": 1754006692.9395611,
      "tests/behavior/steps/test_config_enable_feature_steps.py": 1754157785.2520418,
      "tests/behavior/steps/test_docs_fetch_steps.py": 1754157785.2523832,
      "tests/behavior/steps/test_code_command_steps.py": 1754157785.2526436,
      "tests/behavior/steps/edrr_enhanced_recursion_steps.py": 1754006785.6017356,
      "tests/behavior/steps/test_webui_spec_editor_steps.py": 1754157785.252778,
      "tests/behavior/steps/test_webui_navigation_prompts_steps.py": 1754157785.2529535,
      "tests/behavior/steps/test_methodology_adapters_steps.py": 1754157785.2534175,
      "tests/behavior/steps/test_webui_dbschema_steps.py": 1754157785.2539108,
      "tests/behavior/steps/test_additional_storage_backends_steps.py": 1754157785.2547274,
      "tests/behavior/steps/edrr_enhanced_phase_transitions_steps.py": 1754006785.6020827,
      "tests/behavior/steps/alignment_metrics_steps.py": 1754006692.9405725,
      "tests/behavior/steps/test_requirements_wizard_steps.py": 1754157785.254973,
      "tests/behavior/steps/test_webui_test_metrics_steps.py": 1754157785.255212,
      "tests/behavior/steps/wsde_edrr_integration_steps.py": 1754006692.954158,
      "tests/behavior/steps/test_webui_synthesis_steps.py": 1754157785.2557645,
      "tests/behavior/steps/webui_spec_editor_steps.py": 1754006692.9409773,
      "tests/behavior/steps/test_simple_coordinator_steps.py": 1754159317.2947755,
      "tests/behavior/steps/test_wsde_memory_integration_fixed_steps.py": 1754157785.2579916,
      "tests/behavior/steps/project_init_steps.py": 1754006692.9416134,
      "tests/behavior/steps/test_edrr_real_llm_integration_steps.py": 1754157785.258476,
      "tests/behavior/steps/test_validate_manifest_command_steps.py": 1754157785.2586403,
      "tests/behavior/steps/test_mddr_gathering_perspectives_steps.py": 1754157785.2590382,
      "tests/behavior/steps/test_user_guide_enhancement_steps.py": 1754157785.2594945,
      "tests/behavior/steps/test_alignment_metrics_steps.py": 1754157785.2597423,
      "tests/behavior/steps/webui_onboarding_steps.py": 1754057113.886412,
      "tests/behavior/steps/test_mddr_identifying_conflicts_steps.py": 1754157785.2600658,
      "tests/behavior/steps/test_agent_api_health_metrics_steps.py": 1754157785.260508,
      "tests/behavior/steps/test_setup_wizard_steps.py": 1754157785.260915,
      "tests/behavior/steps/test_retry_mechanism_steps.py": 1754157785.2611728,
      "tests/behavior/steps/test_webui_command_steps.py": 1754157785.2615228,
      "tests/behavior/steps/test_edrr_cycle_steps.py": 1754108515.9744425,
      "tests/behavior/steps/test_devsynth_doctor_steps.py": 1754157785.2618482,
      "tests/behavior/steps/test_config_loader_steps.py": 1754157785.262006,
      "tests/behavior/steps/test_ast_code_analysis_steps.py": 1754159317.3015296,
      "tests/behavior/steps/test_version_aware_documentation_steps.py": 1754157785.2646298,
      "tests/behavior/steps/test_run_pipeline_command_steps.py": 1754157785.2651076,
      "tests/behavior/steps/test_code_transformer_steps.py": 1754157785.2658913,
      "tests/behavior/steps/test_interactive_flow_steps.py": 1754157785.2661004,
      "tests/behavior/steps/cross_interface_consistency_extended_steps.py": 1754006692.9424746,
      "tests/behavior/steps/edrr_real_llm_integration_steps.py": 1754006692.9555418,
      "tests/behavior/steps/test_webui_docs_generation_steps.py": 1754157785.2664015,
      "tests/behavior/steps/validate_manifest_command_steps.py": 1754006692.9427655,
      "tests/behavior/steps/__init__.py": 1753850089.304302,
      "tests/behavior/steps/test_mddr_evaluation_steps.py": 1754157785.2668283,
      "tests/behavior/steps/test_enhanced_chromadb_steps.py": 1754157785.2672758,
      "tests/behavior/steps/test_webui_alignment_metrics_steps.py": 1754157785.2674732,
      "tests/behavior/steps/test_workflow_execution_steps.py": 1754157785.2677565,
      "tests/behavior/steps/test_memory_adapter_integration_steps.py": 1754157785.2679799,
      "tests/behavior/steps/test_cli_ux_enhancements_steps.py": 1754157785.2683923,
      "tests/behavior/steps/test_code_generation_steps.py": 1754157785.2686126,
      "tests/behavior/steps/test_mddr_domain_knowledge_integration_steps.py": 1754157785.2696002,
      "tests/behavior/steps/test_webui_integration_steps.py": 1754157785.2705424,
      "tests/behavior/steps/test_project_state_analyzer_steps.py": 1754157785.2711177,
      "tests/behavior/steps/test_simple_steps.py": 1754157785.2714741,
      "tests/behavior/steps/test_webui_commands_steps.py": 1754157785.271821,
      "tests/behavior/steps/test_performance_testing_steps.py": 1754157785.2722168,
      "tests/behavior/steps/test_environment_variables_steps.py": 1754157785.272401,
      "tests/behavior/steps/test_cli_commands_steps.py": 1754159317.3104463,
      "tests/behavior/steps/test_mddr_common.py": 1753233344.552169,
      "tests/behavior/steps/test_mddr_common_steps.py": 1754157785.2738502,
      "tests/behavior/steps/webui_spec_editor_extended_steps.py": 1754006692.9434311,
      "tests/behavior/steps/test_interactive_requirements_steps.py": 1754157785.2740042,
      "tests/behavior/steps/test_ingest_command_steps.py": 1754157785.274318,
      "tests/behavior/steps/test_delegate_task_steps.py": 1754108515.9864523,
      "tests/behavior/steps/test_enhanced_chromadb_integration_steps.py": 1754157785.2746885,
      "tests/behavior/steps/test_project_documentation_ingestion_steps.py": 1754157785.2748544,
      "tests/behavior/steps/agent_api_steps.py": 1754006692.9436932,
      "tests/behavior/steps/test_webui_validate_metadata_steps.py": 1754157785.2750342,
      "tests/behavior/steps/test_webui_requirements_wizard_with_state_steps.py": 1754157785.2757325,
      "tests/behavior/steps/test_invalid_config_steps.py": 1754157785.275948,
      "tests/behavior/steps/test_interactive_init_wizard_steps.py": 1754157785.2763457,
      "tests/behavior/steps/devsynth_doctor_steps.py": 1754006692.943932,
      "tests/behavior/steps/delegate_task_consensus_steps.py": 1754006692.9440382,
      "tests/behavior/steps/cross_interface_consistency_steps.py": 1753498752.798132,
      "tests/behavior/steps/test_edrr_enhanced_memory_integration_steps.py": 1754159317.3151982,
      "tests/behavior/steps/test_error_handling_steps.py": 1754157785.2781677,
      "tests/behavior/steps/setup_wizard_steps.py": 1754006692.9447079,
      "tests/behavior/steps/edrr_cycle_steps.py": 1754007309.4769616,
      "tests/behavior/steps/test_documentation_utility_functions_steps.py": 1754157785.2786248,
      "tests/behavior/steps/test_project_init_steps.py": 1754157785.2788732,
      "tests/behavior/steps/test_edrr_coordinator_steps.py": 1754159317.3173435,
      "tests/behavior/steps/test_webui_spec_editor_extended_steps.py": 1754157785.2804463,
      "tests/behavior/steps/test_dbschema_generation_steps.py": 1754157785.2805917,
      "tests/behavior/steps/test_requirements_management_steps.py": 1754157785.2807183,
      "tests/behavior/steps/cli_commands_steps.py": 1754006692.9451263,
      "tests/behavior/steps/micro_edrr_cycle_steps.py": 1754006692.9578643,
      "tests/behavior/steps/edrr_enhanced_memory_integration_steps.py": 1754006692.958103,
      "tests/behavior/steps/test_validate_metadata_steps.py": 1754157785.2808418,
      "tests/behavior/steps/test_webui_steps.py": 1754157785.2816272,
      "tests/behavior/steps/test_refactor_command_steps.py": 1754157785.2819746,
      "tests/behavior/steps/test_doctor_command_steps.py": 1754157785.2821336,
      "tests/behavior/steps/test_prompt_management_steps.py": 1754159317.321103,
      "tests/behavior/steps/test_wsde_agent_model_steps.py": 1754157785.2850764,
      "tests/behavior/steps/test_doctor_steps.py": 1754157785.2852335,
      "tests/behavior/steps/test_edrr_enhanced_recursion_steps.py": 1754159317.325388,
      "tests/behavior/steps/api_stub_steps.py": 1754006692.946147,
      "tests/behavior/steps/recursive_edrr_coordinator_steps.py": 1754006692.9592557,
      "tests/behavior/steps/test_hybrid_memory_query_patterns_steps.py": 1754159317.3263195,
      "tests/behavior/steps/test_promise_system_steps.py": 1754157785.2886071,
      "tests/behavior/steps/test_inspect_code_command_steps.py": 1754157785.289106,
      "tests/behavior/steps/test_webui_ingestion_steps.py": 1754157785.2894242,
      "tests/behavior/steps/test_analyze_commands_steps.py": 1754159317.3283665,
      "tests/behavior/steps/test_non_hierarchical_collaboration_steps.py": 1754157785.2911773,
      "tests/behavior/steps/test_validate_metadata_command_steps.py": 1754157785.2914202,
      "tests/behavior/steps/test_requirements_gathering_steps.py": 1754157785.2916431,
      "tests/behavior/steps/test_uxbridge_shared_steps.py": 1754157785.2919421,
      "tests/behavior/steps/test_multi_layered_memory_system_steps.py": 1754157785.2927566,
      "tests/behavior/steps/webui_commands_steps.py": 1754006692.946846,
      "tests/behavior/steps/test_requirements_wizard_navigation_steps.py": 1754157785.2929697,
      "tests/behavior/steps/delegate_task_steps.py": 1754006692.9469776,
      "tests/behavior/steps/test_documentation_ingestion_steps.py": 1754157785.2938375,
      "tests/behavior/steps/cli_ux_enhancements_steps.py": 1754006692.947127,
      "tests/behavior/steps/test_advanced_graph_memory_features_steps.py": 1754159317.3333805,
      "tests/behavior/steps/test_mddr_synthesis_generation_steps.py": 1754157785.2952805,
      "tests/behavior/steps/test_webui_serve_steps.py": 1754157785.295869,
      "tests/behavior/steps/doctor_missing_env_steps.py": 1754006692.94734,
      "tests/behavior/steps/webui_doctor_steps.py": 1754006692.9604473,
      "tests/behavior/steps/test_generation_steps.py": 1754157785.296196,
      "tests/behavior/steps/test_webui_validate_manifest_steps.py": 1754157785.2965329,
      "tests/behavior/steps/test_edrr_enhanced_phase_transitions_steps.py": 1754159317.3372076,
      "tests/behavior/steps/test_chromadb_steps.py": 1754157785.2987564,
      "tests/behavior/steps/test_recursive_edrr_coordinator_steps.py": 1754157785.299481,
      "tests/behavior/steps/test_wsde_memory_integration_fixed2_steps.py": 1754157785.3004544,
      "tests/behavior/steps/webui_steps.py": 1754006692.9479644,
      "tests/behavior/steps/test_chromadb_integration_steps.py": 1754157785.300662,
      "tests/behavior/steps/webui_navigation_prompts_steps.py": 1754006692.9480944,
      "tests/behavior/steps/code_command_steps.py": 1754006692.9482102,
      "tests/behavior/steps/requirement_analysis_steps.py": 1754006692.9483104,
      "tests/behavior/steps/validate_metadata_command_steps.py": 1754006692.9484074,
      "tests/behavior/steps/test_retry_steps.py": 1754158059.9773173,
      "tests/behavior/steps/test_memory_context_steps.py": 1754157785.3014333,
      "tests/behavior/steps/test_uxbridge_steps.py": 1754157785.3016624,
      "tests/behavior/steps/test_cross_interface_consistency_extended_steps.py": 1754157785.3024943,
      "tests/behavior/steps/test_webapp_generation_steps.py": 1754157785.3026307,
      "tests/behavior/steps/test_validate_manifest_steps.py": 1754157785.30283,
      "tests/behavior/steps/test_webui_onboarding_steps.py": 1754157785.3030474,
      "tests/behavior/steps/test_spec_command_steps.py": 1754157785.303216,
      "tests/behavior/steps/test_generate_docs_steps.py": 1754157785.303354,
      "tests/behavior/steps/wsde_peer_review_steps.py": 1753371393.1693435,
      "tests/performance/test_orchestration_benchmarks.py": 1752968154.9930913,
      "tests/performance/test_provider_benchmarks.py": 1752968154.9932022,
      "tests/performance/__init__.py": 1752968154.9928706,
      "tests/performance/test_cache_benchmarks.py": 1753050872.2147422,
      "tests/performance/test_memory_benchmarks.py": 1752968154.9929826,
      "tests/property/__init__.py": 1753850089.3063846,
      "tests/property/test_core_values_properties.py": 1753850089.3064468,
      "tests/behavior/simple_addition.feature": 1754159967.2425125,
      "tests/behavior/features/webui_inspect_config.feature": 1753936209.244697,
      "tests/behavior/features/webui_serve.feature": 1753936475.4548466,
      "tests/behavior/features/webui_validate_manifest.feature": 1753936235.8938584,
      "tests/behavior/features/webui_docs_generation.feature": 1753936319.8184516,
      "tests/behavior/features/webui_gather_wizard.feature": 1753936604.508964,
      "tests/behavior/features/webui_alignment_metrics.feature": 1753936183.2423484,
      "tests/behavior/features/webui_webapp.feature": 1753936442.6349735,
      "tests/behavior/features/webui_test_metrics.feature": 1753936291.7459922,
      "tests/behavior/features/webui_refactor.feature": 1753936410.0949757,
      "tests/behavior/features/webui_ingestion.feature": 1753936348.7307677,
      "tests/behavior/features/wsde_peer_review.feature": 1753371393.1679592,
      "tests/behavior/features/webui_config.feature": 1753937421.9684029,
      "tests/behavior/features/webui_requirements_wizard_with_state.feature": 1753997114.7037907,
      "tests/behavior/features/webui_command.feature": 1753935671.4636106,
      "tests/behavior/features/webui_validate_metadata.feature": 1753936262.6955018,
      "tests/behavior/features/webui_analysis.feature": 1753937378.8458512,
      "tests/behavior/features/webui_diagnostics.feature": 1753936570.9021127,
      "tests/behavior/features/webui_apispec.feature": 1753936378.7807095,
      "tests/behavior/features/webui_synthesis.feature": 1753937400.3013842,
      "tests/behavior/features/webui_dbschema.feature": 1753936507.5998921,
      "tests/behavior/features/general/validate_manifest.feature": 1753212133.5588126,
      "tests/behavior/features/general/docs_fetch.feature": 1753212133.5453577,
      "tests/behavior/features/general/multi_disciplinary_dialectical_reasoning.feature": 1753212133.5543826,
      "tests/behavior/features/general/documentation_utility_functions.feature": 1753212133.5458827,
      "tests/behavior/features/general/enhanced_dialectical_reasoning.feature": 1753212133.5516725,
      "tests/behavior/features/general/generate_docs.feature": 1753212133.552206,
      "tests/behavior/features/general/chromadb_integration.feature": 1753212133.542206,
      "tests/behavior/features/general/methodology_adapters.feature": 1753212133.5542417,
      "tests/behavior/features/general/code_command.feature": 1753212133.5429432,
      "tests/behavior/features/general/edrr_enhanced_recursion.feature": 1753212133.546545,
      "tests/behavior/features/general/validate_manifest_command.feature": 1753212133.5588796,
      "tests/behavior/features/general/ast_code_analysis.feature": 1753212133.5418885,
      "tests/behavior/features/general/memory_backend_integration.feature": 1753212133.554028,
      "tests/behavior/features/general/retry_mechanism.feature": 1753212133.5576112,
      "tests/behavior/features/general/webui.feature": 1753212133.5593169,
      "tests/behavior/features/general/interactive_init_wizard.feature": 1753212133.553211,
      "tests/behavior/features/general/invalid_config.feature": 1753749403.3937366,
      "tests/behavior/features/general/dbschema_generation.feature": 1753212133.5443885,
      "tests/behavior/features/general/micro_edrr_cycle.feature": 1753911249.704951,
      "tests/behavior/features/general/multi_layered_memory_system.feature": 1753212133.5544562,
      "tests/behavior/features/general/interactive_requirements.feature": 1753212133.553429,
      "tests/behavior/features/general/error_handling.feature": 1753212133.5521302,
      "tests/behavior/features/general/webui_navigation_prompts.feature": 1753371393.1676507,
      "tests/behavior/features/general/webui_spec_editor.feature": 1753212133.5599232,
      "tests/behavior/features/general/cli_commands.feature": 1753212133.542399,
      "tests/behavior/features/general/interactive_flow_webui.feature": 1753212133.5529985,
      "tests/behavior/features/general/config_loader.feature": 1753212133.5435734,
      "tests/behavior/features/general/run_pipeline_command.feature": 1753212133.5576925,
      "tests/behavior/features/general/webui_onboarding_flow.feature": 1753212133.559821,
      "tests/behavior/features/general/webui_spec_editor_extended.feature": 1753212133.560257,
      "tests/behavior/features/general/devsynth_doctor.feature": 1753212133.5452917,
      "tests/behavior/features/general/serve_command.feature": 1753212133.5578296,
      "tests/behavior/features/general/delegate_task.feature": 1753212133.544907,
      "tests/behavior/features/general/edrr_cycle.feature": 1753212133.5461426,
      "tests/behavior/features/general/wsde_memory_integration.feature": 1753212133.560859,
      "tests/behavior/features/general/inspect_code_command.feature": 1753212133.5525837,
      "tests/behavior/features/general/self_analyzer.feature": 1753212133.5577614,
      "tests/behavior/features/general/uxbridge.feature": 1753212133.5584207,
      "tests/behavior/features/general/ingest_command.feature": 1753212133.552512,
      "tests/behavior/features/general/webapp_generation.feature": 1753212133.5592468,
      "tests/behavior/features/general/edrr_real_llm_integration.feature": 1753212133.5497587,
      "tests/behavior/features/general/alignment_metrics_command.feature": 1753212133.541287,
      "tests/behavior/features/general/requirements_wizard_navigation.feature": 1753212133.557538,
      "tests/behavior/features/general/apispec_generation.feature": 1753212133.541807,
      "tests/behavior/features/general/promise_system.feature": 1753212133.5553446,
      "tests/behavior/features/general/doctor_command.feature": 1753212133.5456393,
      "tests/behavior/features/general/refactor_command.feature": 1753212133.5559,
      "tests/behavior/features/general/analyze_commands.feature": 1753212133.5414982,
      "tests/behavior/features/general/validate_metadata_command.feature": 1753212133.5590658,
      "tests/behavior/features/general/agent_api_health_metrics.feature": 1753212133.5405955,
      "tests/behavior/features/general/uxbridge_cli_webui.feature": 1753212133.5585945,
      "tests/behavior/features/general/requirements_gathering.feature": 1753212133.556808,
      "tests/behavior/features/general/project_initialization.feature": 1753850089.3041828,
      "tests/behavior/features/general/doctor.feature": 1753212133.545425,
      "tests/behavior/features/general/test_generation.feature": 1753212133.5581195,
      "tests/behavior/features/general/consensus_building.feature": 1753212133.5437803,
      "tests/behavior/features/general/config_enable_feature.feature": 1753212133.543282,
      "tests/behavior/features/general/memory_manager.feature": 1753212133.5541682,
      "tests/behavior/features/general/edrr_enhanced_phase_transitions.feature": 1753212133.5464652,
      "tests/behavior/features/general/workflow_execution.feature": 1753212133.5603545,
      "tests/behavior/features/general/user_guide_enhancement.feature": 1753212133.5583498,
      "tests/behavior/features/general/memory_context_system.feature": 1753212133.5540967,
      "tests/behavior/features/general/additional_storage_backends.feature": 1753212133.5400507,
      "tests/behavior/features/general/prompt_management.feature": 1753212133.555432,
      "tests/behavior/features/general/memory_adapter_integration.feature": 1753212133.5539556,
      "tests/behavior/features/general/advanced_graph_memory_features.feature": 1753212133.5401597,
      "tests/behavior/features/general/code_generation.feature": 1753212133.5431232,
      "tests/behavior/features/general/agent_api_interactions.feature": 1753212133.5409293,
      "tests/behavior/features/general/cross_interface_consistency_extended.feature": 1753212133.5443063,
      "tests/behavior/features/general/project_documentation_ingestion.feature": 1753212133.5546846,
      "tests/behavior/features/general/spec_command.feature": 1753678780.4867127,
      "tests/behavior/features/general/environment_variables.feature": 1753212133.5518923,
      "tests/behavior/features/general/project_ingestion.feature": 1753212133.5547636,
      "tests/behavior/features/general/setup_wizard.feature": 1753212133.5579002,
      "tests/behavior/features/general/wsde_agent_model.feature": 1753212133.5604327,
      "tests/behavior/features/general/webui_doctor.feature": 1753212133.5594823,
      "tests/behavior/features/general/wsde_edrr_integration.feature": 1753212133.5607874,
      "tests/behavior/features/general/doctor_missing_env.feature": 1753212133.5457375,
      "tests/behavior/features/general/non_hierarchical_collaboration.feature": 1753212133.5545366,
      "tests/behavior/features/general/edrr_coordinator.feature": 1753212133.545953,
      "tests/behavior/features/general/wsde_message_passing_peer_review.feature": 1753212133.5609353,
      "tests/behavior/features/general/hybrid_memory_query_patterns.feature": 1753212133.5524235,
      "tests/behavior/features/general/requirements_wizard.feature": 1753212133.5571957,
      "tests/behavior/features/general/test_metrics.feature": 1753212133.5582051,
      "tests/behavior/features/general/documentation_ingestion.feature": 1753212133.5458107,
      "tests/behavior/features/general/validate_metadata.feature": 1753212133.5589972,
      "tests/behavior/features/general/api_stub_usage.feature": 1753212133.54172,
      "tests/behavior/features/general/recursive_edrr_coordinator.feature": 1753212133.555829,
      "tests/behavior/features/general/webui_commands.feature": 1753371393.1675158,
      "tests/behavior/features/general/performance_testing.feature": 1753212133.554607,
      "tests/behavior/features/general/training_materials.feature": 1753212133.5582776,
      "tests/behavior/features/general/edrr_enhanced_memory_integration.feature": 1753212133.5462213,
      "tests/behavior/features/general/wsde_voting_mechanisms.feature": 1753212133.5611136,
      "tests/behavior/features/general/enhanced_chromadb_integration.feature": 1753212133.5515332,
      "tests/behavior/features/general/interactive_flow_cli.feature": 1753212133.5529253,
      "tests/behavior/features/general/cross_interface_consistency.feature": 1753212133.5440867,
      "tests/behavior/features/general/cli_ux_enhancements.feature": 1753212133.5427165,
      "tests/behavior/features/general/requirements_management.feature": 1753212133.5568838,
      "tests/behavior/features/general/delegate_task_consensus.feature": 1753212133.5450935,
      "tests/behavior/features/general/requirement_analysis.feature": 1753212133.5563996,
      "tests/behavior/features/general/version_aware_documentation.feature": 1753212133.559182,
      "tests/behavior/features/general/project_state_analyzer.feature": 1753212133.555268,
      "tests/behavior/features/general/code_transformer.feature": 1753212133.5432084,
      "tests/behavior/features/general/webui_integration.feature": 1753212133.5595553,
      "tests/behavior/features/examples/simple_addition.feature": 1752081103.0803633,
      "tests/unit/interface/test_agentapi_class_fixed.py": 1754169919.8466027,
      "tests/unit/interface/test_webui_gather_wizard_with_state_fixed.py": 1754170074.7044466,
      "tests/unit/interface/test_webui_requirements_wizard_fixed.py": 1754170214.8494608
    }
  },
  "pytest_tests/unit": [
    "tests/unit/adapters/llm/test_llm_adapter.py::test_llm_backend_adapter_init_succeeds",
    "tests/unit/adapters/llm/test_llm_adapter.py::test_create_provider_has_expected",
    "tests/unit/adapters/llm/test_llm_adapter.py::test_register_provider_type_has_expected",
    "tests/unit/adapters/llm/test_llm_adapter.py::test_integration_with_openai_provider_has_expected",
    "tests/unit/adapters/llm/test_llm_adapter.py::test_integration_with_anthropic_provider_has_expected",
    "tests/unit/adapters/providers/test_embeddings.py::test_openai_provider_embed_calls_api_succeeds",
    "tests/unit/adapters/providers/test_embeddings.py::test_openai_provider_aembed_calls_api[asyncio]",
    "tests/unit/adapters/providers/test_embeddings.py::test_aembed_function_success_with_lmstudio[asyncio]",
    "tests/unit/adapters/providers/test_embeddings.py::test_aembed_function_error_propagation[asyncio]",
    "tests/unit/adapters/providers/test_embeddings.py::test_openai_provider_aembed_calls_api[trio]",
    "tests/unit/adapters/providers/test_embeddings.py::test_aembed_function_success_with_lmstudio[trio]",
    "tests/unit/adapters/providers/test_embeddings.py::test_aembed_function_error_propagation[trio]",
    "tests/unit/adapters/providers/test_embeddings.py::test_lmstudio_provider_embed_calls_api_succeeds",
    "tests/unit/adapters/providers/test_embeddings.py::test_embed_function_success_with_lmstudio_succeeds",
    "tests/unit/adapters/providers/test_embeddings.py::test_lmstudio_provider_embed_error_succeeds",
    "tests/unit/adapters/providers/test_fallback.py::test_retry_with_exponential_backoff_success_succeeds",
    "tests/unit/adapters/providers/test_fallback.py::test_retry_with_exponential_backoff_failure_raises_error",
    "tests/unit/adapters/providers/test_fallback.py::test_retry_with_exponential_backoff_jitter_succeeds",
    "tests/unit/adapters/providers/test_fallback.py::test_retry_with_exponential_backoff_on_retry_callback_succeeds",
    "tests/unit/adapters/providers/test_fallback.py::test_retry_with_exponential_backoff_retryable_exceptions_raises_error",
    "tests/unit/adapters/providers/test_fallback.py::test_retry_with_exponential_backoff_no_jitter_succeeds",
    "tests/unit/adapters/providers/test_provider_factory.py::test_create_provider_fallbacks_to_lmstudio_succeeds",
    "tests/unit/adapters/providers/test_provider_factory.py::test_create_provider_default_with_missing_key_succeeds",
    "tests/unit/adapters/providers/test_provider_factory.py::test_create_provider_openai_succeeds",
    "tests/unit/adapters/test_provider_factory.py::test_create_provider_env_fallback_has_expected",
    "tests/unit/adapters/test_provider_factory.py::test_explicit_openai_missing_key_raises_error",
    "tests/unit/adapters/test_provider_system.py::test_embed_success_succeeds",
    "tests/unit/adapters/test_provider_system.py::test_embed_error_succeeds",
    "tests/unit/adapters/test_provider_system.py::test_aembed_success_succeeds",
    "tests/unit/adapters/test_provider_system.py::test_aembed_error_succeeds",
    "tests/unit/adapters/test_provider_system.py::test_complete_success_succeeds",
    "tests/unit/adapters/test_provider_system.py::test_complete_error_succeeds",
    "tests/unit/adapters/test_provider_system.py::test_acomplete_success_succeeds",
    "tests/unit/adapters/test_provider_system.py::test_acomplete_error_succeeds",
    "tests/unit/adapters/test_provider_system.py::test_provider_factory_create_provider_succeeds",
    "tests/unit/adapters/test_provider_system.py::test_get_provider_succeeds",
    "tests/unit/adapters/test_provider_system.py::test_base_provider_methods_succeeds",
    "tests/unit/adapters/test_provider_system.py::test_provider_initialization_succeeds[OpenAIProvider-config0]",
    "tests/unit/adapters/test_provider_system.py::test_provider_initialization_succeeds[LMStudioProvider-config1]",
    "tests/unit/adapters/test_provider_system.py::test_fallback_provider_succeeds",
    "tests/unit/adapters/test_provider_system.py::test_get_env_or_default_succeeds",
    "tests/unit/adapters/test_provider_system.py::test_get_provider_config_has_expected",
    "tests/unit/adapters/test_provider_system.py::test_openai_provider_complete_has_expected",
    "tests/unit/adapters/test_provider_system.py::test_openai_provider_complete_error_raises_error",
    "tests/unit/adapters/test_provider_system.py::test_openai_provider_complete_retry_has_expected",
    "tests/unit/adapters/test_provider_system.py::test_openai_provider_acomplete_has_expected",
    "tests/unit/adapters/test_provider_system.py::test_openai_provider_embed_has_expected",
    "tests/unit/adapters/test_provider_system.py::test_lmstudio_provider_complete_has_expected",
    "tests/unit/adapters/test_provider_system.py::test_fallback_provider_async_methods_has_expected",
    "tests/unit/adapters/test_provider_system.py::test_provider_with_empty_inputs_has_expected",
    "tests/unit/adapters/test_provider_system.py::test_provider_factory_injected_config_selects_provider",
    "tests/unit/adapters/test_provider_system.py::test_fallback_provider_respects_order",
    "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_initialization_succeeds",
    "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_generate_text_succeeds",
    "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_generate_text_with_context_succeeds",
    "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_generate_text_no_llm_port_succeeds",
    "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_generate_text_with_context_no_llm_port_succeeds",
    "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_process_abstract_method_succeeds",
    "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_create_wsde_succeeds",
    "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_update_wsde_succeeds",
    "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_get_role_prompt_succeeds",
    "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_generate_text_error_raises_error",
    "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_generate_text_with_context_error_raises_error",
    "tests/unit/application/agents/test_code_agent.py::TestCodeAgent::test_initialization_succeeds",
    "tests/unit/application/agents/test_code_agent.py::TestCodeAgent::test_process_succeeds",
    "tests/unit/application/agents/test_code_agent.py::TestCodeAgent::test_process_with_empty_inputs_succeeds",
    "tests/unit/application/agents/test_code_agent.py::TestCodeAgent::test_get_capabilities_succeeds",
    "tests/unit/application/agents/test_code_agent.py::TestCodeAgent::test_get_capabilities_with_custom_capabilities_succeeds",
    "tests/unit/application/agents/test_code_agent.py::TestCodeAgent::test_process_error_handling_raises_error",
    "tests/unit/application/agents/test_critic_agent.py::TestCriticAgent::test_initialization_succeeds",
    "tests/unit/application/agents/test_critic_agent.py::TestCriticAgent::test_process_succeeds",
    "tests/unit/application/agents/test_critic_agent.py::TestCriticAgent::test_process_with_empty_inputs_succeeds",
    "tests/unit/application/agents/test_critic_agent.py::TestCriticAgent::test_process_no_llm_port_succeeds",
    "tests/unit/application/agents/test_critic_agent.py::TestCriticAgent::test_get_capabilities_succeeds",
    "tests/unit/application/agents/test_critic_agent.py::TestCriticAgent::test_get_capabilities_with_custom_capabilities_succeeds",
    "tests/unit/application/agents/test_critic_agent.py::TestCriticAgent::test_process_error_handling_raises_error",
    "tests/unit/application/agents/test_critic_agent.py::TestCriticAgent::test_create_wsde_error_fails",
    "tests/unit/application/agents/test_diagram_agent.py::TestDiagramAgent::test_initialization_succeeds",
    "tests/unit/application/agents/test_diagram_agent.py::TestDiagramAgent::test_process_succeeds",
    "tests/unit/application/agents/test_diagram_agent.py::TestDiagramAgent::test_process_with_empty_inputs_succeeds",
    "tests/unit/application/agents/test_diagram_agent.py::TestDiagramAgent::test_get_capabilities_succeeds",
    "tests/unit/application/agents/test_diagram_agent.py::TestDiagramAgent::test_get_capabilities_with_custom_capabilities_succeeds",
    "tests/unit/application/agents/test_diagram_agent.py::TestDiagramAgent::test_process_error_handling_raises_error",
    "tests/unit/application/agents/test_documentation_agent.py::TestDocumentationAgent::test_initialization_succeeds",
    "tests/unit/application/agents/test_documentation_agent.py::TestDocumentationAgent::test_process_succeeds",
    "tests/unit/application/agents/test_documentation_agent.py::TestDocumentationAgent::test_process_with_empty_inputs_succeeds",
    "tests/unit/application/agents/test_documentation_agent.py::TestDocumentationAgent::test_get_capabilities_succeeds",
    "tests/unit/application/agents/test_documentation_agent.py::TestDocumentationAgent::test_get_capabilities_with_custom_capabilities_succeeds",
    "tests/unit/application/agents/test_documentation_agent.py::TestDocumentationAgent::test_process_error_handling_raises_error",
    "tests/unit/application/agents/test_multi_language_code.py::TestMultiLanguageCodeAgent::test_initialization_succeeds",
    "tests/unit/application/agents/test_multi_language_code.py::TestMultiLanguageCodeAgent::test_process_supported_languages_succeed[python]",
    "tests/unit/application/agents/test_multi_language_code.py::TestMultiLanguageCodeAgent::test_process_supported_languages_succeed[javascript]",
    "tests/unit/application/agents/test_multi_language_code.py::TestMultiLanguageCodeAgent::test_process_polyglot_succeeds",
    "tests/unit/application/agents/test_multi_language_code.py::TestMultiLanguageCodeAgent::test_process_polyglot_with_invalid_language",
    "tests/unit/application/agents/test_multi_language_code.py::TestMultiLanguageCodeAgent::test_process_unsupported_language_raises_error",
    "tests/unit/application/agents/test_multi_language_code.py::TestMultiLanguageCodeAgent::test_process_wsde_creation_error_logs_and_returns",
    "tests/unit/application/agents/test_multi_language_code.py::TestMultiLanguageCodeAgent::test_process_calls_llm_generate",
    "tests/unit/application/agents/test_multi_language_code.py::TestMultiLanguageCodeAgent::test_process_without_llm_returns_placeholder",
    "tests/unit/application/agents/test_planner_agent.py::TestPlannerAgent::test_initialization_succeeds",
    "tests/unit/application/agents/test_planner_agent.py::TestPlannerAgent::test_process_succeeds",
    "tests/unit/application/agents/test_planner_agent.py::TestPlannerAgent::test_process_with_empty_inputs_succeeds",
    "tests/unit/application/agents/test_planner_agent.py::TestPlannerAgent::test_get_capabilities_succeeds",
    "tests/unit/application/agents/test_planner_agent.py::TestPlannerAgent::test_get_capabilities_with_custom_capabilities_succeeds",
    "tests/unit/application/agents/test_planner_agent.py::TestPlannerAgent::test_process_error_handling_raises_error",
    "tests/unit/application/agents/test_refactor_agent.py::TestRefactorAgent::test_initialization_succeeds",
    "tests/unit/application/agents/test_refactor_agent.py::TestRefactorAgent::test_process_succeeds",
    "tests/unit/application/agents/test_refactor_agent.py::TestRefactorAgent::test_process_with_empty_inputs_succeeds",
    "tests/unit/application/agents/test_refactor_agent.py::TestRefactorAgent::test_get_capabilities_succeeds",
    "tests/unit/application/agents/test_refactor_agent.py::TestRefactorAgent::test_get_capabilities_with_custom_capabilities_succeeds",
    "tests/unit/application/agents/test_refactor_agent.py::TestRefactorAgent::test_process_error_handling_code_wsde_fails",
    "tests/unit/application/agents/test_refactor_agent.py::TestRefactorAgent::test_process_error_handling_explanation_wsde_fails",
    "tests/unit/application/agents/test_specification_agent.py::TestSpecificationAgent::test_process_succeeds",
    "tests/unit/application/agents/test_specification_agent.py::TestSpecificationAgent::test_get_capabilities_with_custom_capabilities_succeeds",
    "tests/unit/application/agents/test_test_agent.py::TestTestAgent::test_initialization_succeeds",
    "tests/unit/application/agents/test_test_agent.py::TestTestAgent::test_process_succeeds",
    "tests/unit/application/agents/test_test_agent.py::TestTestAgent::test_get_capabilities_with_custom_capabilities_succeeds",
    "tests/unit/application/agents/test_test_agent.py::TestTestAgent::test_process_error_handling",
    "tests/unit/application/agents/test_unified_agent_generic.py::test_process_generic_task_succeeds",
    "tests/unit/application/agents/test_validation_agent.py::TestValidationAgent::test_process_succeeds",
    "tests/unit/application/cli/test_config_validation.py::test_config_warnings_succeeds",
    "tests/unit/application/cli/test_config_validation.py::test_config_success_succeeds",
    "tests/unit/application/cli/test_doctor_cmd.py::test_doctor_cmd_old_python_and_missing_env_warn_succeeds",
    "tests/unit/application/cli/test_doctor_cmd.py::test_doctor_cmd_success_is_valid",
    "tests/unit/application/cli/test_doctor_cmd.py::test_doctor_cmd_invalid_config_is_valid",
    "tests/unit/application/cli/test_doctor_cmd.py::test_doctor_cmd_missing_env_vars_succeeds[OPENAI_API_KEY]",
    "tests/unit/application/cli/test_doctor_cmd.py::test_doctor_cmd_missing_env_vars_succeeds[ANTHROPIC_API_KEY]",
    "tests/unit/application/cli/test_doctor_cmd.py::test_doctor_cmd_warns_missing_optional_feature_pkg_succeeds",
    "tests/unit/application/cli/test_doctor_cmd.py::test_doctor_cmd_warns_missing_memory_store_pkg_succeeds[chromadb-chromadb]",
    "tests/unit/application/cli/test_doctor_cmd.py::test_doctor_cmd_warns_missing_memory_store_pkg_succeeds[tinydb-tinydb]",
    "tests/unit/application/cli/test_doctor_cmd.py::test_doctor_cmd_warns_missing_uvicorn_succeeds",
    "tests/unit/application/cli/test_doctor_cmd.py::test_check_cmd_alias_succeeds",
    "tests/unit/application/cli/test_doctor_cmd.py::test_doctor_cmd_invokes_service_check",
    "tests/unit/application/cli/test_serve_cmd.py::test_serve_cmd_missing_uvicorn_succeeds",
    "tests/unit/application/code_analysis/test_ast_transformer.py::TestAstTransformer::test_add_docstring_succeeds",
    "tests/unit/application/code_analysis/test_ast_transformer.py::TestAstTransformer::test_complex_transformations_succeeds",
    "tests/unit/application/code_analysis/test_ast_transformer.py::TestAstTransformer::test_extract_function_succeeds",
    "tests/unit/application/code_analysis/test_ast_transformer.py::TestAstTransformer::test_optimize_string_literals_succeeds",
    "tests/unit/application/code_analysis/test_ast_transformer.py::TestAstTransformer::test_remove_unused_imports_and_variables_succeeds",
    "tests/unit/application/code_analysis/test_ast_transformer.py::TestAstTransformer::test_rename_function_succeeds",
    "tests/unit/application/code_analysis/test_ast_transformer.py::TestAstTransformer::test_rename_parameter_succeeds",
    "tests/unit/application/code_analysis/test_ast_transformer.py::TestAstTransformer::test_rename_variable_succeeds",
    "tests/unit/application/code_analysis/test_ast_transformer.py::TestAstTransformer::test_validate_syntax_is_valid",
    "tests/unit/application/code_analysis/test_project_state_analyzer.py::TestProjectStateAnalyzer::test_initialization_succeeds",
    "tests/unit/application/code_analysis/test_project_state_analyzer.py::TestProjectStateAnalyzer::test_analyze_succeeds",
    "tests/unit/application/code_analysis/test_project_state_analyzer.py::TestProjectStateAnalyzer::test_index_files_succeeds",
    "tests/unit/application/code_analysis/test_project_state_analyzer.py::TestProjectStateAnalyzer::test_detect_languages_succeeds",
    "tests/unit/application/code_analysis/test_project_state_analyzer.py::TestProjectStateAnalyzer::test_infer_architecture_succeeds",
    "tests/unit/application/code_analysis/test_project_state_analyzer.py::TestProjectStateAnalyzer::test_identify_components_succeeds",
    "tests/unit/application/code_analysis/test_project_state_analyzer.py::TestProjectStateAnalyzer::test_analyze_requirements_spec_alignment_succeeds",
    "tests/unit/application/code_analysis/test_project_state_analyzer.py::TestProjectStateAnalyzer::test_generate_health_report_succeeds",
    "tests/unit/application/code_analysis/test_self_analyzer.py::TestSelfAnalyzer::test_initialization_succeeds",
    "tests/unit/application/code_analysis/test_self_analyzer.py::TestSelfAnalyzer::test_analyze_succeeds",
    "tests/unit/application/code_analysis/test_self_analyzer.py::TestSelfAnalyzer::test_analyze_architecture_succeeds",
    "tests/unit/application/code_analysis/test_self_analyzer.py::TestSelfAnalyzer::test_detect_architecture_type_succeeds",
    "tests/unit/application/code_analysis/test_self_analyzer.py::TestSelfAnalyzer::test_identify_layers_succeeds",
    "tests/unit/application/code_analysis/test_self_analyzer.py::TestSelfAnalyzer::test_analyze_layer_dependencies_succeeds",
    "tests/unit/application/code_analysis/test_self_analyzer.py::TestSelfAnalyzer::test_check_architecture_violations_succeeds",
    "tests/unit/application/code_analysis/test_self_analyzer.py::TestSelfAnalyzer::test_analyze_code_quality_succeeds",
    "tests/unit/application/code_analysis/test_self_analyzer.py::TestSelfAnalyzer::test_analyze_test_coverage_succeeds",
    "tests/unit/application/code_analysis/test_self_analyzer.py::TestSelfAnalyzer::test_identify_improvement_opportunities_succeeds",
    "tests/unit/application/code_analysis/test_transformer.py::TestAstTransformer::test_record_change_succeeds",
    "tests/unit/application/code_analysis/test_transformer.py::TestUnusedImportRemover::test_remove_unused_imports_succeeds",
    "tests/unit/application/code_analysis/test_transformer.py::TestRedundantAssignmentRemover::test_remove_redundant_assignments_succeeds",
    "tests/unit/application/code_analysis/test_transformer.py::TestUnusedVariableRemover::test_remove_unused_variables_succeeds",
    "tests/unit/application/code_analysis/test_transformer.py::TestStringLiteralOptimizer::test_optimize_string_literals_succeeds",
    "tests/unit/application/code_analysis/test_transformer.py::TestCodeStyleTransformer::test_improve_code_style_succeeds",
    "tests/unit/application/code_analysis/test_transformer.py::TestCodeTransformer::test_transform_code_succeeds",
    "tests/unit/application/code_analysis/test_transformer.py::TestCodeTransformer::test_transform_file_succeeds",
    "tests/unit/application/code_analysis/test_transformer.py::TestCodeTransformer::test_transform_directory_succeeds",
    "tests/unit/application/code_analysis/test_transformer.py::TestCodeTransformer::test_find_python_files_succeeds",
    "tests/unit/application/code_analysis/test_transformer.py::TestSymbolUsageCounter::test_count_symbol_usage_succeeds",
    "tests/unit/application/config/test_unified_config_loader.py::test_load_from_yaml_succeeds",
    "tests/unit/application/config/test_unified_config_loader.py::test_load_from_pyproject_succeeds",
    "tests/unit/application/config/test_unified_config_loader.py::test_save_and_exists_succeeds",
    "tests/unit/application/config/test_unified_config_loader.py::test_loader_save_function_yaml_succeeds",
    "tests/unit/application/config/test_unified_config_loader.py::test_loader_save_function_pyproject_succeeds",
    "tests/unit/application/llm/test_offline_provider.py::test_offline_provider_fallback_succeeds",
    "tests/unit/application/llm/test_offline_provider.py::test_offline_provider_loads_local_model_succeeds",
    "tests/unit/application/llm/test_offline_provider.py::test_generate_with_context_succeeds",
    "tests/unit/application/llm/test_offline_provider.py::test_generate_with_empty_context_succeeds",
    "tests/unit/application/llm/test_offline_provider.py::test_generate_with_empty_prompt_succeeds",
    "tests/unit/application/llm/test_offline_provider.py::test_get_embedding_consistency_succeeds",
    "tests/unit/application/llm/test_offline_provider.py::test_get_embedding_different_inputs_succeeds",
    "tests/unit/application/llm/test_offline_provider.py::test_model_loading_error_fails",
    "tests/unit/application/llm/test_offline_provider_deps.py::test_load_transformer_deps_imports_when_available",
    "tests/unit/application/llm/test_offline_provider_deps.py::test_load_transformer_deps_noop_when_already_loaded",
    "tests/unit/application/llm/test_offline_provider_deps.py::test_load_transformer_deps_handles_import_error",
    "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreaker::test_initialization",
    "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreaker::test_execute_success",
    "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreaker::test_execute_failure",
    "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreaker::test_circuit_opens_after_threshold",
    "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreaker::test_open_circuit_rejects_requests",
    "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreaker::test_half_open_after_timeout",
    "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreaker::test_half_open_to_open_on_failure",
    "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreaker::test_reset",
    "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreaker::test_get_state",
    "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreakerRegistry::test_get_or_create",
    "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreakerRegistry::test_get",
    "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreakerRegistry::test_reset_all",
    "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreakerRegistry::test_get_all_states",
    "tests/unit/application/memory/test_circuit_breaker.py::TestWithCircuitBreaker::test_decorator",
    "tests/unit/application/memory/test_circuit_breaker.py::TestWithCircuitBreaker::test_decorator_with_failure",
    "tests/unit/application/memory/test_circuit_breaker.py::test_global_registry",
    "tests/unit/application/memory/test_import_without_duckdb.py::test_import_duckdb_store_without_duckdb_fails",
    "tests/unit/application/memory/test_import_without_tinydb.py::test_import_memory_without_tinydb_succeeds",
    "tests/unit/application/memory/test_lmdb_store.py::TestLMDBStore::test_init_succeeds",
    "tests/unit/application/memory/test_lmdb_store.py::TestLMDBStore::test_store_and_retrieve_succeeds",
    "tests/unit/application/memory/test_lmdb_store.py::TestLMDBStore::test_retrieve_nonexistent_succeeds",
    "tests/unit/application/memory/test_lmdb_store.py::TestLMDBStore::test_search_succeeds",
    "tests/unit/application/memory/test_lmdb_store.py::TestLMDBStore::test_delete_succeeds",
    "tests/unit/application/memory/test_lmdb_store.py::TestLMDBStore::test_token_usage_succeeds",
    "tests/unit/application/memory/test_lmdb_store.py::TestLMDBStore::test_persistence_succeeds",
    "tests/unit/application/memory/test_lmdb_store.py::TestLMDBStore::test_close_and_reopen_succeeds",
    "tests/unit/application/memory/test_lmdb_store.py::TestLMDBStore::test_transaction_isolation_succeeds",
    "tests/unit/application/memory/test_lmdb_store.py::TestLMDBStore::test_transaction_abort_succeeds",
    "tests/unit/application/memory/test_memory_adapters_regression.py::test_store_retrieve_search_update[TinyDBMemoryAdapter]",
    "tests/unit/application/memory/test_memory_adapters_regression.py::test_store_retrieve_search_update[GraphMemoryAdapter]",
    "tests/unit/application/memory/test_memory_adapters_regression.py::test_vector_adapter_operations",
    "tests/unit/application/memory/test_memory_adapters_regression.py::test_tinydb_adapter_transaction_support",
    "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_init_succeeds",
    "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_store_and_retrieve_succeeds",
    "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_retrieve_nonexistent_succeeds",
    "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_search_succeeds",
    "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_search_by_id_and_date_range_succeeds",
    "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_delete_succeeds",
    "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_token_usage_succeeds",
    "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_persistence_succeeds",
    "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_store_vector_succeeds",
    "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_similarity_search_succeeds",
    "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_delete_vector_succeeds",
    "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_get_collection_stats_succeeds",
    "tests/unit/application/memory/test_vector_memory_adapter_extra.py::test_similarity_empty_store",
    "tests/unit/application/memory/test_vector_memory_adapter_extra.py::test_similarity_zero_norm",
    "tests/unit/application/memory/test_vector_memory_adapter_extra.py::test_delete_missing",
    "tests/unit/application/memory/test_vector_memory_adapter_extra.py::test_collection_stats",
    "tests/unit/application/promises/test_basic_promise.py::test_basic_promise_resolve_and_value",
    "tests/unit/application/promises/test_basic_promise.py::test_basic_promise_then_chains",
    "tests/unit/application/promises/test_basic_promise.py::test_basic_promise_catch_handles_rejection",
    "tests/unit/application/promises/test_basic_promise.py::test_access_value_wrong_state_raises",
    "tests/unit/application/promises/test_timeout.py::test_promise_auto_reject_after_timeout_succeeds",
    "tests/unit/application/promises/test_timeout.py::test_timeout_timer_cancellation_on_fulfill_succeeds",
    "tests/unit/application/test_offline_provider_cli.py::test_generate_does_not_call_external_succeeds",
    "tests/unit/application/test_offline_provider_unit.py::test_offline_provider_instantiation_succeeds",
    "tests/unit/application/test_prompt_auto_tuning.py::TestPromptVariant::test_initialization_succeeds",
    "tests/unit/application/test_prompt_auto_tuning.py::TestPromptVariant::test_success_rate_succeeds",
    "tests/unit/application/test_prompt_auto_tuning.py::TestPromptVariant::test_average_feedback_score_succeeds",
    "tests/unit/application/test_prompt_auto_tuning.py::TestPromptVariant::test_performance_score_succeeds",
    "tests/unit/application/test_prompt_auto_tuning.py::TestPromptVariant::test_record_usage_succeeds",
    "tests/unit/application/test_prompt_auto_tuning.py::TestPromptVariant::test_to_dict_and_from_dict_succeeds",
    "tests/unit/application/test_prompt_auto_tuning.py::TestPromptAutoTuner::test_initialization_succeeds",
    "tests/unit/application/test_prompt_auto_tuning.py::TestPromptAutoTuner::test_register_template_succeeds",
    "tests/unit/application/test_prompt_auto_tuning.py::TestPromptAutoTuner::test_select_variant_single_succeeds",
    "tests/unit/application/test_prompt_auto_tuning.py::TestPromptAutoTuner::test_select_variant_error_succeeds",
    "tests/unit/application/test_prompt_auto_tuning.py::TestPromptAutoTuner::test_select_variant_performance_succeeds",
    "tests/unit/application/test_prompt_auto_tuning.py::TestPromptAutoTuner::test_record_feedback_succeeds",
    "tests/unit/application/test_prompt_auto_tuning.py::TestPromptAutoTuner::test_record_feedback_error_succeeds",
    "tests/unit/application/test_prompt_auto_tuning.py::TestPromptAutoTuner::test_generate_variants_succeeds",
    "tests/unit/application/test_prompt_auto_tuning.py::TestPromptAutoTuner::test_mutation_methods_succeeds",
    "tests/unit/application/test_prompt_auto_tuning.py::TestPromptAutoTuner::test_storage_succeeds",
    "tests/unit/cli/test_cli_entry.py::test_cli_entry_invokes_run_cli",
    "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_invalid_config_type_is_valid",
    "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_invalid_config_range_is_valid",
    "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_invalid_config_syntax_raises_error",
    "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_missing_required_fields_is_valid",
    "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_env_var_override_succeeds",
    "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_config_file_merging_succeeds",
    "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_invalid_feature_flag_is_valid",
    "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_unknown_setting_is_valid",
    "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_config_with_comments_succeeds",
    "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_empty_config_file_succeeds",
    "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_config_with_null_values_succeeds",
    "tests/unit/config/test_project_config_validation.py::test_valid_project_config_loads_succeeds",
    "tests/unit/config/test_project_config_validation.py::test_invalid_project_config_raises",
    "tests/unit/config/test_unified_loader.py::test_loads_from_pyproject_succeeds",
    "tests/unit/config/test_unified_loader.py::test_loads_from_yaml_succeeds",
    "tests/unit/config/test_unified_loader.py::test_save_round_trip_yaml_succeeds",
    "tests/unit/config/test_unified_loader.py::test_save_round_trip_pyproject_succeeds",
    "tests/unit/core/test_config_loader.py::test_load_from_dev_synth_yaml_succeeds",
    "tests/unit/core/test_config_loader.py::test_load_from_pyproject_toml_succeeds",
    "tests/unit/core/test_config_loader.py::test_yaml_toml_equivalence_succeeds",
    "tests/unit/core/test_config_loader.py::test_load_project_config_yaml_succeeds",
    "tests/unit/core/test_config_loader.py::test_load_project_config_pyproject_succeeds",
    "tests/unit/core/test_core_values.py::test_load_core_values_succeeds",
    "tests/unit/core/test_core_values.py::test_find_value_conflicts_succeeds",
    "tests/unit/core/test_core_values.py::test_check_report_for_value_conflicts_succeeds",
    "tests/unit/core/test_unified_config_loader.py::test_unified_loader_detects_yaml_succeeds",
    "tests/unit/core/test_unified_config_loader.py::test_unified_loader_detects_pyproject_succeeds",
    "tests/unit/core/test_unified_config_loader.py::test_unified_loader_prefers_pyproject_succeeds",
    "tests/unit/core/test_unified_config_loader.py::test_unified_config_save_updates_pyproject_succeeds",
    "tests/unit/core/test_unified_config_loader.py::test_unified_config_exists_for_both_formats_returns_expected_result",
    "tests/unit/docs/test_feature_matrix.py::test_feature_rows_have_status_succeeds",
    "tests/unit/domain/models/test_project_model.py::TestArtifact::test_artifact_initialization_succeeds",
    "tests/unit/domain/models/test_project_model.py::TestArtifact::test_artifact_str_representation_succeeds",
    "tests/unit/domain/models/test_project_model.py::TestArtifact::test_artifact_repr_representation_succeeds",
    "tests/unit/domain/models/test_project_model.py::TestProjectModel::test_project_model_initialization_succeeds",
    "tests/unit/domain/models/test_project_model.py::TestProjectModel::test_determine_structure_type_succeeds",
    "tests/unit/domain/models/test_project_model.py::TestProjectModel::test_build_standard_model_succeeds",
    "tests/unit/domain/models/test_project_model.py::TestProjectModel::test_build_monorepo_model_succeeds",
    "tests/unit/domain/models/test_project_model.py::TestProjectModel::test_get_artifact_succeeds",
    "tests/unit/domain/models/test_project_model.py::TestProjectModel::test_get_artifacts_by_type_succeeds",
    "tests/unit/domain/models/test_project_model.py::TestProjectModel::test_get_related_artifacts_succeeds",
    "tests/unit/domain/models/test_project_model.py::TestProjectModel::test_determine_artifact_type_succeeds",
    "tests/unit/domain/models/test_project_model.py::TestProjectModel::test_to_dict_succeeds",
    "tests/unit/domain/models/test_wsde_base_methods.py::TestWSDEBaseMethods::test_add_agents_succeeds",
    "tests/unit/domain/models/test_wsde_base_methods.py::TestWSDEBaseMethods::test_register_dialectical_hook_succeeds",
    "tests/unit/domain/models/test_wsde_base_methods.py::TestWSDEBaseMethods::test_send_message_succeeds",
    "tests/unit/domain/models/test_wsde_base_methods.py::TestWSDEBaseMethods::test_broadcast_message_succeeds",
    "tests/unit/domain/models/test_wsde_base_methods.py::TestWSDEBaseMethods::test_get_messages_succeeds",
    "tests/unit/domain/models/test_wsde_base_methods.py::TestWSDEBaseMethods::test_conduct_peer_review_succeeds",
    "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_categorize_critiques_by_domain_succeeds",
    "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_identify_domain_conflicts_succeeds",
    "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_prioritize_critiques_succeeds",
    "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_resolve_code_improvement_conflict_succeeds",
    "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_resolve_content_improvement_conflict_succeeds",
    "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_check_code_standards_compliance_succeeds",
    "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_check_content_standards_compliance_succeeds",
    "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_check_pep8_compliance_succeeds",
    "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_check_security_best_practices_succeeds",
    "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_balance_security_and_performance_succeeds",
    "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_balance_security_and_usability_succeeds",
    "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_balance_performance_and_maintainability_succeeds",
    "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_generate_detailed_synthesis_reasoning_succeeds",
    "tests/unit/domain/models/test_wsde_dynamic_workflows.py::TestWSDERoleReassignment::test_dynamic_role_reassignment_selects_expert_primus_succeeds",
    "tests/unit/domain/models/test_wsde_dynamic_workflows.py::TestWSDERoleReassignment::test_build_consensus_multiple_solutions_succeeds",
    "tests/unit/domain/models/test_wsde_team.py::TestWSDETeam::test_add_agent_succeeds",
    "tests/unit/domain/models/test_wsde_team.py::TestWSDETeam::test_rotate_primus_succeeds",
    "tests/unit/domain/models/test_wsde_team.py::TestWSDETeam::test_get_primus_succeeds",
    "tests/unit/domain/models/test_wsde_team.py::TestWSDETeam::test_get_primus_empty_team_succeeds",
    "tests/unit/domain/models/test_wsde_team.py::TestWSDETeam::test_assign_roles_succeeds",
    "tests/unit/domain/models/test_wsde_team.py::TestWSDETeam::test_analyze_trade_offs_detects_conflicts_succeeds",
    "tests/unit/domain/test_code_analysis_interfaces.py::TestCodeAnalysisInterfaces::test_noop_analyzer",
    "tests/unit/domain/test_code_analysis_interfaces.py::TestCodeAnalysisInterfaces::test_noop_transformer",
    "tests/unit/domain/test_code_analysis_interfaces.py::TestCodeAnalysisInterfaces::test_simple_file_analysis",
    "tests/unit/domain/test_memory_type.py::test_memory_type_serialization_deserialization",
    "tests/unit/domain/test_memory_type.py::test_working_memory_alias",
    "tests/unit/domain/test_memory_type.py::test_memory_type_members_complete",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[short_term]",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[long_term]",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[working]",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[episodic]",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[solution]",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[dialectical_reasoning]",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[team_state]",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[knowledge_graph]",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[relationship]",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[code_analysis]",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[code]",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[code_transformation]",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[documentation]",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[context]",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[conversation]",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[task_history]",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[knowledge]",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[error_log]",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[collaboration_task]",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[collaboration_message]",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[collaboration_team]",
    "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[peer_review]",
    "tests/unit/domain/test_primus_selection_edge_cases.py::test_rotation_without_expertise_is_deterministic_succeeds",
    "tests/unit/domain/test_primus_selection_edge_cases.py::test_documentation_task_prefers_doc_agents_succeeds",
    "tests/unit/domain/test_primus_selection_edge_cases.py::test_has_been_primus_resets_after_full_rotation_succeeds",
    "tests/unit/domain/test_primus_selection_edge_cases.py::test_edge_case_coverage_succeeds",
    "tests/unit/domain/test_requirement_interfaces.py::TestRequirementInterfaces::test_dialectical_reasoner_creates_session_and_message",
    "tests/unit/domain/test_requirement_interfaces.py::TestRequirementInterfaces::test_inmemory_change_repository",
    "tests/unit/domain/test_requirement_interfaces.py::TestRequirementInterfaces::test_inmemory_impact_assessment_repository",
    "tests/unit/domain/test_requirement_interfaces.py::TestRequirementInterfaces::test_inmemory_requirement_repository_crud",
    "tests/unit/domain/test_requirement_interfaces.py::TestRequirementInterfaces::test_inmemory_requirement_repository_filters",
    "tests/unit/domain/test_wsde_core_methods.py::test_assign_roles_sets_roles",
    "tests/unit/domain/test_wsde_core_methods.py::test_select_primus_by_expertise_prefers_match",
    "tests/unit/domain/test_wsde_core_methods.py::test_build_consensus_produces_result",
    "tests/unit/domain/test_wsde_expertise_score.py::test_calculate_expertise_score_multiple_matches",
    "tests/unit/domain/test_wsde_phase_role_rotation.py::test_initial_selection_prefers_unused_agent_succeeds",
    "tests/unit/domain/test_wsde_phase_role_rotation.py::test_documentation_tasks_pick_documentation_experts_succeeds",
    "tests/unit/domain/test_wsde_phase_role_rotation.py::test_assign_roles_for_phase_rotates_after_all_primus_succeeds",
    "tests/unit/domain/test_wsde_primus_selection.py::test_first_time_selection_prioritizes_unused_agents_succeeds",
    "tests/unit/domain/test_wsde_primus_selection.py::test_rotation_resets_after_all_have_served_succeeds",
    "tests/unit/domain/test_wsde_primus_selection.py::test_documentation_tasks_prefer_doc_experts_succeeds",
    "tests/unit/domain/test_wsde_primus_selection.py::test_nested_task_metadata_is_flattened_succeeds",
    "tests/unit/domain/test_wsde_primus_selection.py::test_rotation_when_all_agents_used_resets_flags_succeeds",
    "tests/unit/domain/test_wsde_primus_selection.py::test_select_primus_by_expertise_coverage_succeeds",
    "tests/unit/domain/test_wsde_team.py::test_select_primus_by_expertise_prefers_documentation_agent_succeeds",
    "tests/unit/domain/test_wsde_team.py::test_vote_on_critical_decision_tie_triggers_consensus_succeeds",
    "tests/unit/domain/test_wsde_team.py::test_vote_on_critical_decision_weighted_voting_succeeds",
    "tests/unit/domain/test_wsde_team.py::test_build_consensus_multiple_and_single_succeeds",
    "tests/unit/domain/test_wsde_team.py::test_documentation_task_selects_unused_doc_agent_succeeds",
    "tests/unit/domain/test_wsde_team.py::test_rotation_resets_after_all_have_served_succeeds",
    "tests/unit/domain/test_wsde_team.py::test_select_primus_prefers_doc_expertise_via_config_succeeds",
    "tests/unit/domain/test_wsde_team.py::test_rotate_primus_resets_usage_flags_and_role_map_succeeds",
    "tests/unit/domain/test_wsde_team.py::test_multiple_task_cycles_reset_primus_flags_succeeds",
    "tests/unit/domain/test_wsde_team.py::test_vote_on_critical_decision_coverage_succeeds",
    "tests/unit/domain/test_wsde_team.py::test_force_wsde_coverage_succeeds",
    "tests/unit/domain/test_wsde_team.py::test_expertise_selection_and_flag_rotation_succeeds",
    "tests/unit/domain/test_wsde_team.py::test_select_primus_coverage_succeeds",
    "tests/unit/fallback/test_retry_conditions.py::test_should_retry_prevents_retry",
    "tests/unit/fallback/test_retry_conditions.py::test_should_retry_allows_retry_until_success",
    "tests/unit/fallback/test_retry_conditions.py::test_retry_on_result_triggers_retry",
    "tests/unit/fallback/test_retry_conditions.py::test_retry_conditions_abort_when_condition_fails",
    "tests/unit/fallback/test_retry_conditions.py::test_retry_conditions_allow_retry",
    "tests/unit/fallback/test_retry_conditions.py::test_exponential_backoff",
    "tests/unit/fallback/test_retry_conditions.py::test_fallback_provider_order",
    "tests/unit/fallback/test_retry_counts.py::test_retry_count_metrics",
    "tests/unit/fallback/test_retry_counts.py::test_retry_only_network_errors",
    "tests/unit/fallback/test_retry_metrics.py::test_retry_metrics_success",
    "tests/unit/fallback/test_retry_metrics.py::test_retry_metrics_failure",
    "tests/unit/fallback/test_retry_metrics.py::test_retry_metrics_abort_when_not_retryable",
    "tests/unit/fallback/test_retry_metrics.py::test_retry_metrics_invalid_result",
    "tests/unit/fallback/test_retry_metrics.py::test_retry_metrics_success_without_retries",
    "tests/unit/fallback/test_retry_metrics.py::test_retry_error_metrics",
    "tests/unit/fallback/test_retry_metrics.py::test_retry_error_map_prevents_retry",
    "tests/unit/general/test_agent_models.py::TestAgentModels::test_agent_type_enum_succeeds",
    "tests/unit/general/test_agent_models.py::TestAgentModels::test_agent_config_initialization_succeeds",
    "tests/unit/general/test_agent_models.py::TestAgentModels::test_agent_config_with_parameters_succeeds",
    "tests/unit/general/test_agent_models.py::TestAgentModels::test_mvp_capabilities_succeeds",
    "tests/unit/general/test_agent_system.py::test_agent_state_keys_has_expected",
    "tests/unit/general/test_agent_system.py::test_process_input_node_success_is_valid",
    "tests/unit/general/test_agent_system.py::test_process_input_node_empty_input_succeeds",
    "tests/unit/general/test_agent_system.py::test_llm_call_node_success_succeeds",
    "tests/unit/general/test_agent_system.py::test_llm_call_node_llm_failure_fails",
    "tests/unit/general/test_agent_system.py::test_llm_call_node_skip_on_prior_error_raises_error",
    "tests/unit/general/test_agent_system.py::test_llm_call_node_missing_processed_input_succeeds",
    "tests/unit/general/test_agent_system.py::test_parse_output_node_success_is_valid",
    "tests/unit/general/test_agent_system.py::test_parse_output_node_missing_llm_response_succeeds",
    "tests/unit/general/test_agent_system.py::test_parse_output_node_skip_on_prior_error_raises_error",
    "tests/unit/general/test_agent_system.py::test_base_agent_graph_compiles_raises_error",
    "tests/unit/general/test_anthropic_provider_unit.py::TestAnthropicProvider::test_connection_error_raises_error",
    "tests/unit/general/test_anthropic_provider_unit.py::TestAnthropicProvider::test_generate_succeeds",
    "tests/unit/general/test_anthropic_provider_unit.py::TestAnthropicProvider::test_generate_with_context_succeeds",
    "tests/unit/general/test_anthropic_provider_unit.py::TestAnthropicProvider::test_get_embedding_succeeds",
    "tests/unit/general/test_anthropic_provider_unit.py::TestAnthropicProvider::test_model_error_raises_error",
    "tests/unit/general/test_api_health.py::test_health_endpoint_succeeds",
    "tests/unit/general/test_api_health.py::test_metrics_endpoint_succeeds",
    "tests/unit/general/test_base.py::test_dummy_adapter_succeeds",
    "tests/unit/general/test_code_analysis_interface.py::TestCodeAnalysisInterface::test_code_analysis_provider_interface_has_expected",
    "tests/unit/general/test_code_analysis_interface.py::TestCodeAnalysisInterface::test_code_analysis_result_interface_has_expected",
    "tests/unit/general/test_code_analysis_interface.py::TestCodeAnalysisInterface::test_file_analysis_result_interface_has_expected",
    "tests/unit/general/test_code_analysis_models.py::TestCodeAnalysisModels::test_code_analysis_implementation_succeeds",
    "tests/unit/general/test_code_analysis_models.py::TestCodeAnalysisModels::test_file_analysis_implementation_succeeds",
    "tests/unit/general/test_code_analyzer.py::TestCodeAnalyzer::test_analyze_code_succeeds",
    "tests/unit/general/test_code_analyzer.py::TestCodeAnalyzer::test_analyze_directory_succeeds",
    "tests/unit/general/test_code_analyzer.py::TestCodeAnalyzer::test_analyze_file_succeeds",
    "tests/unit/general/test_code_analyzer.py::TestCodeAnalyzer::test_project_structure_metrics_succeeds",
    "tests/unit/general/test_config_loader.py::test_load_yaml_config_succeeds",
    "tests/unit/general/test_config_loader.py::test_load_pyproject_toml_succeeds",
    "tests/unit/general/test_config_loader.py::test_autocomplete_succeeds",
    "tests/unit/general/test_config_loader.py::test_save_persists_version_succeeds",
    "tests/unit/general/test_config_loader.py::test_version_mismatch_logs_warning_matches_expected",
    "tests/unit/general/test_config_settings.py::TestConfigSettings::test_get_settings_default_values_returns_expected_result",
    "tests/unit/general/test_config_settings.py::TestConfigSettings::test_get_settings_from_environment_variables_succeeds",
    "tests/unit/general/test_config_settings.py::TestConfigSettings::test_get_llm_settings_returns_expected_result",
    "tests/unit/general/test_config_settings.py::TestConfigSettings::test_boolean_environment_variables_succeeds[true-True]",
    "tests/unit/general/test_config_settings.py::TestConfigSettings::test_boolean_environment_variables_succeeds[True-True]",
    "tests/unit/general/test_config_settings.py::TestConfigSettings::test_boolean_environment_variables_succeeds[TRUE-True]",
    "tests/unit/general/test_config_settings.py::TestConfigSettings::test_boolean_environment_variables_succeeds[false-False]",
    "tests/unit/general/test_config_settings.py::TestConfigSettings::test_boolean_environment_variables_succeeds[False-False]",
    "tests/unit/general/test_config_settings.py::TestConfigSettings::test_boolean_environment_variables_succeeds[FALSE-False]",
    "tests/unit/general/test_config_settings.py::TestConfigSettings::test_load_dotenv_succeeds",
    "tests/unit/general/test_config_settings.py::TestConfigSettings::test_load_dotenv_file_not_found_succeeds",
    "tests/unit/general/test_config_settings.py::TestConfigSettings::test_get_settings_with_dotenv_succeeds",
    "tests/unit/general/test_config_settings.py::TestConfigSettings::test_invalid_security_boolean_raises",
    "tests/unit/general/test_config_settings.py::TestConfigSettings::test_empty_openai_api_key_raises",
    "tests/unit/general/test_config_settings.py::TestConfigSettings::test_kuzu_settings_defaults_succeeds",
    "tests/unit/general/test_config_settings.py::TestConfigSettings::test_kuzu_settings_from_env_succeeds",
    "tests/unit/general/test_core_config_loader.py::test_precedence_env_over_project_over_global_succeeds",
    "tests/unit/general/test_core_config_loader.py::test_load_toml_project_succeeds",
    "tests/unit/general/test_core_config_loader.py::test_save_global_config_yaml_succeeds",
    "tests/unit/general/test_core_values.py::test_load_core_values_succeeds",
    "tests/unit/general/test_core_values.py::test_find_value_conflicts_succeeds",
    "tests/unit/general/test_core_values.py::test_check_report_for_value_conflicts_succeeds",
    "tests/unit/general/test_dialectical_reasoner.py::TestDialecticalReasoner::test_assess_impact_succeeds",
    "tests/unit/general/test_dialectical_reasoner.py::TestDialecticalReasoner::test_create_session_succeeds",
    "tests/unit/general/test_dialectical_reasoner.py::TestDialecticalReasoner::test_evaluate_change_succeeds",
    "tests/unit/general/test_dialectical_reasoner.py::TestDialecticalReasoner::test_process_message_succeeds",
    "tests/unit/general/test_documentation_fetcher.py::test_fetcher_initialization_succeeds",
    "tests/unit/general/test_exceptions.py::TestDevSynthError::test_init_with_message_only_succeeds",
    "tests/unit/general/test_exceptions.py::TestDevSynthError::test_init_with_error_code_raises_error",
    "tests/unit/general/test_exceptions.py::TestDevSynthError::test_init_with_details_raises_error",
    "tests/unit/general/test_exceptions.py::TestDevSynthError::test_to_dict_succeeds",
    "tests/unit/general/test_exceptions.py::TestUserInputErrors::test_validation_error_raises_error",
    "tests/unit/general/test_exceptions.py::TestUserInputErrors::test_configuration_error_raises_error",
    "tests/unit/general/test_exceptions.py::TestUserInputErrors::test_command_error_raises_error",
    "tests/unit/general/test_exceptions.py::TestSystemErrors::test_internal_error_raises_error",
    "tests/unit/general/test_exceptions.py::TestSystemErrors::test_resource_exhausted_error_raises_error",
    "tests/unit/general/test_exceptions.py::TestAdapterErrors::test_provider_error_raises_error",
    "tests/unit/general/test_exceptions.py::TestAdapterErrors::test_provider_timeout_error_raises_error",
    "tests/unit/general/test_exceptions.py::TestAdapterErrors::test_memory_adapter_error_raises_error",
    "tests/unit/general/test_exceptions.py::TestDomainErrors::test_agent_error_raises_error",
    "tests/unit/general/test_exceptions.py::TestDomainErrors::test_workflow_error_succeeds",
    "tests/unit/general/test_exceptions.py::TestDomainErrors::test_dialectical_reasoning_error_raises_error",
    "tests/unit/general/test_exceptions.py::TestApplicationErrors::test_promise_error_raises_error",
    "tests/unit/general/test_exceptions.py::TestApplicationErrors::test_promise_state_error_raises_error",
    "tests/unit/general/test_exceptions.py::TestApplicationErrors::test_ingestion_error_raises_error",
    "tests/unit/general/test_exceptions.py::TestPortErrors::test_memory_port_error_raises_error",
    "tests/unit/general/test_exceptions.py::TestPortErrors::test_provider_port_error_raises_error",
    "tests/unit/general/test_exceptions.py::TestPortErrors::test_agent_port_error_raises_error",
    "tests/unit/general/test_fallback_utils.py::test_bulkhead_limits_concurrency",
    "tests/unit/general/test_fallback_utils.py::test_circuit_breaker_concurrent_failures",
    "tests/unit/general/test_isolation.py::TestIsolation::test_devsynth_dir_isolation_succeeds",
    "tests/unit/general/test_isolation.py::TestIsolation::test_global_config_isolation_succeeds",
    "tests/unit/general/test_isolation.py::TestIsolation::test_memory_path_isolation_succeeds",
    "tests/unit/general/test_isolation.py::TestIsolation::test_no_file_logging_prevents_directory_creation_succeeds",
    "tests/unit/general/test_isolation.py::TestIsolation::test_path_redirection_in_test_environment_succeeds",
    "tests/unit/general/test_isolation.py::TestIsolation::test_comprehensive_isolation_succeeds",
    "tests/unit/general/test_kuzu_adapter.py::test_store_and_retrieve_vector_succeeds",
    "tests/unit/general/test_kuzu_adapter.py::test_similarity_search_succeeds",
    "tests/unit/general/test_kuzu_adapter.py::test_persistence_between_instances_succeeds",
    "tests/unit/general/test_kuzu_adapter.py::test_similarity_search_without_numpy_succeeds",
    "tests/unit/general/test_kuzu_store_fallback.py::test_kuzu_store_falls_back_when_dependency_missing",
    "tests/unit/general/test_llm_provider_selection.py::test_offline_mode_selects_offline_provider_succeeds",
    "tests/unit/general/test_llm_provider_selection.py::test_online_mode_uses_configured_provider_succeeds",
    "tests/unit/general/test_lmstudio_provider_unit.py::TestLMStudioProvider::test_api_error_handling_raises_error",
    "tests/unit/general/test_lmstudio_provider_unit.py::TestLMStudioProvider::test_circuit_breaker_opens_after_failures_fails",
    "tests/unit/general/test_lmstudio_provider_unit.py::TestLMStudioProvider::test_generate_succeeds",
    "tests/unit/general/test_lmstudio_provider_unit.py::TestLMStudioProvider::test_generate_with_context_succeeds",
    "tests/unit/general/test_lmstudio_provider_unit.py::TestLMStudioProvider::test_get_embedding_succeeds",
    "tests/unit/general/test_logging_setup.py::test_log_records_include_request_context_succeeds",
    "tests/unit/general/test_memory_models.py::TestMemoryModels::test_memory_type_enum_succeeds",
    "tests/unit/general/test_memory_models.py::TestMemoryModels::test_memory_item_initialization_succeeds",
    "tests/unit/general/test_memory_models.py::TestMemoryModels::test_memory_item_with_metadata_succeeds",
    "tests/unit/general/test_memory_models.py::TestMemoryModels::test_memory_type_aliases",
    "tests/unit/general/test_memory_models.py::TestMemoryModels::test_memory_item_type_alias",
    "tests/unit/general/test_memory_store.py::test_memory_store_abstract_methods_succeeds",
    "tests/unit/general/test_methodology_logging.py::test_phase_timeout_logs_warning_succeeds",
    "tests/unit/general/test_mypy_config.py::test_mypy_configuration_raises_error",
    "tests/unit/general/test_mypy_config.py::test_mypy_project_configuration_raises_error",
    "tests/unit/general/test_no_devsynth_dir_creation.py::TestNoDevSynthDirCreation::test_ensure_path_exists_respects_no_file_logging_succeeds",
    "tests/unit/general/test_no_devsynth_dir_creation.py::TestNoDevSynthDirCreation::test_settings_respects_no_file_logging_succeeds",
    "tests/unit/general/test_onnx_port.py::test_onnx_port_load_and_run_succeeds",
    "tests/unit/general/test_path_restrictions.py::test_ensure_path_exists_within_project_dir_succeeds",
    "tests/unit/general/test_path_restrictions.py::test_configure_logging_within_project_dir_succeeds",
    "tests/unit/general/test_ports_with_fixtures.py::test_ports_fixtures_succeeds",
    "tests/unit/general/test_primus_selection.py::test_highest_expertise_score_becomes_primus_succeeds",
    "tests/unit/general/test_primus_selection.py::test_prioritizes_agents_who_have_not_served_as_primus_succeeds",
    "tests/unit/general/test_primus_selection.py::test_documentation_tasks_prefer_documentation_experts_succeeds",
    "tests/unit/general/test_primus_selection.py::test_weighted_expertise_prefers_specialist_succeeds",
    "tests/unit/general/test_primus_selection.py::test_rotation_resets_after_all_agents_served_succeeds",
    "tests/unit/general/test_primus_selection.py::test_documentation_tasks_prioritize_best_doc_expert_succeeds",
    "tests/unit/general/test_promise_agent.py::TestCapabilityHandler::test_handler_initialization_succeeds",
    "tests/unit/general/test_promise_agent.py::TestCapabilityHandler::test_handler_direct_execution_succeeds",
    "tests/unit/general/test_promise_agent.py::TestCapabilityHandler::test_handler_promise_execution_succeeds",
    "tests/unit/general/test_promise_agent.py::TestCapabilityHandler::test_handler_promise_error_raises_error",
    "tests/unit/general/test_promise_agent.py::TestPromiseAgent::test_agent_initialization_succeeds",
    "tests/unit/general/test_promise_agent.py::TestPromiseAgent::test_capability_registration_succeeds",
    "tests/unit/general/test_promise_agent.py::TestPromiseAgent::test_capability_request_and_fulfillment_succeeds",
    "tests/unit/general/test_promise_agent.py::TestPromiseAgent::test_capability_request_with_timeout_succeeds",
    "tests/unit/general/test_promise_agent.py::TestPromiseAgent::test_wait_for_capability_succeeds",
    "tests/unit/general/test_promise_agent.py::TestPromiseAgent::test_unauthorized_access_succeeds",
    "tests/unit/general/test_promise_agent.py::TestPromiseAgent::test_capability_not_found_succeeds",
    "tests/unit/general/test_promise_agent.py::TestPromiseAgent::test_get_available_capabilities_succeeds",
    "tests/unit/general/test_promise_agent.py::TestPromiseAgentMixin::test_mixin_with_custom_agent_succeeds",
    "tests/unit/general/test_promise_system.py::TestPromise::test_initial_state_succeeds",
    "tests/unit/general/test_promise_system.py::TestPromise::test_resolve_succeeds",
    "tests/unit/general/test_promise_system.py::TestPromise::test_reject_succeeds",
    "tests/unit/general/test_promise_system.py::TestPromise::test_then_fulfilled_succeeds",
    "tests/unit/general/test_promise_system.py::TestPromise::test_then_rejected_succeeds",
    "tests/unit/general/test_promise_system.py::TestPromise::test_catch_succeeds",
    "tests/unit/general/test_promise_system.py::TestPromise::test_chaining_succeeds",
    "tests/unit/general/test_promise_system.py::TestPromise::test_error_propagation_raises_error",
    "tests/unit/general/test_promise_system.py::TestPromise::test_resolve_value_static_succeeds",
    "tests/unit/general/test_promise_system.py::TestPromise::test_reject_with_static_succeeds",
    "tests/unit/general/test_promise_system.py::TestPromise::test_all_succeeds",
    "tests/unit/general/test_promise_system.py::TestPromise::test_all_with_rejection_succeeds",
    "tests/unit/general/test_promise_system.py::TestPromise::test_race_succeeds",
    "tests/unit/general/test_promise_system.py::TestPromise::test_metadata_succeeds",
    "tests/unit/general/test_provider_logging.py::test_provider_logging_cleanup",
    "tests/unit/general/test_provider_logging.py::test_lmstudio_retry_metrics_and_circuit_breaker",
    "tests/unit/general/test_rdflib_store.py::TestRDFLibStore::test_init_succeeds",
    "tests/unit/general/test_rdflib_store.py::TestRDFLibStore::test_store_and_retrieve_succeeds",
    "tests/unit/general/test_rdflib_store.py::TestRDFLibStore::test_retrieve_nonexistent_succeeds",
    "tests/unit/general/test_rdflib_store.py::TestRDFLibStore::test_search_succeeds",
    "tests/unit/general/test_rdflib_store.py::TestRDFLibStore::test_search_by_id_and_date_range_succeeds",
    "tests/unit/general/test_rdflib_store.py::TestRDFLibStore::test_delete_succeeds",
    "tests/unit/general/test_rdflib_store.py::TestRDFLibStore::test_token_usage_succeeds",
    "tests/unit/general/test_rdflib_store.py::TestRDFLibStore::test_persistence_succeeds",
    "tests/unit/general/test_rdflib_store.py::TestRDFLibStore::test_store_vector_succeeds",
    "tests/unit/general/test_rdflib_store.py::TestRDFLibStore::test_similarity_search_succeeds",
    "tests/unit/general/test_rdflib_store.py::TestRDFLibStore::test_delete_vector_succeeds",
    "tests/unit/general/test_rdflib_store.py::TestRDFLibStore::test_get_collection_stats_succeeds",
    "tests/unit/general/test_requirement_models.py::TestRequirementModels::test_chat_models_succeeds",
    "tests/unit/general/test_requirement_models.py::TestRequirementModels::test_dialectical_reasoning_model_succeeds",
    "tests/unit/general/test_requirement_models.py::TestRequirementModels::test_impact_assessment_model_succeeds",
    "tests/unit/general/test_requirement_models.py::TestRequirementModels::test_requirement_change_model_succeeds",
    "tests/unit/general/test_requirement_models.py::TestRequirementModels::test_requirement_model_succeeds",
    "tests/unit/general/test_requirement_service.py::TestRequirementService::test_approve_change_succeeds",
    "tests/unit/general/test_requirement_service.py::TestRequirementService::test_create_requirement_succeeds",
    "tests/unit/general/test_requirement_service.py::TestRequirementService::test_delete_requirement_succeeds",
    "tests/unit/general/test_requirement_service.py::TestRequirementService::test_reject_change_succeeds",
    "tests/unit/general/test_requirement_service.py::TestRequirementService::test_update_requirement_succeeds",
    "tests/unit/general/test_resource_markers.py::test_is_lmstudio_available_succeeds",
    "tests/unit/general/test_resource_markers.py::test_is_codebase_available_succeeds",
    "tests/unit/general/test_resource_markers.py::test_is_cli_available_succeeds",
    "tests/unit/general/test_resource_markers.py::test_is_resource_available_succeeds",
    "tests/unit/general/test_resource_markers.py::test_with_resource_marker_succeeds",
    "tests/unit/general/test_resource_markers.py::test_pytest_collection_modifyitems_succeeds",
    "tests/unit/general/test_template_location.py::TestTemplateLocation::test_templates_exist_in_temp_location_succeeds",
    "tests/unit/general/test_template_location.py::TestTemplateLocation::test_can_use_template_to_create_test_succeeds",
    "tests/unit/general/test_test_first_metrics.py::TestTestFirstMetrics::test_analyze_commit_succeeds",
    "tests/unit/general/test_test_first_metrics.py::TestTestFirstMetrics::test_calculate_metrics_succeeds",
    "tests/unit/general/test_test_first_metrics.py::TestTestFirstMetrics::test_generate_metrics_report_succeeds",
    "tests/unit/general/test_test_first_metrics.py::TestTestFirstMetrics::test_get_commit_history_succeeds",
    "tests/unit/general/test_test_first_metrics.py::TestTestFirstMetrics::test_main_succeeds",
    "tests/unit/general/test_token_tracker.py::TestTokenTracker::test_count_conversation_tokens_succeeds",
    "tests/unit/general/test_token_tracker.py::TestTokenTracker::test_count_message_tokens_succeeds",
    "tests/unit/general/test_token_tracker.py::TestTokenTracker::test_count_tokens_succeeds",
    "tests/unit/general/test_token_tracker.py::TestTokenTracker::test_ensure_token_limit_succeeds",
    "tests/unit/general/test_token_tracker.py::TestTokenTracker::test_fallback_tokenizer_succeeds",
    "tests/unit/general/test_token_tracker.py::TestTokenTracker::test_prune_conversation_succeeds",
    "tests/unit/general/test_unified_config_loader.py::test_load_from_yaml_succeeds",
    "tests/unit/general/test_unified_config_loader.py::test_load_from_pyproject_succeeds",
    "tests/unit/general/test_unified_config_loader.py::test_save_and_exists_succeeds",
    "tests/unit/general/test_unified_config_loader.py::test_missing_files_succeeds",
    "tests/unit/general/test_unified_config_loader.py::test_version_mismatch_warning_succeeds",
    "tests/unit/general/test_unified_config_loader.py::test_loader_save_function_yaml_succeeds",
    "tests/unit/general/test_unified_config_loader.py::test_loader_save_function_pyproject_succeeds",
    "tests/unit/general/test_ux_bridge.py::test_cli_bridge_methods_succeeds",
    "tests/unit/general/test_ux_bridge.py::test_webui_bridge_methods_succeeds",
    "tests/unit/general/test_workflow_models.py::TestWorkflowModels::test_workflow_status_enum_succeeds",
    "tests/unit/general/test_workflow_models.py::TestWorkflowModels::test_workflow_step_initialization_succeeds",
    "tests/unit/general/test_workflow_models.py::TestWorkflowModels::test_workflow_initialization_succeeds",
    "tests/unit/general/test_workflow_models.py::TestWorkflowModels::test_workflow_with_steps_succeeds",
    "tests/unit/general/test_wsde_dynamic_roles.py::test_assign_roles_for_phase_selects_primus_by_expertise_has_expected",
    "tests/unit/general/test_wsde_model.py::TestWSDEModel::test_wsde_initialization_succeeds",
    "tests/unit/general/test_wsde_model.py::TestWSDEModel::test_wsde_with_custom_values_succeeds",
    "tests/unit/general/test_wsde_role_mapping.py::test_assign_roles_with_explicit_mapping_succeeds",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_wsde_team_initialization_succeeds",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_add_agent_succeeds",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_rotate_primus_succeeds",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_get_primus_succeeds",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_assign_roles_succeeds",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_get_role_specific_agents_succeeds",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_select_primus_by_expertise_succeeds",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_peer_based_structure_succeeds",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_autonomous_collaboration_succeeds",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_consensus_based_decision_making_succeeds",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_dialectical_review_process_succeeds",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_peer_review_with_acceptance_criteria_succeeds",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_peer_review_with_revision_cycle_succeeds",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_peer_review_with_dialectical_analysis_succeeds",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_contextdriven_leadership_succeeds",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_dialectical_reasoning_with_external_knowledge_succeeds",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_multi_disciplinary_dialectical_reasoning_succeeds",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_assign_roles_for_phase_varied_contexts_has_expected",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_vote_on_critical_decision_majority_path_succeeds",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_vote_on_critical_decision_weighted_path_succeeds",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_documentation_task_selects_doc_agent_and_updates_role_assignments_succeeds",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_select_primus_fallback_when_no_expertise_matches",
    "tests/unit/general/test_wsde_team_extended.py::TestWSDETeam::test_documentation_expert_becomes_primus_succeeds",
    "tests/unit/general/test_wsde_team_voting_invalid.py::test_vote_on_critical_decision_not_critical_raises_error",
    "tests/unit/general/test_wsde_team_voting_invalid.py::test_vote_on_critical_decision_no_options_raises_error",
    "tests/unit/general/test_wsde_voting.py::test_majority_vote_with_three_unique_choices_succeeds",
    "tests/unit/general/test_wsde_voting.py::test_tie_triggers_handle_tied_vote_succeeds",
    "tests/unit/general/test_wsde_voting.py::test_weighted_voting_prefers_expert_vote_succeeds",
    "tests/unit/general/test_wsde_voting.py::test_vote_on_critical_decision_no_votes_succeeds",
    "tests/unit/interface/test_api_advanced.py::test_endpoint",
    "tests/unit/interface/test_api_advanced.py::test_error_handling_in_all_endpoints",
    "tests/unit/interface/test_api_advanced.py::test_all_endpoints_authentication_succeeds",
    "tests/unit/interface/test_api_advanced.py::test_parameter_validation_is_valid",
    "tests/unit/interface/test_api_advanced.py::test_edge_cases_succeeds",
    "tests/unit/interface/test_api_endpoints.py::test_endpoint",
    "tests/unit/interface/test_api_endpoints.py::test_health_endpoint_requires_authentication_succeeds",
    "tests/unit/interface/test_api_endpoints.py::test_metrics_endpoint_requires_authentication_succeeds",
    "tests/unit/interface/test_api_endpoints.py::test_init_endpoint_initializes_project_succeeds",
    "tests/unit/interface/test_api_endpoints.py::test_gather_endpoint_collects_requirements_succeeds",
    "tests/unit/interface/test_api_endpoints.py::test_synthesize_endpoint_runs_pipeline_succeeds",
    "tests/unit/interface/test_api_endpoints.py::test_spec_endpoint_generates_specifications_succeeds",
    "tests/unit/interface/test_api_endpoints.py::test_test_endpoint_generates_tests_succeeds",
    "tests/unit/interface/test_api_endpoints.py::test_code_endpoint_generates_code_succeeds",
    "tests/unit/interface/test_api_endpoints.py::test_doctor_endpoint_runs_diagnostics_succeeds",
    "tests/unit/interface/test_api_endpoints.py::test_edrr_cycle_endpoint_runs_cycle_succeeds",
    "tests/unit/interface/test_api_endpoints.py::test_status_endpoint_returns_messages_returns_expected_result",
    "tests/unit/interface/test_api_endpoints.py::test_endpoint_succeeds",
    "tests/unit/interface/test_api_endpoints.py::test_endpoints_handle_errors_properly_raises_error",
    "tests/unit/interface/test_state_access.py::test_is_session_state_available",
    "tests/unit/interface/test_state_access.py::test_handle_state_error",
    "tests/unit/interface/test_state_access.py::test_get_session_value_with_none_session_state",
    "tests/unit/interface/test_state_access.py::test_get_session_value_with_attribute_access",
    "tests/unit/interface/test_state_access.py::test_get_session_value_with_dict_access",
    "tests/unit/interface/test_state_access.py::test_get_session_value_with_missing_key",
    "tests/unit/interface/test_state_access.py::test_get_session_value_with_exception",
    "tests/unit/interface/test_state_access.py::test_set_session_value_with_none_session_state",
    "tests/unit/interface/test_state_access.py::test_set_session_value_with_attribute_access",
    "tests/unit/interface/test_state_access.py::test_set_session_value_with_dict_access",
    "tests/unit/interface/test_state_access.py::test_set_session_value_with_attribute_exception",
    "tests/unit/interface/test_state_access.py::test_set_session_value_with_dict_exception",
    "tests/unit/interface/test_state_access.py::test_set_session_value_with_both_exceptions",
    "tests/unit/interface/test_state_access.py::test_integration_with_streamlit",
    "tests/unit/interface/test_wizard_state_manager.py::test_wizard_state_manager_initialization",
    "tests/unit/interface/test_wizard_state_manager.py::test_get_wizard_state_new",
    "tests/unit/interface/test_wizard_state_manager.py::test_get_wizard_state_existing",
    "tests/unit/interface/test_wizard_state_manager.py::test_has_wizard_state",
    "tests/unit/interface/test_wizard_state_manager.py::test_validate_wizard_state_valid",
    "tests/unit/interface/test_wizard_state_manager.py::test_validate_wizard_state_missing_key",
    "tests/unit/interface/test_wizard_state_manager.py::test_validate_wizard_state_invalid_step",
    "tests/unit/interface/test_wizard_state_manager.py::test_validate_wizard_state_mismatched_steps",
    "tests/unit/interface/test_wizard_state_manager.py::test_reset_wizard_state",
    "tests/unit/interface/test_wizard_state_manager.py::test_reset_wizard_state_error",
    "tests/unit/interface/test_wizard_state_manager.py::test_get_current_step",
    "tests/unit/interface/test_wizard_state_manager.py::test_go_to_step",
    "tests/unit/interface/test_wizard_state_manager.py::test_next_step",
    "tests/unit/interface/test_wizard_state_manager.py::test_previous_step",
    "tests/unit/interface/test_wizard_state_manager.py::test_set_completed",
    "tests/unit/interface/test_wizard_state_manager.py::test_is_completed",
    "tests/unit/interface/test_wizard_state_manager.py::test_get_value",
    "tests/unit/interface/test_wizard_state_manager.py::test_set_value",
    "tests/unit/interface/test_wizard_state_manager.py::test_simulate_wizard_manager_navigation",
    "tests/unit/interface/test_wizard_state_manager.py::test_set_wizard_manager_data",
    "tests/unit/interface/test_wizard_state_manager.py::test_gather_wizard_state_manager",
    "tests/unit/interface/test_wizard_state_manager.py::test_gather_wizard_workflow",
    "tests/unit/methodology/test_adhoc_adapter.py::test_should_start_cycle_true",
    "tests/unit/methodology/test_adhoc_adapter.py::test_should_progress_to_next_phase",
    "tests/unit/methodology/test_kanban_adapter.py::test_should_start_cycle",
    "tests/unit/methodology/test_kanban_adapter.py::test_progress_respects_wip_limit",
    "tests/unit/methodology/test_milestone_adapter.py::test_should_start_cycle",
    "tests/unit/methodology/test_milestone_adapter.py::test_progress_requires_approval_when_configured",
    "tests/unit/methodology/test_sprint_adapter.py::test_calculate_phase_end_time",
    "tests/unit/methodology/test_sprint_adapter.py::test_is_phase_time_exceeded_false",
    "tests/unit/methodology/test_sprint_adapter.py::test_should_progress_when_time_exceeded",
    "tests/unit/scripts/test_security_ops.py::test_collect_logs_missing_directory",
    "tests/unit/scripts/test_security_ops.py::test_run_audit_calls_security_audit",
    "tests/unit/scripts/test_security_ops.py::test_list_outdated_runs_poetry",
    "tests/unit/scripts/test_security_ops.py::test_apply_updates_runs_poetry",
    "tests/unit/security/test_api_authentication.py::test_verify_token_valid_is_valid",
    "tests/unit/security/test_api_authentication.py::test_verify_token_invalid_is_valid",
    "tests/unit/security/test_api_authentication.py::test_verify_token_missing_succeeds",
    "tests/unit/security/test_api_authentication.py::test_verify_token_wrong_format_succeeds",
    "tests/unit/security/test_api_authentication.py::test_verify_token_access_control_disabled_succeeds",
    "tests/unit/security/test_argon2_hash.py::test_argon2_hash_roundtrip",
    "tests/unit/security/test_authentication.py::test_hash_and_verify_password_succeeds",
    "tests/unit/security/test_authentication.py::test_authenticate_success_succeeds",
    "tests/unit/security/test_authentication.py::test_authenticate_failure_succeeds",
    "tests/unit/security/test_authorization.py::test_is_authorized_true_returns_expected_result",
    "tests/unit/security/test_authorization.py::test_is_authorized_false_returns_expected_result",
    "tests/unit/security/test_authorization.py::test_is_authorized_multiple_roles_succeeds",
    "tests/unit/security/test_authorization.py::test_is_authorized_wildcard_succeeds",
    "tests/unit/security/test_authorization.py::test_is_authorized_role_not_in_acl_returns_expected_result",
    "tests/unit/security/test_authorization.py::test_is_authorized_empty_roles_returns_expected_result",
    "tests/unit/security/test_authorization.py::test_is_authorized_empty_acl_returns_expected_result",
    "tests/unit/security/test_authorization.py::test_is_authorized_case_sensitivity_succeeds",
    "tests/unit/security/test_authorization.py::test_is_authorized_iterable_roles_succeeds",
    "tests/unit/security/test_authorization.py::test_require_authorization_raises",
    "tests/unit/security/test_authorization.py::test_require_authorization_no_exception_raises_error",
    "tests/unit/security/test_authorization.py::test_require_authorization_empty_roles_raises_error",
    "tests/unit/security/test_authorization.py::test_require_authorization_empty_acl_raises_error",
    "tests/unit/security/test_authorization_checks.py::test_require_authorization_allows_authorized_action",
    "tests/unit/security/test_authorization_checks.py::test_require_authorization_raises_forbidden",
    "tests/unit/security/test_encryption.py::test_generate_key_returns_expected_result",
    "tests/unit/security/test_encryption.py::test_encrypt_decrypt_roundtrip_succeeds",
    "tests/unit/security/test_encryption.py::test_get_fernet_with_key_succeeds",
    "tests/unit/security/test_encryption.py::test_get_fernet_with_string_key_succeeds",
    "tests/unit/security/test_encryption.py::test_get_fernet_with_bytes_key_succeeds",
    "tests/unit/security/test_encryption.py::test_get_fernet_with_env_var_succeeds",
    "tests/unit/security/test_encryption.py::test_get_fernet_no_key_raises_error",
    "tests/unit/security/test_encryption.py::test_encrypt_decrypt_with_env_var_succeeds",
    "tests/unit/security/test_encryption.py::test_decrypt_invalid_token_raises_error",
    "tests/unit/security/test_encryption.py::test_decrypt_with_wrong_key_raises_error",
    "tests/unit/security/test_sanitization.py::test_sanitize_input_removes_script_succeeds",
    "tests/unit/security/test_sanitization.py::test_sanitize_input_removes_control_chars_succeeds",
    "tests/unit/security/test_sanitization.py::test_sanitize_input_removes_both_succeeds",
    "tests/unit/security/test_sanitization.py::test_sanitize_input_strips_whitespace_succeeds",
    "tests/unit/security/test_sanitization.py::test_sanitize_input_no_script_tags_succeeds",
    "tests/unit/security/test_sanitization.py::test_sanitize_input_no_control_chars_succeeds",
    "tests/unit/security/test_sanitization.py::test_sanitize_input_complex_script_tags_succeeds",
    "tests/unit/security/test_sanitization.py::test_sanitize_input_multiple_script_tags_succeeds",
    "tests/unit/security/test_sanitization.py::test_validate_safe_input_with_safe_input_returns_expected_result",
    "tests/unit/security/test_sanitization.py::test_validate_safe_input_raises_with_script_raises_error",
    "tests/unit/security/test_sanitization.py::test_validate_safe_input_raises_with_control_chars_raises_error",
    "tests/unit/security/test_security_flags_env.py::test_authentication_disabled_allows_any_credentials",
    "tests/unit/security/test_security_flags_env.py::test_authentication_enabled_enforces",
    "tests/unit/security/test_security_flags_env.py::test_authorization_disabled_allows",
    "tests/unit/security/test_security_flags_env.py::test_authorization_enabled_enforces",
    "tests/unit/security/test_security_flags_env.py::test_sanitization_disabled_no_error",
    "tests/unit/security/test_security_flags_env.py::test_sanitization_enabled_raises",
    "tests/unit/security/test_tls_config.py::test_tls_config_validation_raises_error",
    "tests/unit/security/test_tls_config.py::test_tls_config_validation_partial_raises_error",
    "tests/unit/security/test_tls_config.py::test_tls_config_validation_key_only_succeeds",
    "tests/unit/security/test_tls_config.py::test_tls_config_validation_cert_only_succeeds",
    "tests/unit/security/test_tls_config.py::test_tls_config_validation_missing_raises_error",
    "tests/unit/security/test_tls_config.py::test_tls_config_as_requests_kwargs_default_succeeds",
    "tests/unit/security/test_tls_config.py::test_tls_config_as_requests_kwargs_verify_false_succeeds",
    "tests/unit/security/test_tls_config.py::test_tls_config_as_requests_kwargs_with_ca_file_has_expected",
    "tests/unit/security/test_tls_config.py::test_tls_config_as_requests_kwargs_with_cert_and_key_has_expected",
    "tests/unit/security/test_tls_config.py::test_tls_config_as_requests_kwargs_with_cert_only_has_expected",
    "tests/unit/security/test_tls_config.py::test_tls_config_as_requests_kwargs_ca_file_precedence_succeeds",
    "tests/unit/security/test_tls_config.py::test_tls_config_as_requests_kwargs_all_params_succeeds",
    "tests/unit/security/test_validation.py::TestValidateNonEmpty::test_valid_string_is_valid",
    "tests/unit/security/test_validation.py::TestValidateNonEmpty::test_invalid_string_is_valid[]",
    "tests/unit/security/test_validation.py::TestValidateNonEmpty::test_invalid_string_is_valid[   ]",
    "tests/unit/security/test_validation.py::TestValidateNonEmpty::test_invalid_string_is_valid[None]",
    "tests/unit/security/test_validation.py::TestValidateNonEmpty::test_non_string_value_succeeds",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_valid_int_is_valid[5-5_0]",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_valid_int_is_valid[5-5_1]",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_valid_int_is_valid[10-10]",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_valid_int_is_valid[-5--5]",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_valid_int_is_valid[0-0]",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_valid_int_with_range_is_valid[5-1-10-5]",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_valid_int_with_range_is_valid[1-1-10-1]",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_valid_int_with_range_is_valid[10-1-10-10]",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_valid_int_with_range_is_valid[-5--10-0--5]",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_valid_int_with_range_is_valid[0--10-10-0]",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_invalid_int_is_valid[abc]",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_invalid_int_is_valid[1.5]",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_invalid_int_is_valid[]",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_invalid_int_is_valid[None]",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_invalid_int_is_valid[value4]",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_invalid_int_is_valid[value5]",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_below_min_value_succeeds[0-1]",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_below_min_value_succeeds[-5-0]",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_below_min_value_succeeds[5-10]",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_above_max_value_succeeds[10-5]",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_above_max_value_succeeds[0--1]",
    "tests/unit/security/test_validation.py::TestValidateIntRange::test_above_max_value_succeeds[100-99]",
    "tests/unit/security/test_validation.py::TestValidateChoice::test_valid_choice_is_valid[a-choices0]",
    "tests/unit/security/test_validation.py::TestValidateChoice::test_valid_choice_is_valid[1-choices1]",
    "tests/unit/security/test_validation.py::TestValidateChoice::test_valid_choice_is_valid[True-choices2]",
    "tests/unit/security/test_validation.py::TestValidateChoice::test_valid_choice_is_valid[None-choices3]",
    "tests/unit/security/test_validation.py::TestValidateChoice::test_valid_choice_is_valid[value-choices4]",
    "tests/unit/security/test_validation.py::TestValidateChoice::test_valid_choice_is_valid[5-choices5]",
    "tests/unit/security/test_validation.py::TestValidateChoice::test_invalid_choice_is_valid[d-choices0]",
    "tests/unit/security/test_validation.py::TestValidateChoice::test_invalid_choice_is_valid[4-choices1]",
    "tests/unit/security/test_validation.py::TestValidateChoice::test_invalid_choice_is_valid[None-choices2]",
    "tests/unit/security/test_validation.py::TestValidateChoice::test_invalid_choice_is_valid[missing-choices3]",
    "tests/unit/security/test_validation.py::TestValidateChoice::test_invalid_choice_is_valid[20-choices4]",
    "________ ERROR collecting tests/unit/adapters/cli/test_typer_adapter.py ________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/adapters/cli/test_typer_adapter.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/adapters/cli/test_typer_adapter.py:4: in <module>",
    "from devsynth.adapters.cli.typer_adapter import build_app, _warn_if_features_disabled, show_help, parse_args, run_cli",
    "src/devsynth/adapters/cli/__init__.py:3: in <module>",
    "from .typer_adapter import app, run_cli",
    "src/devsynth/adapters/cli/typer_adapter.py:12: in <module>",
    "from devsynth.core.config_loader import load_config",
    "src/devsynth/core/__init__.py:10: in <module>",
    "from .workflows import (",
    "src/devsynth/core/workflows.py:20: in <module>",
    "workflow_manager = _get_workflow_manager()",
    "^^^^^^^^^^^^^^^^^^^^^^^",
    "src/devsynth/core/workflows.py:14: in _get_workflow_manager",
    "from devsynth.application.orchestration.workflow import workflow_manager",
    "src/devsynth/application/orchestration/workflow.py:24: in <module>",
    "from ...adapters.orchestration.langgraph_adapter import (",
    "src/devsynth/adapters/orchestration/langgraph_adapter.py:29: in <module>",
    "from ...adapters.agents.agent_adapter import AgentAdapter",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "______ ERROR collecting tests/unit/adapters/memory/test_memory_adapter.py ______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/adapters/memory/test_memory_adapter.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/adapters/memory/test_memory_adapter.py:8: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "__ ERROR collecting tests/unit/adapters/memory/test_memory_adapter_factory.py __",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/adapters/memory/test_memory_adapter_factory.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/adapters/memory/test_memory_adapter_factory.py:2: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/adapters/memory/test_vector_store_provider_factory.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/adapters/memory/test_vector_store_provider_factory.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/adapters/memory/test_vector_store_provider_factory.py:3: in <module>",
    "from devsynth.application.memory.vector_providers import SimpleVectorStoreProviderFactory",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "______ ERROR collecting tests/unit/adapters/test_chromadb_memory_store.py ______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/adapters/test_chromadb_memory_store.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "src/devsynth/adapters/chromadb_memory_store.py:2: in <module>",
    "import chromadb",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/chromadb/__init__.py:6: in <module>",
    "from chromadb.auth.token_authn import TokenTransportHeader",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/chromadb/auth/token_authn/__init__.py:24: in <module>",
    "from chromadb.telemetry.opentelemetry import (",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/chromadb/telemetry/opentelemetry/__init__.py:7: in <module>",
    "from opentelemetry import trace",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/opentelemetry/trace/__init__.py:84: in <module>",
    "from deprecated import deprecated",
    "E   ModuleNotFoundError: No module named 'deprecated'",
    "The above exception was the direct cause of the following exception:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/adapters/test_chromadb_memory_store.py:13: in <module>",
    "from devsynth.adapters.chromadb_memory_store import (",
    "src/devsynth/adapters/chromadb_memory_store.py:7: in <module>",
    "raise ImportError(",
    "E   ImportError: ChromaDBMemoryStore requires the 'chromadb' package. Install it with 'pip install chromadb' or use the dev extras.",
    "_____ ERROR collecting tests/unit/adapters/test_chromadb_vector_adapter.py _____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/adapters/test_chromadb_vector_adapter.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "src/devsynth/application/memory/adapters/chromadb_vector_adapter.py:21: in <module>",
    "import chromadb",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/chromadb/__init__.py:6: in <module>",
    "from chromadb.auth.token_authn import TokenTransportHeader",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/chromadb/auth/token_authn/__init__.py:24: in <module>",
    "from chromadb.telemetry.opentelemetry import (",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/chromadb/telemetry/opentelemetry/__init__.py:7: in <module>",
    "from opentelemetry import trace",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/opentelemetry/trace/__init__.py:84: in <module>",
    "from deprecated import deprecated",
    "E   ModuleNotFoundError: No module named 'deprecated'",
    "The above exception was the direct cause of the following exception:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/adapters/test_chromadb_vector_adapter.py:8: in <module>",
    "from devsynth.application.memory.adapters.chromadb_vector_adapter import (",
    "src/devsynth/application/memory/adapters/chromadb_vector_adapter.py:24: in <module>",
    "raise ImportError(",
    "E   ImportError: ChromaDBVectorAdapter requires the 'chromadb' package. Install it with 'pip install chromadb' or use the dev extras.",
    "________ ERROR collecting tests/unit/adapters/test_kuzu_memory_store.py ________",
    "tests/unit/adapters/test_kuzu_memory_store.py:16: in <module>",
    "@pytest.mark.medium",
    "^^^^^^",
    "E   NameError: name 'pytest' is not defined",
    "____ ERROR collecting tests/unit/adapters/test_provider_factory_env_vars.py ____",
    "tests/unit/adapters/test_provider_factory_env_vars.py:9: in <module>",
    "@pytest.mark.medium",
    "^^^^^^",
    "E   NameError: name 'pytest' is not defined",
    "__________ ERROR collecting tests/unit/adapters/test_sync_manager.py ___________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/adapters/test_sync_manager.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/adapters/test_sync_manager.py:20: in <module>",
    "memory_manager_module = _load_module(",
    "tests/unit/adapters/test_sync_manager.py:15: in _load_module",
    "spec.loader.exec_module(module)",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/agents/test_agent_memory_integration.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/agents/test_agent_memory_integration.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/agents/test_agent_memory_integration.py:7: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/agents/test_wsde_memory_integration.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/agents/test_wsde_memory_integration.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/agents/test_wsde_memory_integration.py:6: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_______ ERROR collecting tests/unit/application/cli/test_autocomplete.py _______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/cli/test_autocomplete.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/cli/test_autocomplete.py:4: in <module>",
    "from devsynth.application.cli.autocomplete import get_completions, complete_command, command_autocomplete, file_path_autocomplete, get_command_help, get_all_commands_help, COMMANDS, COMMAND_DESCRIPTIONS, COMMAND_EXAMPLES",
    "src/devsynth/application/cli/__init__.py:13: in <module>",
    "from .cli_commands import (",
    "src/devsynth/application/cli/cli_commands.py:15: in <module>",
    "from devsynth.core import workflows",
    "src/devsynth/core/__init__.py:10: in <module>",
    "from .workflows import (",
    "src/devsynth/core/workflows.py:20: in <module>",
    "workflow_manager = _get_workflow_manager()",
    "^^^^^^^^^^^^^^^^^^^^^^^",
    "src/devsynth/core/workflows.py:14: in _get_workflow_manager",
    "from devsynth.application.orchestration.workflow import workflow_manager",
    "src/devsynth/application/orchestration/workflow.py:24: in <module>",
    "from ...adapters.orchestration.langgraph_adapter import (",
    "src/devsynth/adapters/orchestration/langgraph_adapter.py:29: in <module>",
    "from ...adapters.agents.agent_adapter import AgentAdapter",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "____ ERROR collecting tests/unit/application/cli/test_enhanced_progress.py _____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/cli/test_enhanced_progress.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/cli/test_enhanced_progress.py:5: in <module>",
    "from devsynth.application.cli.progress import EnhancedProgressIndicator, ProgressManager, create_enhanced_progress, create_task_table, run_with_progress",
    "src/devsynth/application/cli/__init__.py:13: in <module>",
    "from .cli_commands import (",
    "src/devsynth/application/cli/cli_commands.py:15: in <module>",
    "from devsynth.core import workflows",
    "src/devsynth/core/__init__.py:10: in <module>",
    "from .workflows import (",
    "src/devsynth/core/workflows.py:20: in <module>",
    "workflow_manager = _get_workflow_manager()",
    "^^^^^^^^^^^^^^^^^^^^^^^",
    "src/devsynth/core/workflows.py:14: in _get_workflow_manager",
    "from devsynth.application.orchestration.workflow import workflow_manager",
    "src/devsynth/application/orchestration/workflow.py:24: in <module>",
    "from ...adapters.orchestration.langgraph_adapter import (",
    "src/devsynth/adapters/orchestration/langgraph_adapter.py:29: in <module>",
    "from ...adapters.agents.agent_adapter import AgentAdapter",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "___________ ERROR collecting tests/unit/application/cli/test_help.py ___________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/cli/test_help.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/cli/test_help.py:7: in <module>",
    "from devsynth.application.cli.help import get_command_help, display_command_help, get_all_commands_help, display_all_commands_help, create_command_table, display_command_table, format_command_help_markdown, display_command_help_markdown, get_command_usage, display_command_usage, get_command_examples, display_command_examples",
    "src/devsynth/application/cli/__init__.py:13: in <module>",
    "from .cli_commands import (",
    "src/devsynth/application/cli/cli_commands.py:15: in <module>",
    "from devsynth.core import workflows",
    "src/devsynth/core/__init__.py:10: in <module>",
    "from .workflows import (",
    "src/devsynth/core/workflows.py:20: in <module>",
    "workflow_manager = _get_workflow_manager()",
    "^^^^^^^^^^^^^^^^^^^^^^^",
    "src/devsynth/core/workflows.py:14: in _get_workflow_manager",
    "from devsynth.application.orchestration.workflow import workflow_manager",
    "src/devsynth/application/orchestration/workflow.py:24: in <module>",
    "from ...adapters.orchestration.langgraph_adapter import (",
    "src/devsynth/adapters/orchestration/langgraph_adapter.py:29: in <module>",
    "from ...adapters.agents.agent_adapter import AgentAdapter",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "______ ERROR collecting tests/unit/application/cli/test_ingest_phases.py _______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/cli/test_ingest_phases.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/cli/test_ingest_phases.py:11: in <module>",
    "spec.loader.exec_module(ingest_cmd)",
    "src/devsynth/application/cli/ingest_cmd.py:22: in <module>",
    "from devsynth.application.ingestion import Ingestion",
    "src/devsynth/application/ingestion.py:18: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_________ ERROR collecting tests/unit/application/cli/test_init_cmd.py _________",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/cli/test_init_cmd.py\", line 39",
    "E       original = $1",
    "E                  ^",
    "E   SyntaxError: invalid syntax",
    "_____ ERROR collecting tests/unit/application/cli/test_metrics_commands.py _____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/cli/test_metrics_commands.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/cli/test_metrics_commands.py:11: in <module>",
    "align_mod = importlib.import_module(",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "src/devsynth/application/cli/__init__.py:13: in <module>",
    "from .cli_commands import (",
    "src/devsynth/application/cli/cli_commands.py:15: in <module>",
    "from devsynth.core import workflows",
    "src/devsynth/core/__init__.py:10: in <module>",
    "from .workflows import (",
    "src/devsynth/core/workflows.py:20: in <module>",
    "workflow_manager = _get_workflow_manager()",
    "^^^^^^^^^^^^^^^^^^^^^^^",
    "src/devsynth/core/workflows.py:14: in _get_workflow_manager",
    "from devsynth.application.orchestration.workflow import workflow_manager",
    "src/devsynth/application/orchestration/workflow.py:24: in <module>",
    "from ...adapters.orchestration.langgraph_adapter import (",
    "src/devsynth/adapters/orchestration/langgraph_adapter.py:29: in <module>",
    "from ...adapters.agents.agent_adapter import AgentAdapter",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "__ ERROR collecting tests/unit/application/cli/test_requirements_commands.py ___",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/cli/test_requirements_commands.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/cli/test_requirements_commands.py:8: in <module>",
    "from devsynth.application.cli import requirements_commands as rc",
    "src/devsynth/application/cli/__init__.py:13: in <module>",
    "from .cli_commands import (",
    "src/devsynth/application/cli/cli_commands.py:15: in <module>",
    "from devsynth.core import workflows",
    "src/devsynth/core/__init__.py:10: in <module>",
    "from .workflows import (",
    "src/devsynth/core/workflows.py:20: in <module>",
    "workflow_manager = _get_workflow_manager()",
    "^^^^^^^^^^^^^^^^^^^^^^^",
    "src/devsynth/core/workflows.py:14: in _get_workflow_manager",
    "from devsynth.application.orchestration.workflow import workflow_manager",
    "src/devsynth/application/orchestration/workflow.py:24: in <module>",
    "from ...adapters.orchestration.langgraph_adapter import (",
    "src/devsynth/adapters/orchestration/langgraph_adapter.py:29: in <module>",
    "from ...adapters.agents.agent_adapter import AgentAdapter",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_______ ERROR collecting tests/unit/application/cli/test_setup_wizard.py _______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/cli/test_setup_wizard.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/cli/test_setup_wizard.py:1: in <module>",
    "from devsynth.application.cli.setup_wizard import SetupWizard",
    "src/devsynth/application/cli/__init__.py:13: in <module>",
    "from .cli_commands import (",
    "src/devsynth/application/cli/cli_commands.py:15: in <module>",
    "from devsynth.core import workflows",
    "src/devsynth/core/__init__.py:10: in <module>",
    "from .workflows import (",
    "src/devsynth/core/workflows.py:20: in <module>",
    "workflow_manager = _get_workflow_manager()",
    "^^^^^^^^^^^^^^^^^^^^^^^",
    "src/devsynth/core/workflows.py:14: in _get_workflow_manager",
    "from devsynth.application.orchestration.workflow import workflow_manager",
    "src/devsynth/application/orchestration/workflow.py:24: in <module>",
    "from ...adapters.orchestration.langgraph_adapter import (",
    "src/devsynth/adapters/orchestration/langgraph_adapter.py:29: in <module>",
    "from ...adapters.agents.agent_adapter import AgentAdapter",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/code_analysis/test_ast_workflow_integration.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/code_analysis/test_ast_workflow_integration.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/code_analysis/test_ast_workflow_integration.py:6: in <module>",
    "from devsynth.application.code_analysis.ast_workflow_integration import AstWorkflowIntegration",
    "src/devsynth/application/code_analysis/ast_workflow_integration.py:13: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/collaboration/test_collaborative_wsde_team.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/collaboration/test_collaborative_wsde_team.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/collaboration/test_collaborative_wsde_team.py:10: in <module>",
    "from devsynth.application.collaboration.collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:15: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/collaboration/test_collaborative_wsde_team_task_management.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/collaboration/test_collaborative_wsde_team_task_management.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/collaboration/test_collaborative_wsde_team_task_management.py:3: in <module>",
    "from devsynth.application.collaboration.collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:15: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "__ ERROR collecting tests/unit/application/collaboration/test_coordinator.py ___",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/collaboration/test_coordinator.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/collaboration/test_coordinator.py:4: in <module>",
    "from devsynth.application.collaboration.coordinator import AgentCoordinatorImpl",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:15: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/collaboration/test_delegate_task.py __",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/collaboration/test_delegate_task.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/collaboration/test_delegate_task.py:3: in <module>",
    "from devsynth.application.collaboration.coordinator import AgentCoordinatorImpl",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:15: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/collaboration/test_delegate_workflows.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/collaboration/test_delegate_workflows.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/collaboration/test_delegate_workflows.py:2: in <module>",
    "from devsynth.application.collaboration.coordinator import AgentCoordinatorImpl",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:15: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/collaboration/test_message_protocol.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/collaboration/test_message_protocol.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/collaboration/test_message_protocol.py:2: in <module>",
    "from devsynth.application.collaboration.message_protocol import MessageProtocol, MessageType",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:15: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/collaboration/test_wsde_team_consensus_summary.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/collaboration/test_wsde_team_consensus_summary.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/collaboration/test_wsde_team_consensus_summary.py:1: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import ConsensusBuildingMixin",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:15: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/documentation/test_documentation_ingestion_manager.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/documentation/test_documentation_ingestion_manager.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/documentation/test_documentation_ingestion_manager.py:8: in <module>",
    "from devsynth.application.documentation.documentation_ingestion_manager import DocumentationIngestionManager",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/documentation/test_documentation_manager_utils.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/documentation/test_documentation_manager_utils.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/documentation/test_documentation_manager_utils.py:5: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "______ ERROR collecting tests/unit/application/edrr/test_auto_progress.py ______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/edrr/test_auto_progress.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/edrr/test_auto_progress.py:3: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_______ ERROR collecting tests/unit/application/edrr/test_coordinator.py _______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/edrr/test_coordinator.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/edrr/test_coordinator.py:4: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator, EDRRCoordinatorError",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "____ ERROR collecting tests/unit/application/edrr/test_coordinator_core.py _____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/edrr/test_coordinator_core.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/edrr/test_coordinator_core.py:5: in <module>",
    "from devsynth.application.edrr.coordinator_core import EDRRCoordinatorCore, EDRRCoordinatorError",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/edrr/test_coordinator_phases_simple.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/edrr/test_coordinator_phases_simple.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/edrr/test_coordinator_phases_simple.py:25: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "____ ERROR collecting tests/unit/application/edrr/test_edrr_coordinator.py _____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/edrr/test_edrr_coordinator.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/edrr/test_edrr_coordinator.py:5: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator, EDRRCoordinatorError",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/edrr/test_edrr_coordinator_enhanced.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/edrr/test_edrr_coordinator_enhanced.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/edrr/test_edrr_coordinator_enhanced.py:5: in <module>",
    "from devsynth.application.edrr.edrr_coordinator_enhanced import EnhancedEDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/edrr/test_edrr_phase_transitions.py __",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/edrr/test_edrr_phase_transitions.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/edrr/test_edrr_phase_transitions.py:11: in <module>",
    "from devsynth.application.edrr.edrr_phase_transitions import PhaseTransitionMetrics, calculate_enhanced_quality_score, collect_phase_metrics, QualityThreshold, MetricType",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/edrr/test_enhanced_recursion_termination.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/edrr/test_enhanced_recursion_termination.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/edrr/test_enhanced_recursion_termination.py:13: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/edrr/test_execute_single_agent_task.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/edrr/test_execute_single_agent_task.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/edrr/test_execute_single_agent_task.py:4: in <module>",
    "from devsynth.application.edrr.edrr_coordinator_enhanced import EnhancedEDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_____ ERROR collecting tests/unit/application/edrr/test_manifest_parser.py _____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/edrr/test_manifest_parser.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/edrr/test_manifest_parser.py:13: in <module>",
    "from devsynth.application.edrr.manifest_parser import ManifestParser, ManifestParseError, MANIFEST_SCHEMA",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_______ ERROR collecting tests/unit/application/edrr/test_micro_cycle.py _______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/edrr/test_micro_cycle.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/edrr/test_micro_cycle.py:4: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator, EDRRCoordinatorError",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "__ ERROR collecting tests/unit/application/edrr/test_micro_cycle_execution.py __",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/edrr/test_micro_cycle_execution.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/edrr/test_micro_cycle_execution.py:4: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "____ ERROR collecting tests/unit/application/edrr/test_micro_cycle_hooks.py ____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/edrr/test_micro_cycle_hooks.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/edrr/test_micro_cycle_hooks.py:4: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "____ ERROR collecting tests/unit/application/edrr/test_phase_progression.py ____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/edrr/test_phase_progression.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/edrr/test_phase_progression.py:3: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "___ ERROR collecting tests/unit/application/edrr/test_progress_recursion.py ____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/edrr/test_progress_recursion.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/edrr/test_progress_recursion.py:5: in <module>",
    "from devsynth.application.documentation.documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "___ ERROR collecting tests/unit/application/edrr/test_recursion_features.py ____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/edrr/test_recursion_features.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/edrr/test_recursion_features.py:11: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/edrr/test_recursive_edrr_coordinator.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/edrr/test_recursive_edrr_coordinator.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/edrr/test_recursive_edrr_coordinator.py:5: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator, EDRRCoordinatorError",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_____ ERROR collecting tests/unit/application/edrr/test_result_analysis.py _____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/edrr/test_result_analysis.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/edrr/test_result_analysis.py:5: in <module>",
    "from devsynth.application.documentation.documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "________ ERROR collecting tests/unit/application/edrr/test_templates.py ________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/edrr/test_templates.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/edrr/test_templates.py:3: in <module>",
    "from devsynth.application.edrr.templates import EXPAND_PHASE_TEMPLATE, DIFFERENTIATE_PHASE_TEMPLATE, REFINE_PHASE_TEMPLATE, RETROSPECT_PHASE_TEMPLATE, register_edrr_templates",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/llm/test_import_without_lmstudio.py __",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/llm/test_import_without_lmstudio.py\", line 19",
    "E       original = $1",
    "E                  ^",
    "E   SyntaxError: invalid syntax",
    "__ ERROR collecting tests/unit/application/memory/test_basic_crud_adapters.py __",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/memory/test_basic_crud_adapters.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/memory/test_basic_crud_adapters.py:6: in <module>",
    "from devsynth.application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_____ ERROR collecting tests/unit/application/memory/test_duckdb_store.py ______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/memory/test_duckdb_store.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/memory/test_duckdb_store.py:9: in <module>",
    "from devsynth.application.memory.duckdb_store import DuckDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "___ ERROR collecting tests/unit/application/memory/test_duckdb_store_hnsw.py ___",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/memory/test_duckdb_store_hnsw.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/memory/test_duckdb_store_hnsw.py:11: in <module>",
    "from devsynth.application.memory.duckdb_store import DuckDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "______ ERROR collecting tests/unit/application/memory/test_faiss_store.py ______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/memory/test_faiss_store.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/memory/test_faiss_store.py:13: in <module>",
    "from devsynth.application.memory.faiss_store import FAISSStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_______ ERROR collecting tests/unit/application/memory/test_fallback.py ________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/memory/test_fallback.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/memory/test_fallback.py:9: in <module>",
    "from devsynth.application.memory.fallback import (",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/memory/test_graph_memory_adapter.py __",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/memory/test_graph_memory_adapter.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/memory/test_graph_memory_adapter.py:12: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "______ ERROR collecting tests/unit/application/memory/test_kuzu_store.py _______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/memory/test_kuzu_store.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/memory/test_kuzu_store.py:6: in <module>",
    "from devsynth.application.memory.kuzu_store import KuzuStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "____ ERROR collecting tests/unit/application/memory/test_memory_manager.py _____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/memory/test_memory_manager.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/memory/test_memory_manager.py:19: in <module>",
    "memory_manager_module = _load_module(",
    "tests/unit/application/memory/test_memory_manager.py:14: in _load_module",
    "spec.loader.exec_module(module)",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/memory/test_memory_manager_search.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/memory/test_memory_manager_search.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/memory/test_memory_manager_search.py:18: in <module>",
    "memory_manager_module = _load_module(",
    "tests/unit/application/memory/test_memory_manager_search.py:13: in _load_module",
    "spec.loader.exec_module(module)",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/memory/test_multi_layered_memory.py __",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/memory/test_multi_layered_memory.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/memory/test_multi_layered_memory.py:6: in <module>",
    "from devsynth.application.memory.multi_layered_memory import MultiLayeredMemorySystem",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_______ ERROR collecting tests/unit/application/memory/test_recovery.py ________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/memory/test_recovery.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/memory/test_recovery.py:12: in <module>",
    "from devsynth.application.memory.recovery import (",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_________ ERROR collecting tests/unit/application/memory/test_retry.py _________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/memory/test_retry.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/memory/test_retry.py:9: in <module>",
    "from devsynth.application.memory.retry import (",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_____ ERROR collecting tests/unit/application/memory/test_sync_wrappers.py _____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/memory/test_sync_wrappers.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/memory/test_sync_wrappers.py:3: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_____ ERROR collecting tests/unit/application/memory/test_tinydb_store.py ______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/memory/test_tinydb_store.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/memory/test_tinydb_store.py:8: in <module>",
    "from devsynth.application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/application/orchestration/test_workflow_manager.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/orchestration/test_workflow_manager.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/orchestration/test_workflow_manager.py:5: in <module>",
    "from devsynth.application.orchestration.workflow import WorkflowManager",
    "src/devsynth/application/orchestration/workflow.py:24: in <module>",
    "from ...adapters.orchestration.langgraph_adapter import (",
    "src/devsynth/adapters/orchestration/langgraph_adapter.py:29: in <module>",
    "from ...adapters.agents.agent_adapter import AgentAdapter",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_____ ERROR collecting tests/unit/application/prompts/test_auto_tuning.py ______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/prompts/test_auto_tuning.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/prompts/test_auto_tuning.py:10: in <module>",
    "from devsynth.application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_______ ERROR collecting tests/unit/application/wsde/test_wsde_utils.py ________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/application/wsde/test_wsde_utils.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/application/wsde/test_wsde_utils.py:2: in <module>",
    "from devsynth.application.collaboration.WSDE import WSDE",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:15: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "__ ERROR collecting tests/unit/behavior/test_alignment_metrics_steps_unit.py ___",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/behavior/test_alignment_metrics_steps_unit.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/behavior/test_alignment_metrics_steps_unit.py:9: in <module>",
    "cmd = importlib.import_module(",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "src/devsynth/application/cli/__init__.py:13: in <module>",
    "from .cli_commands import (",
    "src/devsynth/application/cli/cli_commands.py:15: in <module>",
    "from devsynth.core import workflows",
    "E   ImportError: cannot import name 'workflows' from 'devsynth.core' (unknown location)",
    "___ ERROR collecting tests/unit/behavior/test_analyze_commands_steps_unit.py ___",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:186: in exec_module",
    "exec(co, module.__dict__)",
    "tests/unit/behavior/test_analyze_commands_steps_unit.py:4: in <module>",
    "import tests.behavior.steps.test_analyze_commands_steps as steps",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/behavior/steps/test_analyze_commands_steps.py\", line 457",
    "E       @pytest.mark.medium",
    "E       ^",
    "E   SyntaxError: invalid syntax",
    "____________ ERROR collecting tests/unit/domain/models/test_wsde.py ____________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/domain/models/test_wsde.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/domain/models/test_wsde.py:9: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam, WSDE",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:19: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "___ ERROR collecting tests/unit/domain/models/test_wsde_code_improvements.py ___",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/domain/models/test_wsde_code_improvements.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/domain/models/test_wsde_code_improvements.py:4: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:19: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/unit/domain/models/test_wsde_context_driven_leadership.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/domain/models/test_wsde_context_driven_leadership.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/domain/models/test_wsde_context_driven_leadership.py:10: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:19: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "____ ERROR collecting tests/unit/domain/models/test_wsde_security_checks.py ____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/domain/models/test_wsde_security_checks.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/domain/models/test_wsde_security_checks.py:2: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:19: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_________ ERROR collecting tests/unit/domain/test_wsde_facade_roles.py _________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/domain/test_wsde_facade_roles.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/domain/test_wsde_facade_roles.py:2: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:19: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_________ ERROR collecting tests/unit/domain/test_wsde_voting_logic.py _________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/domain/test_wsde_voting_logic.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/domain/test_wsde_voting_logic.py:3: in <module>",
    "import devsynth.application.edrr.edrr_phase_transitions as _ph",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "__________ ERROR collecting tests/unit/general/test_agent_adapter.py ___________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_agent_adapter.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_agent_adapter.py:1: in <module>",
    "from devsynth.adapters.agents.agent_adapter import SimplifiedAgentFactory",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "______ ERROR collecting tests/unit/general/test_agent_adapter_delegate.py ______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_agent_adapter_delegate.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_agent_adapter_delegate.py:5: in <module>",
    "import devsynth.adapters.cli.typer_adapter as typer_adapter",
    "src/devsynth/adapters/cli/__init__.py:3: in <module>",
    "from .typer_adapter import app, run_cli",
    "src/devsynth/adapters/cli/typer_adapter.py:15: in <module>",
    "from devsynth.application.cli import (",
    "src/devsynth/application/cli/__init__.py:13: in <module>",
    "from .cli_commands import (",
    "src/devsynth/application/cli/cli_commands.py:15: in <module>",
    "from devsynth.core import workflows",
    "E   ImportError: cannot import name 'workflows' from 'devsynth.core' (unknown location)",
    "_______ ERROR collecting tests/unit/general/test_agent_collaboration.py ________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_agent_collaboration.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_agent_collaboration.py:5: in <module>",
    "from devsynth.application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "________ ERROR collecting tests/unit/general/test_agent_coordinator.py _________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_agent_coordinator.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_agent_coordinator.py:10: in <module>",
    "from devsynth.application.collaboration.coordinator import AgentCoordinatorImpl",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:15: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "________ ERROR collecting tests/unit/general/test_chroma_db_adapter.py _________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_chroma_db_adapter.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "src/devsynth/adapters/memory/chroma_db_adapter.py:10: in <module>",
    "import chromadb",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/chromadb/__init__.py:6: in <module>",
    "from chromadb.auth.token_authn import TokenTransportHeader",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/chromadb/auth/token_authn/__init__.py:24: in <module>",
    "from chromadb.telemetry.opentelemetry import (",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/chromadb/telemetry/opentelemetry/__init__.py:7: in <module>",
    "from opentelemetry import trace",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/opentelemetry/trace/__init__.py:84: in <module>",
    "from deprecated import deprecated",
    "E   ModuleNotFoundError: No module named 'deprecated'",
    "The above exception was the direct cause of the following exception:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_chroma_db_adapter.py:15: in <module>",
    "from devsynth.adapters.memory.chroma_db_adapter import ChromaDBAdapter",
    "src/devsynth/adapters/memory/chroma_db_adapter.py:12: in <module>",
    "raise ImportError(",
    "E   ImportError: ChromaDBAdapter requires the 'chromadb' package. Install it with 'pip install chromadb' or use the dev extras.",
    "_______________ ERROR collecting tests/unit/general/test_cli.py ________________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_cli.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_cli.py:7: in <module>",
    "from devsynth.adapters.cli.typer_adapter import build_app",
    "src/devsynth/adapters/cli/__init__.py:3: in <module>",
    "from .typer_adapter import app, run_cli",
    "src/devsynth/adapters/cli/typer_adapter.py:15: in <module>",
    "from devsynth.application.cli import (",
    "src/devsynth/application/cli/__init__.py:13: in <module>",
    "from .cli_commands import (",
    "src/devsynth/application/cli/cli_commands.py:15: in <module>",
    "from devsynth.core import workflows",
    "E   ImportError: cannot import name 'workflows' from 'devsynth.core' (unknown location)",
    "___________ ERROR collecting tests/unit/general/test_cli_commands.py ___________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_cli_commands.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_cli_commands.py:6: in <module>",
    "from devsynth.adapters.cli.typer_adapter import build_app",
    "src/devsynth/adapters/cli/__init__.py:3: in <module>",
    "from .typer_adapter import app, run_cli",
    "src/devsynth/adapters/cli/typer_adapter.py:15: in <module>",
    "from devsynth.application.cli import (",
    "src/devsynth/application/cli/__init__.py:13: in <module>",
    "from .cli_commands import (",
    "src/devsynth/application/cli/cli_commands.py:15: in <module>",
    "from devsynth.core import workflows",
    "E   ImportError: cannot import name 'workflows' from 'devsynth.core' (unknown location)",
    "__________ ERROR collecting tests/unit/general/test_core_workflows.py __________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_core_workflows.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_core_workflows.py:4: in <module>",
    "from devsynth.core import workflows",
    "E   ImportError: cannot import name 'workflows' from 'devsynth.core' (unknown location)",
    "______ ERROR collecting tests/unit/general/test_delegate_task_disabled.py ______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_delegate_task_disabled.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_delegate_task_disabled.py:1: in <module>",
    "from devsynth.application.collaboration.coordinator import AgentCoordinatorImpl",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:15: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "__________ ERROR collecting tests/unit/general/test_edrr_cycle_cmd.py __________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_edrr_cycle_cmd.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_edrr_cycle_cmd.py:4: in <module>",
    "from devsynth.application.cli.commands.edrr_cycle_cmd import edrr_cycle_cmd",
    "src/devsynth/application/cli/__init__.py:13: in <module>",
    "from .cli_commands import (",
    "src/devsynth/application/cli/cli_commands.py:15: in <module>",
    "from devsynth.core import workflows",
    "E   ImportError: cannot import name 'workflows' from 'devsynth.core' (unknown location)",
    "_______ ERROR collecting tests/unit/general/test_edrr_manifest_string.py _______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_edrr_manifest_string.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_edrr_manifest_string.py:3: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "____________ ERROR collecting tests/unit/general/test_ingest_cmd.py ____________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_ingest_cmd.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_ingest_cmd.py:26: in <module>",
    "spec.loader.exec_module(ingest_cmd)",
    "src/devsynth/application/cli/ingest_cmd.py:22: in <module>",
    "from devsynth.application.ingestion import Ingestion",
    "src/devsynth/application/ingestion.py:18: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "____ ERROR collecting tests/unit/general/test_ingestion_edrr_integration.py ____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_ingestion_edrr_integration.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_ingestion_edrr_integration.py:7: in <module>",
    "from devsynth.application.ingestion import Ingestion",
    "src/devsynth/application/ingestion.py:18: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "________ ERROR collecting tests/unit/general/test_inspect_config_cmd.py ________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_inspect_config_cmd.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_inspect_config_cmd.py:5: in <module>",
    "from devsynth.application.cli.commands.inspect_config_cmd import inspect_config_cmd",
    "src/devsynth/application/cli/__init__.py:13: in <module>",
    "from .cli_commands import (",
    "src/devsynth/application/cli/cli_commands.py:15: in <module>",
    "from devsynth.core import workflows",
    "E   ImportError: cannot import name 'workflows' from 'devsynth.core' (unknown location)",
    "_______ ERROR collecting tests/unit/general/test_kuzu_project_startup.py _______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_kuzu_project_startup.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_kuzu_project_startup.py:9: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "____________ ERROR collecting tests/unit/general/test_kuzu_store.py ____________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_kuzu_store.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_kuzu_store.py:6: in <module>",
    "KuzuStore = importlib.import_module(",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "________ ERROR collecting tests/unit/general/test_langgraph_adapter.py _________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_langgraph_adapter.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_langgraph_adapter.py:5: in <module>",
    "from devsynth.adapters.orchestration.langgraph_adapter import WorkflowState, FileSystemCheckpointSaver, LangGraphWorkflowEngine, NeedsHumanInterventionError, FileSystemWorkflowRepository",
    "src/devsynth/adapters/orchestration/langgraph_adapter.py:29: in <module>",
    "from ...adapters.agents.agent_adapter import AgentAdapter",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "___ ERROR collecting tests/unit/general/test_memory_system_with_chromadb.py ____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_memory_system_with_chromadb.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_memory_system_with_chromadb.py:16: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_____ ERROR collecting tests/unit/general/test_memory_system_with_kuzu.py ______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_memory_system_with_kuzu.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_memory_system_with_kuzu.py:7: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "___ ERROR collecting tests/unit/general/test_multi_agent_adapter_workflow.py ___",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_multi_agent_adapter_workflow.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_multi_agent_adapter_workflow.py:3: in <module>",
    "from devsynth.adapters.agents.agent_adapter import AgentAdapter",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "___________ ERROR collecting tests/unit/general/test_project_yaml.py ___________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_project_yaml.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_project_yaml.py:12: in <module>",
    "from devsynth.application.cli.ingest_cmd import load_manifest",
    "src/devsynth/application/cli/__init__.py:13: in <module>",
    "from .cli_commands import (",
    "src/devsynth/application/cli/cli_commands.py:15: in <module>",
    "from devsynth.core import workflows",
    "E   ImportError: cannot import name 'workflows' from 'devsynth.core' (unknown location)",
    "__________ ERROR collecting tests/unit/general/test_unified_agent.py ___________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_unified_agent.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_unified_agent.py:2: in <module>",
    "from devsynth.application.agents.unified_agent import UnifiedAgent, MVP_CAPABILITIES",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "____ ERROR collecting tests/unit/general/test_unified_agent_code_prompt.py _____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_unified_agent_code_prompt.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_unified_agent_code_prompt.py:1: in <module>",
    "from devsynth.application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "________ ERROR collecting tests/unit/general/test_unit_cli_commands.py _________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_unit_cli_commands.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_unit_cli_commands.py:6: in <module>",
    "from devsynth.application.cli import cli_commands",
    "src/devsynth/application/cli/__init__.py:13: in <module>",
    "from .cli_commands import (",
    "src/devsynth/application/cli/cli_commands.py:15: in <module>",
    "from devsynth.core import workflows",
    "E   ImportError: cannot import name 'workflows' from 'devsynth.core' (unknown location)",
    "_____________ ERROR collecting tests/unit/general/test_workflow.py _____________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_workflow.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_workflow.py:3: in <module>",
    "from devsynth.adapters.orchestration.langgraph_adapter import NeedsHumanInterventionError",
    "src/devsynth/adapters/orchestration/langgraph_adapter.py:29: in <module>",
    "from ...adapters.agents.agent_adapter import AgentAdapter",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "______ ERROR collecting tests/unit/general/test_wsde_team_coordinator.py _______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_wsde_team_coordinator.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_wsde_team_coordinator.py:10: in <module>",
    "from devsynth.adapters.agents.agent_adapter import WSDETeamCoordinator",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "______ ERROR collecting tests/unit/general/test_wsde_voting_mechanisms.py ______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/general/test_wsde_voting_mechanisms.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/general/test_wsde_voting_mechanisms.py:11: in <module>",
    "from devsynth.application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_________ ERROR collecting tests/unit/interface/test_agentapi_class.py _________",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_agentapi_class.py\", line 36",
    "E       \"\"\"Test that cmd succeeds.",
    "E       ^^^^^^^^^^^^^",
    "E   IndentationError: expected an indented block after function definition on line 34",
    "_______ ERROR collecting tests/unit/interface/test_bridge_conformance.py _______",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_bridge_conformance.py\", line 45",
    "E       import $1 as $2",
    "E              ^",
    "E   SyntaxError: invalid syntax",
    "_________ ERROR collecting tests/unit/interface/test_cli_components.py _________",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_cli_components.py\", line 19",
    "E       \"\"\"Test the create_progress method of CLIUXBridge.",
    "E       ^^^^^^^^^^^^^",
    "E   IndentationError: expected an indented block after function definition on line 17",
    "__________ ERROR collecting tests/unit/interface/test_cliuxbridge.py ___________",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_cliuxbridge.py\", line 19",
    "E       \"\"\"Test that cliuxbridge ask question succeeds.",
    "E       ^^^^^^^^^^^^^",
    "E   IndentationError: expected an indented block after function definition on line 17",
    "________ ERROR collecting tests/unit/interface/test_output_formatter.py ________",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_output_formatter.py\", line 34",
    "E       \"\"\"Test sanitizing output text.",
    "E       ^^^^^^^^^^^^^",
    "E   IndentationError: expected an indented block after function definition on line 32",
    "______ ERROR collecting tests/unit/interface/test_output_sanitization.py _______",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_output_sanitization.py\", line 110",
    "E       )",
    "E       ^",
    "E   SyntaxError: unmatched ')'",
    "___________ ERROR collecting tests/unit/interface/test_ux_bridge.py ____________",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_ux_bridge.py\", line 41",
    "E       \"\"\"Test that bridge methods succeeds.",
    "E       ^^^^^^^^^^^^^",
    "E   IndentationError: expected an indented block after function definition on line 39",
    "____________ ERROR collecting tests/unit/interface/test_uxbridge.py ____________",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_uxbridge.py\", line 28",
    "E       )",
    "E       ^",
    "E   SyntaxError: unmatched ')'",
    "________ ERROR collecting tests/unit/interface/test_uxbridge_aliases.py ________",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_uxbridge_aliases.py\", line 31",
    "E       bridge = DummyBridge()",
    "E       ^^^^^^",
    "E   IndentationError: expected an indented block after function definition on line 29",
    "________ ERROR collecting tests/unit/interface/test_uxbridge_config.py _________",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_uxbridge_config.py\", line 33",
    "E       @pytest.fixture",
    "E   IndentationError: unexpected unindent",
    "______ ERROR collecting tests/unit/interface/test_uxbridge_consistency.py ______",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_uxbridge_consistency.py\", line 48",
    "E       original = $1",
    "E                  ^",
    "E   SyntaxError: invalid syntax",
    "____ ERROR collecting tests/unit/interface/test_uxbridge_question_result.py ____",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_uxbridge_question_result.py\", line 28",
    "E       )",
    "E       ^",
    "E   SyntaxError: unmatched ')'",
    "_____ ERROR collecting tests/unit/interface/test_uxbridge_sanitization.py ______",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_uxbridge_sanitization.py\", line 30",
    "E       \"\"\"Test that cliuxbridge sanitizes display result succeeds.",
    "E       ^^^^^^^^^^^^^",
    "E   IndentationError: expected an indented block after function definition on line 28",
    "_____________ ERROR collecting tests/unit/interface/test_webui.py ______________",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_webui.py\", line 18",
    "E       cli_stub = ModuleType(\"devsynth.application.cli\")",
    "E   IndentationError: unexpected indent",
    "_______ ERROR collecting tests/unit/interface/test_webui_cli_imports.py ________",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_webui_cli_imports.py\", line 17",
    "E       \"\"\"Importing webui should succeed even if CLI commands are missing.\"\"\"",
    "E       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "E   IndentationError: expected an indented block after function definition on line 15",
    "_________ ERROR collecting tests/unit/interface/test_webui_enhanced.py _________",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_webui_enhanced.py\", line 91",
    "E       \"\"\"Test that highlighted messages use st.info.",
    "E       ^^^^^^^^^^^^^^^^^",
    "E   IndentationError: expected an indented block after function definition on line 89",
    "______ ERROR collecting tests/unit/interface/test_webui_error_handling.py ______",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_webui_error_handling.py\", line 26",
    "E       \"\"\"Test error handling when init_cmd raises an exception.",
    "E       ^^^^^^^^^^^^^",
    "E   IndentationError: expected an indented block after function definition on line 24",
    "______ ERROR collecting tests/unit/interface/test_webui_gather_wizard.py _______",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_webui_gather_wizard.py\", line 82",
    "E       original = $1",
    "E                  ^",
    "E   SyntaxError: invalid syntax",
    "_ ERROR collecting tests/unit/interface/test_webui_gather_wizard_with_state.py _",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_webui_gather_wizard_with_state.py\", line 37",
    "E       original = $1",
    "E                  ^",
    "E   SyntaxError: invalid syntax",
    "_ ERROR collecting tests/unit/interface/test_webui_navigation_and_validation.py _",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_webui_navigation_and_validation.py\", line 21",
    "E       import importlib",
    "E       ^^^^^^",
    "E   IndentationError: expected an indented block after function definition on line 19",
    "________ ERROR collecting tests/unit/interface/test_webui_onboarding.py ________",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_webui_onboarding.py\", line 36",
    "E       \"\"\"Test the onboarding_page method.",
    "E       ^^^^^^^^^^^^^",
    "E   IndentationError: expected an indented block after function definition on line 34",
    "_________ ERROR collecting tests/unit/interface/test_webui_progress.py _________",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:186: in exec_module",
    "exec(co, module.__dict__)",
    "tests/unit/interface/test_webui_progress.py:5: in <module>",
    "from tests.unit.interface.test_webui_enhanced import _mock_streamlit",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_webui_enhanced.py\", line 91",
    "E       \"\"\"Test that highlighted messages use st.info.",
    "E       ^^^^^^^^^^^^^^^^^",
    "E   IndentationError: expected an indented block after function definition on line 89",
    "______ ERROR collecting tests/unit/interface/test_webui_progress_time.py _______",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_webui_progress_time.py\", line 25",
    "E       )",
    "E       ^",
    "E   SyntaxError: unmatched ')'",
    "_______ ERROR collecting tests/unit/interface/test_webui_requirements.py _______",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_webui_requirements.py\", line 21",
    "E       0",
    "E   IndentationError: unexpected indent",
    "___ ERROR collecting tests/unit/interface/test_webui_requirements_wizard.py ____",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_webui_requirements_wizard.py\", line 51",
    "E       \"\"\"Test that the requirements wizard initializes with the correct state.",
    "E       ^^^^^^^^^^^^^^^^^",
    "E   IndentationError: expected an indented block after function definition on line 49",
    "______ ERROR collecting tests/unit/interface/test_webui_run_edge_cases.py ______",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_webui_run_edge_cases.py\", line 50",
    "E       \"\"\"Test the run method with an invalid navigation option.",
    "E       ^^^^^^^^^^^^^",
    "E   IndentationError: expected an indented block after function definition on line 48",
    "__________ ERROR collecting tests/unit/interface/test_webui_setup.py ___________",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_webui_setup.py\", line 19",
    "E       bridge = MagicMock(spec=UXBridge)",
    "E       ^^^^^^",
    "E   IndentationError: expected an indented block after function definition on line 17",
    "_______ ERROR collecting tests/unit/interface/test_webui_wizard_state.py _______",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/python.py:498: in importtestmodule",
    "mod = import_path(",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/pathlib.py:587: in import_path",
    "importlib.import_module(module_name)",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "<frozen importlib._bootstrap>:1387: in _gcd_import",
    "???",
    "<frozen importlib._bootstrap>:1360: in _find_and_load",
    "???",
    "<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked",
    "???",
    "<frozen importlib._bootstrap>:935: in _load_unlocked",
    "???",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:177: in exec_module",
    "source_stat, co = _rewrite_test(fn, self.config)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "../../../../Library/Caches/pypoetry/virtualenvs/devsynth-Z2bYGKTY-py3.12/lib/python3.12/site-packages/_pytest/assertion/rewrite.py:357: in _rewrite_test",
    "tree = ast.parse(source, filename=strfn)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/ast.py:52: in parse",
    "return compile(source, filename, mode, flags,",
    "E     File \"/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/interface/test_webui_wizard_state.py\", line 43",
    "E       \"\"\"Test that the wizard state is properly initialized.\"\"\"",
    "E       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "E   IndentationError: expected an indented block after function definition on line 41",
    "________ ERROR collecting tests/unit/security/test_memory_encryption.py ________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/unit/security/test_memory_encryption.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/unit/security/test_memory_encryption.py:12: in <module>",
    "from devsynth.application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "ERROR tests/unit/adapters/cli/test_typer_adapter.py",
    "ERROR tests/unit/adapters/memory/test_memory_adapter.py",
    "ERROR tests/unit/adapters/memory/test_memory_adapter_factory.py",
    "ERROR tests/unit/adapters/memory/test_vector_store_provider_factory.py",
    "ERROR tests/unit/adapters/test_chromadb_memory_store.py",
    "ERROR tests/unit/adapters/test_chromadb_vector_adapter.py",
    "ERROR tests/unit/adapters/test_kuzu_memory_store.py - NameError: name 'pytest...",
    "ERROR tests/unit/adapters/test_provider_factory_env_vars.py - NameError: name...",
    "ERROR tests/unit/adapters/test_sync_manager.py",
    "ERROR tests/unit/application/agents/test_agent_memory_integration.py",
    "ERROR tests/unit/application/agents/test_wsde_memory_integration.py",
    "ERROR tests/unit/application/cli/test_autocomplete.py",
    "ERROR tests/unit/application/cli/test_enhanced_progress.py",
    "ERROR tests/unit/application/cli/test_help.py",
    "ERROR tests/unit/application/cli/test_ingest_phases.py",
    "ERROR tests/unit/application/cli/test_init_cmd.py",
    "ERROR tests/unit/application/cli/test_metrics_commands.py",
    "ERROR tests/unit/application/cli/test_requirements_commands.py",
    "ERROR tests/unit/application/cli/test_setup_wizard.py",
    "ERROR tests/unit/application/code_analysis/test_ast_workflow_integration.py",
    "ERROR tests/unit/application/collaboration/test_collaborative_wsde_team.py",
    "ERROR tests/unit/application/collaboration/test_collaborative_wsde_team_task_management.py",
    "ERROR tests/unit/application/collaboration/test_coordinator.py",
    "ERROR tests/unit/application/collaboration/test_delegate_task.py",
    "ERROR tests/unit/application/collaboration/test_delegate_workflows.py",
    "ERROR tests/unit/application/collaboration/test_message_protocol.py",
    "ERROR tests/unit/application/collaboration/test_wsde_team_consensus_summary.py",
    "ERROR tests/unit/application/documentation/test_documentation_ingestion_manager.py",
    "ERROR tests/unit/application/documentation/test_documentation_manager_utils.py",
    "ERROR tests/unit/application/edrr/test_auto_progress.py",
    "ERROR tests/unit/application/edrr/test_coordinator.py",
    "ERROR tests/unit/application/edrr/test_coordinator_core.py",
    "ERROR tests/unit/application/edrr/test_coordinator_phases_simple.py",
    "ERROR tests/unit/application/edrr/test_edrr_coordinator.py",
    "ERROR tests/unit/application/edrr/test_edrr_coordinator_enhanced.py",
    "ERROR tests/unit/application/edrr/test_edrr_phase_transitions.py",
    "ERROR tests/unit/application/edrr/test_enhanced_recursion_termination.py",
    "ERROR tests/unit/application/edrr/test_execute_single_agent_task.py",
    "ERROR tests/unit/application/edrr/test_manifest_parser.py",
    "ERROR tests/unit/application/edrr/test_micro_cycle.py",
    "ERROR tests/unit/application/edrr/test_micro_cycle_execution.py",
    "ERROR tests/unit/application/edrr/test_micro_cycle_hooks.py",
    "ERROR tests/unit/application/edrr/test_phase_progression.py",
    "ERROR tests/unit/application/edrr/test_progress_recursion.py",
    "ERROR tests/unit/application/edrr/test_recursion_features.py",
    "ERROR tests/unit/application/edrr/test_recursive_edrr_coordinator.py",
    "ERROR tests/unit/application/edrr/test_result_analysis.py",
    "ERROR tests/unit/application/edrr/test_templates.py",
    "ERROR tests/unit/application/llm/test_import_without_lmstudio.py",
    "ERROR tests/unit/application/memory/test_basic_crud_adapters.py",
    "ERROR tests/unit/application/memory/test_duckdb_store.py",
    "ERROR tests/unit/application/memory/test_duckdb_store_hnsw.py",
    "ERROR tests/unit/application/memory/test_faiss_store.py",
    "ERROR tests/unit/application/memory/test_fallback.py",
    "ERROR tests/unit/application/memory/test_graph_memory_adapter.py",
    "ERROR tests/unit/application/memory/test_kuzu_store.py",
    "ERROR tests/unit/application/memory/test_memory_manager.py",
    "ERROR tests/unit/application/memory/test_memory_manager_search.py",
    "ERROR tests/unit/application/memory/test_multi_layered_memory.py",
    "ERROR tests/unit/application/memory/test_recovery.py",
    "ERROR tests/unit/application/memory/test_retry.py",
    "ERROR tests/unit/application/memory/test_sync_wrappers.py",
    "ERROR tests/unit/application/memory/test_tinydb_store.py",
    "ERROR tests/unit/application/orchestration/test_workflow_manager.py",
    "ERROR tests/unit/application/prompts/test_auto_tuning.py",
    "ERROR tests/unit/application/wsde/test_wsde_utils.py",
    "ERROR tests/unit/behavior/test_alignment_metrics_steps_unit.py",
    "ERROR tests/unit/behavior/test_analyze_commands_steps_unit.py",
    "ERROR tests/unit/domain/models/test_wsde.py",
    "ERROR tests/unit/domain/models/test_wsde_code_improvements.py",
    "ERROR tests/unit/domain/models/test_wsde_context_driven_leadership.py",
    "ERROR tests/unit/domain/models/test_wsde_security_checks.py",
    "ERROR tests/unit/domain/test_wsde_facade_roles.py",
    "ERROR tests/unit/domain/test_wsde_voting_logic.py",
    "ERROR tests/unit/general/test_agent_adapter.py",
    "ERROR tests/unit/general/test_agent_adapter_delegate.py",
    "ERROR tests/unit/general/test_agent_collaboration.py",
    "ERROR tests/unit/general/test_agent_coordinator.py",
    "ERROR tests/unit/general/test_chroma_db_adapter.py",
    "ERROR tests/unit/general/test_cli.py",
    "ERROR tests/unit/general/test_cli_commands.py",
    "ERROR tests/unit/general/test_core_workflows.py",
    "ERROR tests/unit/general/test_delegate_task_disabled.py",
    "ERROR tests/unit/general/test_edrr_cycle_cmd.py",
    "ERROR tests/unit/general/test_edrr_manifest_string.py",
    "ERROR tests/unit/general/test_ingest_cmd.py",
    "ERROR tests/unit/general/test_ingestion_edrr_integration.py",
    "ERROR tests/unit/general/test_inspect_config_cmd.py",
    "ERROR tests/unit/general/test_kuzu_project_startup.py",
    "ERROR tests/unit/general/test_kuzu_store.py",
    "ERROR tests/unit/general/test_langgraph_adapter.py",
    "ERROR tests/unit/general/test_memory_system_with_chromadb.py",
    "ERROR tests/unit/general/test_memory_system_with_kuzu.py",
    "ERROR tests/unit/general/test_multi_agent_adapter_workflow.py",
    "ERROR tests/unit/general/test_project_yaml.py",
    "ERROR tests/unit/general/test_unified_agent.py",
    "ERROR tests/unit/general/test_unified_agent_code_prompt.py",
    "ERROR tests/unit/general/test_unit_cli_commands.py",
    "ERROR tests/unit/general/test_workflow.py",
    "ERROR tests/unit/general/test_wsde_team_coordinator.py",
    "ERROR tests/unit/general/test_wsde_voting_mechanisms.py",
    "ERROR tests/unit/interface/test_agentapi_class.py",
    "ERROR tests/unit/interface/test_bridge_conformance.py",
    "ERROR tests/unit/interface/test_cli_components.py",
    "ERROR tests/unit/interface/test_cliuxbridge.py",
    "ERROR tests/unit/interface/test_output_formatter.py",
    "ERROR tests/unit/interface/test_output_sanitization.py",
    "ERROR tests/unit/interface/test_ux_bridge.py",
    "ERROR tests/unit/interface/test_uxbridge.py",
    "ERROR tests/unit/interface/test_uxbridge_aliases.py",
    "ERROR tests/unit/interface/test_uxbridge_config.py",
    "ERROR tests/unit/interface/test_uxbridge_consistency.py",
    "ERROR tests/unit/interface/test_uxbridge_question_result.py",
    "ERROR tests/unit/interface/test_uxbridge_sanitization.py",
    "ERROR tests/unit/interface/test_webui.py",
    "ERROR tests/unit/interface/test_webui_cli_imports.py",
    "ERROR tests/unit/interface/test_webui_enhanced.py",
    "ERROR tests/unit/interface/test_webui_error_handling.py",
    "ERROR tests/unit/interface/test_webui_gather_wizard.py",
    "ERROR tests/unit/interface/test_webui_gather_wizard_with_state.py",
    "ERROR tests/unit/interface/test_webui_navigation_and_validation.py",
    "ERROR tests/unit/interface/test_webui_onboarding.py",
    "ERROR tests/unit/interface/test_webui_progress.py",
    "ERROR tests/unit/interface/test_webui_progress_time.py",
    "ERROR tests/unit/interface/test_webui_requirements.py",
    "ERROR tests/unit/interface/test_webui_requirements_wizard.py",
    "ERROR tests/unit/interface/test_webui_run_edge_cases.py",
    "ERROR tests/unit/interface/test_webui_setup.py",
    "ERROR tests/unit/interface/test_webui_wizard_state.py",
    "ERROR tests/unit/security/test_memory_encryption.py",
    "!!!!!!!!!!!!!!!!!! Interrupted: 130 errors during collection !!!!!!!!!!!!!!!!!!!",
    "821 tests collected, 130 errors in 6.86s"
  ],
  "pytest_tests/integration": [
    "tests/integration/config/test_unified_loader.py::test_unified_loader_prefers_pyproject_succeeds",
    "tests/integration/config/test_unified_loader.py::test_env_var_override_with_custom_path_succeeds",
    "tests/integration/edrr/test_wsde_edrr_integration.py::TestWSDEEDRRIntegration::test_phase_specific_role_assignment_has_expected",
    "tests/integration/edrr/test_wsde_edrr_integration.py::TestWSDEEDRRIntegration::test_role_rotation_on_phase_transition_has_expected",
    "tests/integration/edrr/test_wsde_edrr_integration.py::TestWSDEEDRRIntegration::test_phase_specific_expertise_scoring_succeeds",
    "tests/integration/edrr/test_wsde_edrr_integration.py::TestWSDEEDRRIntegration::test_dynamic_role_reassignment_and_consensus",
    "tests/integration/edrr/test_wsde_edrr_integration.py::TestWSDEEDRRIntegration::test_dialectical_hooks_invoked",
    "tests/integration/general/test_agent_api.py::test_init_route_succeeds",
    "tests/integration/general/test_agent_api.py::test_gather_route_succeeds",
    "tests/integration/general/test_agent_api.py::test_synthesize_and_status_succeeds",
    "tests/integration/general/test_agent_api.py::test_spec_route_succeeds",
    "tests/integration/general/test_agent_api.py::test_test_route_succeeds",
    "tests/integration/general/test_agent_api.py::test_code_route_succeeds",
    "tests/integration/general/test_agent_api.py::test_doctor_route_succeeds",
    "tests/integration/general/test_agent_api.py::test_edrr_cycle_route_succeeds",
    "tests/integration/general/test_agent_api_security.py::test_api_requires_authentication_succeeds",
    "tests/integration/general/test_agent_api_security.py::test_api_authentication_disabled_succeeds",
    "tests/integration/general/test_agent_api_security.py::test_api_error_handling_raises_error",
    "tests/integration/general/test_agent_api_security.py::test_api_validation_is_valid",
    "tests/integration/general/test_agent_api_security.py::test_api_health_endpoint_succeeds",
    "tests/integration/general/test_agent_api_security.py::test_api_metrics_endpoint_succeeds",
    "tests/integration/general/test_agent_system_integration.py::test_base_agent_graph_successful_invocation_succeeds",
    "tests/integration/general/test_agent_system_integration.py::test_base_agent_graph_error_in_input_processing_raises_error",
    "tests/integration/general/test_agent_system_integration.py::test_base_agent_graph_error_in_llm_call_raises_error",
    "tests/integration/general/test_agent_system_integration.py::test_base_agent_graph_llm_response_is_none_for_parsing_raises_error",
    "tests/integration/general/test_agentapi_routes.py::test_init_route_succeeds",
    "tests/integration/general/test_agentapi_routes.py::test_gather_route_succeeds",
    "tests/integration/general/test_agentapi_routes.py::test_synthesize_and_status_succeeds",
    "tests/integration/general/test_cli_webui_agentapi_pipeline.py::TestCLIWebUIAgentAPIPipeline::test_init_command_pipeline_succeeds",
    "tests/integration/general/test_cli_webui_agentapi_pipeline.py::TestCLIWebUIAgentAPIPipeline::test_spec_command_pipeline_succeeds",
    "tests/integration/general/test_cli_webui_agentapi_pipeline.py::TestCLIWebUIAgentAPIPipeline::test_test_command_pipeline_succeeds",
    "tests/integration/general/test_cli_webui_agentapi_pipeline.py::TestCLIWebUIAgentAPIPipeline::test_code_command_pipeline_succeeds",
    "tests/integration/general/test_cli_webui_agentapi_pipeline.py::TestCLIWebUIAgentAPIPipeline::test_edrr_cycle_command_pipeline_succeeds",
    "tests/integration/general/test_cli_webui_agentapi_pipeline.py::TestCLIWebUIAgentAPIPipeline::test_error_handling_in_pipeline_raises_error",
    "tests/integration/general/test_cli_webui_agentapi_pipeline.py::TestCLIWebUIAgentAPIPipeline::test_webui_command_pipeline_succeeds",
    "tests/integration/general/test_cli_webui_agentapi_pipeline.py::TestCLIWebUIAgentAPIPipeline::test_webui_command_error_handling_succeeds",
    "tests/integration/general/test_cli_webui_parity.py::test_init_invocations_match_succeeds",
    "tests/integration/general/test_cli_webui_parity.py::test_display_result_sanitization_succeeds",
    "tests/integration/general/test_cli_webui_parity.py::test_progress_indicator_parity_succeeds",
    "tests/integration/general/test_config_loader.py::test_load_and_save_yaml_config_succeeds",
    "tests/integration/general/test_config_loader.py::test_load_and_save_pyproject_config_succeeds",
    "tests/integration/general/test_config_loader.py::test_version_mismatch_warning_yaml_succeeds",
    "tests/integration/general/test_config_loader.py::test_version_mismatch_warning_pyproject_succeeds",
    "tests/integration/general/test_config_loader_integration.py::test_load_config_from_yaml_succeeds",
    "tests/integration/general/test_config_loader_integration.py::test_load_config_from_pyproject_succeeds",
    "tests/integration/general/test_config_loader_integration.py::test_pyproject_precedence_over_yaml_succeeds",
    "tests/integration/general/test_config_loader_workflow.py::test_load_config_merges_defaults_succeeds",
    "tests/integration/general/test_config_loader_workflow.py::test_malformed_yaml_raises",
    "tests/integration/general/test_config_loader_workflow.py::test_malformed_toml_raises",
    "tests/integration/general/test_graph_memory_error_handling.py::TestGraphMemoryErrorHandling::test_store_with_invalid_path_raises_permission_error",
    "tests/integration/general/test_graph_memory_error_handling.py::TestGraphMemoryErrorHandling::test_retrieve_nonexistent_item_succeeds",
    "tests/integration/general/test_graph_memory_error_handling.py::TestGraphMemoryErrorHandling::test_delete_nonexistent_item_succeeds",
    "tests/integration/general/test_graph_memory_error_handling.py::TestGraphMemoryErrorHandling::test_search_with_invalid_criteria_returns_empty_list",
    "tests/integration/general/test_graph_memory_error_handling.py::TestGraphMemoryErrorHandling::test_query_related_items_nonexistent_succeeds",
    "tests/integration/general/test_graph_memory_error_handling.py::TestGraphMemoryErrorHandling::test_store_with_corrupted_graph_raises_memory_store_error",
    "tests/integration/general/test_graph_memory_error_handling.py::TestGraphMemoryErrorHandling::test_concurrent_access_succeeds",
    "tests/integration/general/test_graph_memory_error_handling.py::TestGraphMemoryErrorHandling::test_store_and_retrieve_with_special_characters_succeeds",
    "tests/integration/general/test_graph_memory_error_handling.py::TestGraphMemoryErrorHandling::test_store_and_retrieve_with_unicode_characters_succeeds",
    "tests/integration/general/test_graph_memory_error_handling.py::TestGraphMemoryErrorHandling::test_store_with_very_large_content_succeeds",
    "tests/integration/general/test_project_state_analyzer.py::TestProjectStateAnalyzer::test_analyze_devsynth_project_succeeds",
    "tests/integration/general/test_project_state_analyzer.py::TestProjectStateAnalyzer::test_analyze_with_missing_files_succeeds",
    "tests/integration/general/test_project_state_analyzer.py::TestProjectStateAnalyzer::test_analyze_with_requirements_and_code_succeeds",
    "tests/integration/general/test_prompt_auto_tuning.py::test_auto_tuner_disabled_by_default_succeeds",
    "tests/integration/general/test_prompt_auto_tuning.py::test_prompt_auto_tuning_feedback_loop_succeeds",
    "tests/integration/general/test_provider_system.py::TestProviderConfig::test_get_provider_config_has_expected",
    "tests/integration/general/test_provider_system.py::TestProviderFactory::test_create_openai_provider_has_expected",
    "tests/integration/general/test_provider_system.py::TestProviderFactory::test_create_lm_studio_provider_has_expected",
    "tests/integration/general/test_provider_system.py::TestProviderFactory::test_fallback_to_lm_studio_succeeds",
    "tests/integration/general/test_provider_system.py::TestProviderIntegration::test_openai_complete_succeeds",
    "tests/integration/general/test_provider_system.py::TestProviderIntegration::test_lm_studio_complete_succeeds",
    "tests/integration/general/test_provider_system.py::TestFallbackProvider::test_fallback_provider_complete_has_expected",
    "tests/integration/general/test_provider_system.py::TestFallbackProvider::test_fallback_provider_all_fail_fails",
    "tests/integration/general/test_provider_system.py::TestSimplifiedAPI::test_get_provider_has_expected",
    "tests/integration/general/test_provider_system.py::TestSimplifiedAPI::test_complete_function_succeeds",
    "tests/integration/general/test_provider_system.py::TestSimplifiedAPI::test_embed_function_succeeds",
    "tests/integration/general/test_provider_system_async.py::test_openai_provider_acomplete",
    "tests/integration/general/test_provider_system_async.py::test_acomplete_function",
    "tests/integration/general/test_provider_system_async.py::test_aembed_function",
    "tests/integration/general/test_provider_system_async.py::test_fallback_provider_acomplete",
    "tests/integration/general/test_provider_system_async.py::test_fallback_provider_aembed",
    "tests/integration/general/test_provider_system_configurations.py::TestProviderConfigurations::test_openai_provider_with_different_models_has_expected",
    "tests/integration/general/test_provider_system_configurations.py::TestProviderConfigurations::test_openai_provider_with_different_parameters_has_expected",
    "tests/integration/general/test_provider_system_configurations.py::TestProviderConfigurations::test_lm_studio_provider_with_different_endpoints_has_expected",
    "tests/integration/general/test_provider_system_configurations.py::TestProviderConfigurations::test_lm_studio_provider_with_different_parameters_has_expected",
    "tests/integration/general/test_provider_system_configurations.py::TestProviderConfigurations::test_fallback_provider_with_different_configurations_has_expected",
    "tests/integration/general/test_provider_system_configurations.py::TestProviderConfigurations::test_provider_system_with_different_default_providers_has_expected",
    "tests/integration/general/test_provider_system_configurations.py::TestProviderConfigurations::test_provider_system_with_context_aware_completion_has_expected",
    "tests/integration/general/test_self_analyzer.py::TestSelfAnalyzer::test_analyze_devsynth_codebase_succeeds",
    "tests/integration/general/test_self_analyzer.py::TestSelfAnalyzer::test_architecture_violations_succeeds",
    "tests/integration/general/test_self_analyzer.py::TestSelfAnalyzer::test_improvement_opportunities_succeeds",
    "tests/integration/general/test_webui_e2e_workflows.py::test_analysis_to_synthesis_workflow_succeeds",
    "tests/integration/general/test_webui_e2e_workflows.py::test_config_to_analysis_workflow_succeeds",
    "tests/integration/general/test_webui_e2e_workflows.py::test_complete_e2e_workflow_succeeds",
    "tests/integration/general/test_webui_e2e_workflows.py::test_error_handling_in_workflow_succeeds",
    "tests/integration/general/test_webui_e2e_workflows.py::test_state_preservation_in_workflow_succeeds",
    "tests/integration/general/test_webui_pages.py::test_webui_pages_invoke_commands_succeeds",
    "tests/integration/general/test_webui_setup.py::test_guided_setup_button_invokes_wizard_succeeds",
    "tests/integration/general/test_webui_setup.py::test_offline_toggle_saves_config_succeeds",
    "tests/integration/interface/test_bridge_consistency.py::test_bridge_output_consistency_succeeds",
    "tests/integration/interface/test_bridge_consistency.py::test_bridge_method_signatures_succeeds",
    "tests/integration/interface/test_small_workflow_bridge.py::test_cli_and_api_bridges_consistent_succeeds",
    "_ ERROR collecting tests/integration/general/test_agent_collaboration_integration.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_agent_collaboration_integration.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_agent_collaboration_integration.py:12: in <module>",
    "from devsynth.application.collaboration.agent_collaboration import (",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:15: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_________ ERROR collecting tests/integration/general/test_agentapi.py __________",
    "tests/integration/general/test_agentapi.py:32: in <module>",
    "@pytest.mark.medium",
    "^^^^^^",
    "E   NameError: name 'pytest' is not defined",
    "____ ERROR collecting tests/integration/general/test_anthropic_provider.py _____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_anthropic_provider.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_anthropic_provider.py:3: in <module>",
    "from devsynth.application.llm.providers import AnthropicProvider, AnthropicConnectionError, AnthropicModelError",
    "src/devsynth/application/llm/__init__.py:5: in <module>",
    "from devsynth.core.config_loader import load_config",
    "src/devsynth/core/__init__.py:10: in <module>",
    "from .workflows import (",
    "src/devsynth/core/workflows.py:20: in <module>",
    "workflow_manager = _get_workflow_manager()",
    "^^^^^^^^^^^^^^^^^^^^^^^",
    "src/devsynth/core/workflows.py:14: in _get_workflow_manager",
    "from devsynth.application.orchestration.workflow import workflow_manager",
    "src/devsynth/application/orchestration/workflow.py:24: in <module>",
    "from ...adapters.orchestration.langgraph_adapter import (",
    "src/devsynth/adapters/orchestration/langgraph_adapter.py:29: in <module>",
    "from ...adapters.agents.agent_adapter import AgentAdapter",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_chromadb_client_connection.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_chromadb_client_connection.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_chromadb_client_connection.py:15: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_chromadb_memory_store_integration.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_chromadb_memory_store_integration.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "src/devsynth/adapters/chromadb_memory_store.py:3: in <module>",
    "from chromadb.api import ClientAPI",
    "E   ModuleNotFoundError: No module named 'chromadb.api'; 'chromadb' is not a package",
    "The above exception was the direct cause of the following exception:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_chromadb_memory_store_integration.py:8: in <module>",
    "from devsynth.adapters.chromadb_memory_store import ChromaDBMemoryStore",
    "src/devsynth/adapters/chromadb_memory_store.py:7: in <module>",
    "raise ImportError(",
    "E   ImportError: ChromaDBMemoryStore requires the 'chromadb' package. Install it with 'pip install chromadb' or use the dev extras.",
    "_ ERROR collecting tests/integration/general/test_code_analysis_edrr_integration.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_code_analysis_edrr_integration.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_code_analysis_edrr_integration.py:12: in <module>",
    "from devsynth.application.edrr.edrr_coordinator_enhanced import EnhancedEDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_code_analysis_wsde_integration.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_code_analysis_wsde_integration.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_code_analysis_wsde_integration.py:13: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_collaborative_decision_making.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_collaborative_decision_making.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_collaborative_decision_making.py:2: in <module>",
    "from devsynth.application.collaboration.collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:15: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "___ ERROR collecting tests/integration/general/test_collaborative_voting.py ____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_collaborative_voting.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_collaborative_voting.py:38: in <module>",
    "from devsynth.application.collaboration.collaborative_wsde_team import (",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:15: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_____ ERROR collecting tests/integration/general/test_complex_workflow.py ______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_complex_workflow.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_complex_workflow.py:17: in <module>",
    "from devsynth.application.orchestration.refactor_workflow import RefactorWorkflowManager",
    "src/devsynth/application/orchestration/refactor_workflow.py:20: in <module>",
    "from .workflow import WorkflowManager",
    "src/devsynth/application/orchestration/workflow.py:24: in <module>",
    "from ...adapters.orchestration.langgraph_adapter import (",
    "src/devsynth/adapters/orchestration/langgraph_adapter.py:29: in <module>",
    "from ...adapters.agents.agent_adapter import AgentAdapter",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "__ ERROR collecting tests/integration/general/test_comprehensive_workflow.py ___",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_comprehensive_workflow.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_comprehensive_workflow.py:8: in <module>",
    "from devsynth.application.orchestration.refactor_workflow import RefactorWorkflowManager",
    "src/devsynth/application/orchestration/refactor_workflow.py:20: in <module>",
    "from .workflow import WorkflowManager",
    "src/devsynth/application/orchestration/workflow.py:24: in <module>",
    "from ...adapters.orchestration.langgraph_adapter import (",
    "src/devsynth/adapters/orchestration/langgraph_adapter.py:29: in <module>",
    "from ...adapters.agents.agent_adapter import AgentAdapter",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_______ ERROR collecting tests/integration/general/test_delegate_task.py _______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_delegate_task.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_delegate_task.py:4: in <module>",
    "from devsynth.application.collaboration.coordinator import AgentCoordinatorImpl",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:15: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "__ ERROR collecting tests/integration/general/test_delegate_task_consensus.py __",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_delegate_task_consensus.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_delegate_task_consensus.py:3: in <module>",
    "from devsynth.application.collaboration.coordinator import AgentCoordinatorImpl",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:15: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_delegate_task_primus_selection.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_delegate_task_primus_selection.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_delegate_task_primus_selection.py:3: in <module>",
    "from devsynth.application.collaboration.coordinator import AgentCoordinatorImpl",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:15: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "__ ERROR collecting tests/integration/general/test_delegate_task_workflow.py ___",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_delegate_task_workflow.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_delegate_task_workflow.py:4: in <module>",
    "from devsynth.application.collaboration.coordinator import AgentCoordinatorImpl",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:15: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_edrr_auto_phase_transition.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_edrr_auto_phase_transition.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_edrr_auto_phase_transition.py:53: in <module>",
    "from devsynth.application.documentation.documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "____ ERROR collecting tests/integration/general/test_edrr_dynamic_roles.py _____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_edrr_dynamic_roles.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_edrr_dynamic_roles.py:3: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_edrr_manifest_dependencies.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_edrr_manifest_dependencies.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_edrr_manifest_dependencies.py:36: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator, EDRRCoordinatorError",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_edrr_micro_cycle_auto_transition.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_edrr_micro_cycle_auto_transition.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_edrr_micro_cycle_auto_transition.py:38: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_edrr_micro_cycle_context.py __",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_edrr_micro_cycle_context.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_edrr_micro_cycle_context.py:35: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_edrr_mock_llm_integration.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_edrr_mock_llm_integration.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_edrr_mock_llm_integration.py:7: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "__ ERROR collecting tests/integration/general/test_edrr_peer_review_voting.py __",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_edrr_peer_review_voting.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_edrr_peer_review_voting.py:35: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "___ ERROR collecting tests/integration/general/test_edrr_primus_rotation.py ____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_edrr_primus_rotation.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_edrr_primus_rotation.py:3: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_edrr_real_llm_integration.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_edrr_real_llm_integration.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_edrr_real_llm_integration.py:12: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "____ ERROR collecting tests/integration/general/test_end_to_end_workflow.py ____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_end_to_end_workflow.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_end_to_end_workflow.py:13: in <module>",
    "from devsynth.application.cli.cli_commands import (",
    "src/devsynth/application/cli/__init__.py:13: in <module>",
    "from .cli_commands import (",
    "src/devsynth/application/cli/cli_commands.py:15: in <module>",
    "from devsynth.core import workflows",
    "src/devsynth/core/__init__.py:10: in <module>",
    "from .workflows import (",
    "src/devsynth/core/workflows.py:20: in <module>",
    "workflow_manager = _get_workflow_manager()",
    "^^^^^^^^^^^^^^^^^^^^^^^",
    "src/devsynth/core/workflows.py:14: in _get_workflow_manager",
    "from devsynth.application.orchestration.workflow import workflow_manager",
    "src/devsynth/application/orchestration/workflow.py:24: in <module>",
    "from ...adapters.orchestration.langgraph_adapter import (",
    "src/devsynth/adapters/orchestration/langgraph_adapter.py:29: in <module>",
    "from ...adapters.agents.agent_adapter import AgentAdapter",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_error_handling_at_integration_points.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_error_handling_at_integration_points.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_error_handling_at_integration_points.py:12: in <module>",
    "from devsynth.application.edrr.edrr_coordinator_enhanced import EnhancedEDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_feature_flag_integration.py __",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_feature_flag_integration.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_feature_flag_integration.py:5: in <module>",
    "from devsynth.application.documentation.documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_graph_memory_edrr_integration.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_graph_memory_edrr_integration.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_graph_memory_edrr_integration.py:11: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "____ ERROR collecting tests/integration/general/test_ingestion_pipeline.py _____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_ingestion_pipeline.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_ingestion_pipeline.py:16: in <module>",
    "from devsynth.application.ingestion import (",
    "src/devsynth/application/ingestion.py:18: in <module>",
    "from devsynth.application.edrr.coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "___ ERROR collecting tests/integration/general/test_kuzu_memory_fallback.py ____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_kuzu_memory_fallback.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_kuzu_memory_fallback.py:6: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "__ ERROR collecting tests/integration/general/test_kuzu_memory_integration.py __",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_kuzu_memory_integration.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_kuzu_memory_integration.py:8: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_____ ERROR collecting tests/integration/general/test_lmstudio_provider.py _____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_lmstudio_provider.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_lmstudio_provider.py:6: in <module>",
    "from devsynth.application.llm.lmstudio_provider import (",
    "src/devsynth/application/llm/__init__.py:9: in <module>",
    "from .providers import factory as _factory",
    "src/devsynth/application/llm/providers.py:212: in <module>",
    "from .openai_provider import OpenAIProvider",
    "src/devsynth/application/llm/openai_provider.py:11: in <module>",
    "from openai.types.chat import ChatCompletion, ChatCompletionChunk",
    "E   ModuleNotFoundError: No module named 'openai.types'; 'openai' is not a package",
    "------------------------------- Captured stdout --------------------------------",
    "2025-08-02 10:27:57,541 - devsynth.application.utils.token_tracker - INFO - Tiktoken is available for accurate token counting",
    "_ ERROR collecting tests/integration/general/test_memory_agent_integration.py __",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_memory_agent_integration.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_memory_agent_integration.py:12: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_multi_agent_roles_and_voting.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_multi_agent_roles_and_voting.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_multi_agent_roles_and_voting.py:56: in <module>",
    "from devsynth.adapters.agents.agent_adapter import AgentAdapter",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_non_hierarchical_decision.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_non_hierarchical_decision.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_non_hierarchical_decision.py:3: in <module>",
    "from devsynth.application.collaboration.coordinator import AgentCoordinatorImpl",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:15: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "______ ERROR collecting tests/integration/general/test_openai_provider.py ______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_openai_provider.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_openai_provider.py:6: in <module>",
    "from devsynth.application.llm.openai_provider import OpenAIProvider, OpenAIConnectionError, OpenAIModelError",
    "src/devsynth/application/llm/__init__.py:9: in <module>",
    "from .providers import factory as _factory",
    "src/devsynth/application/llm/providers.py:212: in <module>",
    "from .openai_provider import OpenAIProvider",
    "src/devsynth/application/llm/openai_provider.py:11: in <module>",
    "from openai.types.chat import ChatCompletion, ChatCompletionChunk",
    "E   ModuleNotFoundError: No module named 'openai.types'; 'openai' is not a package",
    "_ ERROR collecting tests/integration/general/test_query_router_integration.py __",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_query_router_integration.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_query_router_integration.py:3: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_____ ERROR collecting tests/integration/general/test_refactor_workflow.py _____",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_refactor_workflow.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_refactor_workflow.py:15: in <module>",
    "from devsynth.application.orchestration.refactor_workflow import RefactorWorkflowManager",
    "src/devsynth/application/orchestration/refactor_workflow.py:20: in <module>",
    "from .workflow import WorkflowManager",
    "src/devsynth/application/orchestration/workflow.py:24: in <module>",
    "from ...adapters.orchestration.langgraph_adapter import (",
    "src/devsynth/adapters/orchestration/langgraph_adapter.py:29: in <module>",
    "from ...adapters.agents.agent_adapter import AgentAdapter",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "__ ERROR collecting tests/integration/general/test_requirements_gathering.py ___",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_requirements_gathering.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_requirements_gathering.py:4: in <module>",
    "from devsynth.application.cli.cli_commands import init_cmd, gather_cmd",
    "src/devsynth/application/cli/__init__.py:13: in <module>",
    "from .cli_commands import (",
    "src/devsynth/application/cli/cli_commands.py:15: in <module>",
    "from devsynth.core import workflows",
    "src/devsynth/core/__init__.py:10: in <module>",
    "from .workflows import (",
    "src/devsynth/core/workflows.py:20: in <module>",
    "workflow_manager = _get_workflow_manager()",
    "^^^^^^^^^^^^^^^^^^^^^^^",
    "src/devsynth/core/workflows.py:14: in _get_workflow_manager",
    "from devsynth.application.orchestration.workflow import workflow_manager",
    "src/devsynth/application/orchestration/workflow.py:24: in <module>",
    "from ...adapters.orchestration.langgraph_adapter import (",
    "src/devsynth/adapters/orchestration/langgraph_adapter.py:29: in <module>",
    "from ...adapters.agents.agent_adapter import AgentAdapter",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_wsde_edrr_component_interactions.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_wsde_edrr_component_interactions.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_wsde_edrr_component_interactions.py:12: in <module>",
    "from devsynth.application.edrr.edrr_coordinator_enhanced import EnhancedEDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_wsde_edrr_integration_advanced.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_wsde_edrr_integration_advanced.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_wsde_edrr_integration_advanced.py:10: in <module>",
    "from devsynth.application.edrr.edrr_coordinator_enhanced import EnhancedEDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_wsde_edrr_integration_end_to_end.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_wsde_edrr_integration_end_to_end.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_wsde_edrr_integration_end_to_end.py:9: in <module>",
    "from devsynth.application.edrr.edrr_coordinator_enhanced import EnhancedEDRRCoordinator",
    "src/devsynth/application/edrr/__init__.py:3: in <module>",
    "from .coordinator import EDRRCoordinator",
    "src/devsynth/application/edrr/coordinator.py:22: in <module>",
    "from devsynth.application.documentation.documentation_manager import (",
    "src/devsynth/application/documentation/__init__.py:8: in <module>",
    "from .documentation_manager import DocumentationManager",
    "src/devsynth/application/documentation/documentation_manager.py:17: in <module>",
    "from devsynth.application.documentation.documentation_repository import (",
    "src/devsynth/application/documentation/documentation_repository.py:15: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_wsde_memory_edrr_integration.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_wsde_memory_edrr_integration.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_wsde_memory_edrr_integration.py:1: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_wsde_peer_review_memory_integration.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_wsde_peer_review_memory_integration.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_wsde_peer_review_memory_integration.py:12: in <module>",
    "from devsynth.adapters.agents.agent_adapter import AgentAdapter, WSDETeamCoordinator",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/general/test_wsde_peer_review_workflow.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/general/test_wsde_peer_review_workflow.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/general/test_wsde_peer_review_workflow.py:3: in <module>",
    "from devsynth.application.collaboration.peer_review import run_peer_review",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:15: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_ ERROR collecting tests/integration/interface/test_multi_agent_collaboration.py _",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/interface/test_multi_agent_collaboration.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/interface/test_multi_agent_collaboration.py:6: in <module>",
    "from devsynth.application.collaboration.collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/__init__.py:9: in <module>",
    "from .collaborative_wsde_team import CollaborativeWSDETeam",
    "src/devsynth/application/collaboration/collaborative_wsde_team.py:15: in <module>",
    "from devsynth.domain.models.wsde_facade import WSDETeam",
    "src/devsynth/domain/models/wsde_facade.py:41: in <module>",
    "from devsynth.application.collaboration.wsde_team_consensus import (",
    "src/devsynth/application/collaboration/wsde_team_consensus.py:17: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "______ ERROR collecting tests/integration/memory/test_cross_store_sync.py ______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/integration/memory/test_cross_store_sync.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/integration/memory/test_cross_store_sync.py:6: in <module>",
    "from devsynth.application.memory.lmdb_store import LMDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "ERROR tests/integration/general/test_agent_collaboration_integration.py",
    "ERROR tests/integration/general/test_agentapi.py - NameError: name 'pytest' i...",
    "ERROR tests/integration/general/test_anthropic_provider.py",
    "ERROR tests/integration/general/test_chromadb_client_connection.py",
    "ERROR tests/integration/general/test_chromadb_memory_store_integration.py",
    "ERROR tests/integration/general/test_code_analysis_edrr_integration.py",
    "ERROR tests/integration/general/test_code_analysis_wsde_integration.py",
    "ERROR tests/integration/general/test_collaborative_decision_making.py",
    "ERROR tests/integration/general/test_collaborative_voting.py",
    "ERROR tests/integration/general/test_complex_workflow.py",
    "ERROR tests/integration/general/test_comprehensive_workflow.py",
    "ERROR tests/integration/general/test_delegate_task.py",
    "ERROR tests/integration/general/test_delegate_task_consensus.py",
    "ERROR tests/integration/general/test_delegate_task_primus_selection.py",
    "ERROR tests/integration/general/test_delegate_task_workflow.py",
    "ERROR tests/integration/general/test_edrr_auto_phase_transition.py",
    "ERROR tests/integration/general/test_edrr_dynamic_roles.py",
    "ERROR tests/integration/general/test_edrr_manifest_dependencies.py",
    "ERROR tests/integration/general/test_edrr_micro_cycle_auto_transition.py",
    "ERROR tests/integration/general/test_edrr_micro_cycle_context.py",
    "ERROR tests/integration/general/test_edrr_mock_llm_integration.py",
    "ERROR tests/integration/general/test_edrr_peer_review_voting.py",
    "ERROR tests/integration/general/test_edrr_primus_rotation.py",
    "ERROR tests/integration/general/test_edrr_real_llm_integration.py",
    "ERROR tests/integration/general/test_end_to_end_workflow.py",
    "ERROR tests/integration/general/test_error_handling_at_integration_points.py",
    "ERROR tests/integration/general/test_feature_flag_integration.py",
    "ERROR tests/integration/general/test_graph_memory_edrr_integration.py",
    "ERROR tests/integration/general/test_ingestion_pipeline.py",
    "ERROR tests/integration/general/test_kuzu_memory_fallback.py",
    "ERROR tests/integration/general/test_kuzu_memory_integration.py",
    "ERROR tests/integration/general/test_lmstudio_provider.py",
    "ERROR tests/integration/general/test_memory_agent_integration.py",
    "ERROR tests/integration/general/test_multi_agent_roles_and_voting.py",
    "ERROR tests/integration/general/test_non_hierarchical_decision.py",
    "ERROR tests/integration/general/test_openai_provider.py",
    "ERROR tests/integration/general/test_query_router_integration.py",
    "ERROR tests/integration/general/test_refactor_workflow.py",
    "ERROR tests/integration/general/test_requirements_gathering.py",
    "ERROR tests/integration/general/test_wsde_edrr_component_interactions.py",
    "ERROR tests/integration/general/test_wsde_edrr_integration_advanced.py",
    "ERROR tests/integration/general/test_wsde_edrr_integration_end_to_end.py",
    "ERROR tests/integration/general/test_wsde_memory_edrr_integration.py",
    "ERROR tests/integration/general/test_wsde_peer_review_memory_integration.py",
    "ERROR tests/integration/general/test_wsde_peer_review_workflow.py",
    "ERROR tests/integration/interface/test_multi_agent_collaboration.py",
    "ERROR tests/integration/memory/test_cross_store_sync.py",
    "!!!!!!!!!!!!!!!!!!! Interrupted: 47 errors during collection !!!!!!!!!!!!!!!!!!!",
    "101 tests collected, 47 errors in 2.41s"
  ],
  "behavior_tests/behavior": [
    "tests/behavior/simple_addition.feature::Add two numbers",
    "tests/behavior/features/webui_inspect_config.feature::Navigate to Inspect Config page",
    "tests/behavior/features/webui_inspect_config.feature::View configuration details",
    "tests/behavior/features/webui_inspect_config.feature::Filter configuration by category",
    "tests/behavior/features/webui_inspect_config.feature::Search for specific configuration keys",
    "tests/behavior/features/webui_inspect_config.feature::Export configuration report",
    "tests/behavior/features/webui_inspect_config.feature::Compare configuration with defaults",
    "tests/behavior/features/webui_serve.feature::Navigate to Serve page",
    "tests/behavior/features/webui_serve.feature::Start serving an application",
    "tests/behavior/features/webui_serve.feature::Stop serving an application",
    "tests/behavior/features/webui_serve.feature::Configure server settings",
    "tests/behavior/features/webui_serve.feature::View server logs",
    "tests/behavior/features/webui_serve.feature::Restart a running application",
    "tests/behavior/features/webui_serve.feature::View server metrics",
    "tests/behavior/features/webui_serve.feature::Deploy application to production",
    "tests/behavior/features/webui_validate_manifest.feature::Navigate to Validate Manifest page",
    "tests/behavior/features/webui_validate_manifest.feature::Validate project manifest",
    "tests/behavior/features/webui_validate_manifest.feature::Validate manifest with custom rules",
    "tests/behavior/features/webui_validate_manifest.feature::Fix manifest issues automatically",
    "tests/behavior/features/webui_validate_manifest.feature::Export manifest validation report",
    "tests/behavior/features/webui_validate_manifest.feature::View manifest validation history",
    "tests/behavior/features/webui_docs_generation.feature::Navigate to Docs Generation page",
    "tests/behavior/features/webui_docs_generation.feature::Generate project documentation",
    "tests/behavior/features/webui_docs_generation.feature::Generate documentation with custom template",
    "tests/behavior/features/webui_docs_generation.feature::Generate documentation for specific components",
    "tests/behavior/features/webui_docs_generation.feature::Preview generated documentation",
    "tests/behavior/features/webui_docs_generation.feature::Export documentation in different formats",
    "tests/behavior/features/webui_docs_generation.feature::View documentation generation history",
    "tests/behavior/features/webui_gather_wizard.feature::Start the Gather wizard",
    "tests/behavior/features/webui_gather_wizard.feature::Navigate through Gather wizard steps",
    "tests/behavior/features/webui_gather_wizard.feature::Complete the Gather wizard",
    "tests/behavior/features/webui_gather_wizard.feature::Cancel the Gather wizard",
    "tests/behavior/features/webui_gather_wizard.feature::Gather wizard validates input",
    "tests/behavior/features/webui_gather_wizard.feature::Gather wizard persists state between steps",
    "tests/behavior/features/webui_gather_wizard.feature::Gather wizard with custom resource types",
    "tests/behavior/features/webui_alignment_metrics.feature::Navigate to Alignment Metrics page",
    "tests/behavior/features/webui_alignment_metrics.feature::View alignment metrics",
    "tests/behavior/features/webui_alignment_metrics.feature::Filter alignment metrics by component",
    "tests/behavior/features/webui_alignment_metrics.feature::Export alignment metrics report",
    "tests/behavior/features/webui_alignment_metrics.feature::View alignment metrics visualization",
    "tests/behavior/features/webui_alignment_metrics.feature::Compare alignment metrics between versions",
    "tests/behavior/features/webui_webapp.feature::Navigate to WebApp page",
    "tests/behavior/features/webui_webapp.feature::Generate a basic web application",
    "tests/behavior/features/webui_webapp.feature::Generate web application with custom template",
    "tests/behavior/features/webui_webapp.feature::Generate web application with specific components",
    "tests/behavior/features/webui_webapp.feature::Preview generated web application",
    "tests/behavior/features/webui_webapp.feature::Deploy web application",
    "tests/behavior/features/webui_webapp.feature::Configure web application settings",
    "tests/behavior/features/webui_webapp.feature::View web application generation history",
    "tests/behavior/features/webui_test_metrics.feature::Navigate to Test Metrics page",
    "tests/behavior/features/webui_test_metrics.feature::View test coverage metrics",
    "tests/behavior/features/webui_test_metrics.feature::Filter test metrics by component",
    "tests/behavior/features/webui_test_metrics.feature::View test execution time metrics",
    "tests/behavior/features/webui_test_metrics.feature::View test failure metrics",
    "tests/behavior/features/webui_test_metrics.feature::Export test metrics report",
    "tests/behavior/features/webui_test_metrics.feature::View test metrics visualization",
    "tests/behavior/features/webui_test_metrics.feature::Compare test metrics between runs",
    "tests/behavior/features/webui_refactor.feature::Navigate to Refactor page",
    "tests/behavior/features/webui_refactor.feature::Analyze code for refactoring opportunities",
    "tests/behavior/features/webui_refactor.feature::Apply automatic refactoring",
    "tests/behavior/features/webui_refactor.feature::Apply guided refactoring",
    "tests/behavior/features/webui_refactor.feature::Apply specific refactoring patterns",
    "tests/behavior/features/webui_refactor.feature::Preview refactoring changes",
    "tests/behavior/features/webui_refactor.feature::View refactoring history",
    "tests/behavior/features/webui_ingestion.feature::Navigate to Ingestion page",
    "tests/behavior/features/webui_ingestion.feature::Ingest code from repository",
    "tests/behavior/features/webui_ingestion.feature::Ingest code from local directory",
    "tests/behavior/features/webui_ingestion.feature::Ingest data from file",
    "tests/behavior/features/webui_ingestion.feature::Ingest data with custom parser",
    "tests/behavior/features/webui_ingestion.feature::View ingestion history",
    "tests/behavior/features/webui_ingestion.feature::Configure ingestion settings",
    "tests/behavior/features/wsde_peer_review.feature::Consensus summary after peer review",
    "tests/behavior/features/wsde_peer_review.feature::Summarize voting results",
    "tests/behavior/features/webui_config.feature::Access the configuration page",
    "tests/behavior/features/webui_config.feature::View configuration categories",
    "tests/behavior/features/webui_config.feature::Update general configuration settings",
    "tests/behavior/features/webui_config.feature::Update provider configuration settings",
    "tests/behavior/features/webui_config.feature::Update memory configuration settings",
    "tests/behavior/features/webui_config.feature::Enable a feature flag",
    "tests/behavior/features/webui_config.feature::Handle invalid configuration input",
    "tests/behavior/features/webui_config.feature::Reset configuration to defaults",
    "tests/behavior/features/webui_config.feature::Navigate between configuration and other pages",
    "tests/behavior/features/webui_requirements_wizard_with_state.feature::Start the Requirements wizard",
    "tests/behavior/features/webui_requirements_wizard_with_state.feature::Navigate through Requirements wizard steps",
    "tests/behavior/features/webui_requirements_wizard_with_state.feature::Complete the Requirements wizard",
    "tests/behavior/features/webui_requirements_wizard_with_state.feature::Cancel the Requirements wizard",
    "tests/behavior/features/webui_requirements_wizard_with_state.feature::Requirements wizard validates input",
    "tests/behavior/features/webui_requirements_wizard_with_state.feature::Requirements wizard persists state between steps",
    "tests/behavior/features/webui_requirements_wizard_with_state.feature::Requirements wizard handles errors gracefully",
    "tests/behavior/features/webui_command.feature::Launch the WebUI",
    "tests/behavior/features/webui_command.feature::Handle WebUI launch error",
    "tests/behavior/features/webui_command.feature::WebUI contains all required pages",
    "tests/behavior/features/webui_validate_metadata.feature::Navigate to Validate Metadata page",
    "tests/behavior/features/webui_validate_metadata.feature::Validate project metadata",
    "tests/behavior/features/webui_validate_metadata.feature::Validate metadata with specific schema",
    "tests/behavior/features/webui_validate_metadata.feature::Fix metadata issues automatically",
    "tests/behavior/features/webui_validate_metadata.feature::Export metadata validation report",
    "tests/behavior/features/webui_validate_metadata.feature::View metadata validation history",
    "tests/behavior/features/webui_validate_metadata.feature::Compare metadata with template",
    "tests/behavior/features/webui_analysis.feature::Access the analysis page",
    "tests/behavior/features/webui_analysis.feature::Run code analysis with default settings",
    "tests/behavior/features/webui_analysis.feature::Run code analysis with custom settings",
    "tests/behavior/features/webui_analysis.feature::Handle errors during code analysis",
    "tests/behavior/features/webui_analysis.feature::Navigate between analysis and other pages",
    "tests/behavior/features/webui_diagnostics.feature::Navigate to Diagnostics page",
    "tests/behavior/features/webui_diagnostics.feature::Run basic diagnostics",
    "tests/behavior/features/webui_diagnostics.feature::Run advanced diagnostics",
    "tests/behavior/features/webui_diagnostics.feature::Run performance diagnostics",
    "tests/behavior/features/webui_diagnostics.feature::Run memory diagnostics",
    "tests/behavior/features/webui_diagnostics.feature::Run network diagnostics",
    "tests/behavior/features/webui_diagnostics.feature::Export diagnostics report",
    "tests/behavior/features/webui_diagnostics.feature::Schedule periodic diagnostics",
    "tests/behavior/features/webui_diagnostics.feature::View diagnostics history",
    "tests/behavior/features/webui_apispec.feature::Navigate to APISpec page",
    "tests/behavior/features/webui_apispec.feature::Generate API specification from code",
    "tests/behavior/features/webui_apispec.feature::Generate API specification with custom format",
    "tests/behavior/features/webui_apispec.feature::Edit API specification",
    "tests/behavior/features/webui_apispec.feature::Validate API specification",
    "tests/behavior/features/webui_apispec.feature::Export API specification",
    "tests/behavior/features/webui_apispec.feature::Generate client code from API specification",
    "tests/behavior/features/webui_apispec.feature::View API specification history",
    "tests/behavior/features/webui_synthesis.feature::Access the synthesis page",
    "tests/behavior/features/webui_synthesis.feature::Generate tests with default settings",
    "tests/behavior/features/webui_synthesis.feature::Generate code with default settings",
    "tests/behavior/features/webui_synthesis.feature::Run full pipeline with default settings",
    "tests/behavior/features/webui_synthesis.feature::Generate tests with custom settings",
    "tests/behavior/features/webui_synthesis.feature::Generate code with custom settings",
    "tests/behavior/features/webui_synthesis.feature::Handle errors during synthesis",
    "tests/behavior/features/webui_synthesis.feature::Navigate between synthesis and other pages",
    "tests/behavior/features/webui_dbschema.feature::Navigate to DBSchema page",
    "tests/behavior/features/webui_dbschema.feature::Create a new database schema",
    "tests/behavior/features/webui_dbschema.feature::Import database schema from file",
    "tests/behavior/features/webui_dbschema.feature::Edit existing database schema",
    "tests/behavior/features/webui_dbschema.feature::Generate SQL from schema",
    "tests/behavior/features/webui_dbschema.feature::Export schema to different formats",
    "tests/behavior/features/webui_dbschema.feature::Visualize database schema",
    "tests/behavior/features/webui_dbschema.feature::Validate database schema",
    "tests/behavior/features/general/validate_manifest.feature::Validate config with default paths",
    "tests/behavior/features/general/validate_manifest.feature::Validate config with custom configuration path",
    "tests/behavior/features/general/validate_manifest.feature::Validate config with custom schema path",
    "tests/behavior/features/general/validate_manifest.feature::Handle invalid configuration",
    "tests/behavior/features/general/validate_manifest.feature::Handle missing configuration file",
    "tests/behavior/features/general/validate_manifest.feature::Handle missing schema",
    "tests/behavior/features/general/docs_fetch.feature::Successful fetch and cache",
    "tests/behavior/features/general/docs_fetch.feature::Cache miss triggers fresh fetch",
    "tests/behavior/features/general/docs_fetch.feature::Invalid library request",
    "tests/behavior/features/general/multi_disciplinary_dialectical_reasoning.feature::Gathering disciplinary perspectives",
    "tests/behavior/features/general/multi_disciplinary_dialectical_reasoning.feature::Identifying perspective conflicts across disciplines",
    "tests/behavior/features/general/multi_disciplinary_dialectical_reasoning.feature::Multi-disciplinary synthesis generation",
    "tests/behavior/features/general/multi_disciplinary_dialectical_reasoning.feature::Multi-disciplinary evaluation",
    "tests/behavior/features/general/multi_disciplinary_dialectical_reasoning.feature::Integration with domain-specific knowledge",
    "tests/behavior/features/general/documentation_utility_functions.feature::Query for function documentation",
    "tests/behavior/features/general/documentation_utility_functions.feature::Query for class documentation",
    "tests/behavior/features/general/documentation_utility_functions.feature::Query for usage examples",
    "tests/behavior/features/general/documentation_utility_functions.feature::Query for API compatibility",
    "tests/behavior/features/general/documentation_utility_functions.feature::Query for related functions",
    "tests/behavior/features/general/documentation_utility_functions.feature::Query for common usage patterns",
    "tests/behavior/features/general/enhanced_dialectical_reasoning.feature::Complete thesis-antithesis-synthesis workflow",
    "tests/behavior/features/general/enhanced_dialectical_reasoning.feature::Multi-perspective analysis in dialectical reasoning",
    "tests/behavior/features/general/enhanced_dialectical_reasoning.feature::Knowledge integration from dialectical process",
    "tests/behavior/features/general/enhanced_dialectical_reasoning.feature::Enhanced antithesis generation with knowledge graph",
    "tests/behavior/features/general/enhanced_dialectical_reasoning.feature::Enhanced synthesis with standards compliance",
    "tests/behavior/features/general/generate_docs.feature::Generate API reference documentation with default parameters",
    "tests/behavior/features/general/generate_docs.feature::Generate API reference documentation for a specific project path",
    "tests/behavior/features/general/generate_docs.feature::Generate API reference documentation with custom output directory",
    "tests/behavior/features/general/generate_docs.feature::Generate API reference documentation with all custom parameters",
    "tests/behavior/features/general/generate_docs.feature::Handle project with no code",
    "tests/behavior/features/general/generate_docs.feature::Handle invalid project path",
    "tests/behavior/features/general/chromadb_integration.feature::Initialize ChromaDB memory store",
    "tests/behavior/features/general/chromadb_integration.feature::Store and retrieve items with ChromaDB",
    "tests/behavior/features/general/chromadb_integration.feature::Perform semantic search with ChromaDB",
    "tests/behavior/features/general/chromadb_integration.feature::ChromaDB memory store persistence",
    "tests/behavior/features/general/methodology_adapters.feature::Configure Sprint Methodology Adapter",
    "tests/behavior/features/general/methodology_adapters.feature::Configure Ad-Hoc Methodology Adapter",
    "tests/behavior/features/general/methodology_adapters.feature::Sprint Adapter Phase Progression",
    "tests/behavior/features/general/methodology_adapters.feature::Ad-Hoc Adapter Phase Progression",
    "tests/behavior/features/general/methodology_adapters.feature::Sprint Adapter Generates Reports",
    "tests/behavior/features/general/methodology_adapters.feature::Ad-Hoc Adapter Generates Reports",
    "tests/behavior/features/general/code_command.feature::Generate code from tests",
    "tests/behavior/features/general/edrr_enhanced_recursion.feature::Improved micro-cycle creation with intelligent task decomposition",
    "tests/behavior/features/general/edrr_enhanced_recursion.feature::Optimized recursion depth decisions with advanced heuristics",
    "tests/behavior/features/general/edrr_enhanced_recursion.feature::Enhanced result aggregation from recursive cycles",
    "tests/behavior/features/general/edrr_enhanced_recursion.feature::Adaptive recursion strategy based on task type",
    "tests/behavior/features/general/edrr_enhanced_recursion.feature::Recursion with comprehensive progress tracking",
    "tests/behavior/features/general/validate_manifest_command.feature::Validate manifest successfully",
    "tests/behavior/features/general/validate_manifest_command.feature::Handle missing manifest file",
    "tests/behavior/features/general/ast_code_analysis.feature::Parse Python code into AST",
    "tests/behavior/features/general/ast_code_analysis.feature::Extract code structure information",
    "tests/behavior/features/general/ast_code_analysis.feature::Perform AST-based code transformations",
    "tests/behavior/features/general/ast_code_analysis.feature::Extract function definitions",
    "tests/behavior/features/general/ast_code_analysis.feature::Rename identifiers",
    "tests/behavior/features/general/ast_code_analysis.feature::Remove unused imports",
    "tests/behavior/features/general/ast_code_analysis.feature::Remove redundant assignments",
    "tests/behavior/features/general/ast_code_analysis.feature::Remove unused variables",
    "tests/behavior/features/general/ast_code_analysis.feature::Optimize string literals",
    "tests/behavior/features/general/ast_code_analysis.feature::Improve code style",
    "tests/behavior/features/general/ast_code_analysis.feature::Apply multiple transformations",
    "tests/behavior/features/general/ast_code_analysis.feature::Integrate with EDRR workflow",
    "tests/behavior/features/general/memory_backend_integration.feature::Cross-backend relationships between WSDE artifacts",
    "tests/behavior/features/general/memory_backend_integration.feature::Memory backend performance comparison",
    "tests/behavior/features/general/retry_mechanism.feature::Successful retry after transient errors",
    "tests/behavior/features/general/retry_mechanism.feature::Failure after maximum retries",
    "tests/behavior/features/general/retry_mechanism.feature::Exponential backoff with jitter",
    "tests/behavior/features/general/retry_mechanism.feature::Callback function is called on each retry",
    "tests/behavior/features/general/retry_mechanism.feature::Only specified exceptions trigger retries",
    "tests/behavior/features/general/retry_mechanism.feature::Deterministic backoff without jitter",
    "tests/behavior/features/general/webui.feature::Open Requirements page",
    "tests/behavior/features/general/webui.feature::Submit onboarding form",
    "tests/behavior/features/general/webui.feature::Update configuration value",
    "tests/behavior/features/general/webui.feature::Run an EDRR cycle",
    "tests/behavior/features/general/webui.feature::Check project alignment",
    "tests/behavior/features/general/webui.feature::Collect alignment metrics",
    "tests/behavior/features/general/webui.feature::Inspect project configuration",
    "tests/behavior/features/general/webui.feature::Validate the project manifest",
    "tests/behavior/features/general/webui.feature::Validate documentation metadata",
    "tests/behavior/features/general/webui.feature::Analyze test metrics",
    "tests/behavior/features/general/webui.feature::Generate documentation from the WebUI",
    "tests/behavior/features/general/webui.feature::Ingest a project via the WebUI",
    "tests/behavior/features/general/webui.feature::Generate an API specification",
    "tests/behavior/features/general/interactive_init_wizard.feature::Run the initialization wizard",
    "tests/behavior/features/general/invalid_config.feature::Config command with invalid key",
    "tests/behavior/features/general/dbschema_generation.feature::Generate a SQLite database schema with default parameters",
    "tests/behavior/features/general/dbschema_generation.feature::Generate a database schema with custom database type",
    "tests/behavior/features/general/dbschema_generation.feature::Generate a database schema with custom name",
    "tests/behavior/features/general/dbschema_generation.feature::Generate a database schema in a custom location",
    "tests/behavior/features/general/dbschema_generation.feature::Generate a database schema with all custom parameters",
    "tests/behavior/features/general/dbschema_generation.feature::Handle unsupported database type",
    "tests/behavior/features/general/micro_edrr_cycle.feature::Create a micro cycle from the expand phase",
    "tests/behavior/features/general/multi_layered_memory_system.feature::Multi-layered memory system categorization",
    "tests/behavior/features/general/multi_layered_memory_system.feature::Short-term memory contains immediate context",
    "tests/behavior/features/general/multi_layered_memory_system.feature::Episodic memory contains past events",
    "tests/behavior/features/general/multi_layered_memory_system.feature::Semantic memory contains general knowledge",
    "tests/behavior/features/general/multi_layered_memory_system.feature::Cross-layer memory querying",
    "tests/behavior/features/general/multi_layered_memory_system.feature::Tiered cache strategy with in-memory cache",
    "tests/behavior/features/general/multi_layered_memory_system.feature::Cache update based on access patterns",
    "tests/behavior/features/general/interactive_requirements.feature::Run the wizard from the CLI",
    "tests/behavior/features/general/error_handling.feature::Handle missing project directory",
    "tests/behavior/features/general/error_handling.feature::Handle invalid file paths",
    "tests/behavior/features/general/error_handling.feature::Handle invalid configuration",
    "tests/behavior/features/general/error_handling.feature::Recover from workflow errors",
    "tests/behavior/features/general/error_handling.feature::Handle network errors",
    "tests/behavior/features/general/webui_navigation_prompts.feature::Navigate to Requirements page",
    "tests/behavior/features/general/webui_navigation_prompts.feature::Submit onboarding information when prompted",
    "tests/behavior/features/general/webui_navigation_prompts.feature::Navigate to Analysis page",
    "tests/behavior/features/general/webui_navigation_prompts.feature::Navigate to Synthesis page",
    "tests/behavior/features/general/webui_navigation_prompts.feature::Navigate to Config page",
    "tests/behavior/features/general/webui_spec_editor.feature::Edit and regenerate a specification file",
    "tests/behavior/features/general/cli_commands.feature::Display help information",
    "tests/behavior/features/general/cli_commands.feature::Initialize a project with path parameter",
    "tests/behavior/features/general/cli_commands.feature::Initialize a project with language and root options",
    "tests/behavior/features/general/cli_commands.feature::Initialize a project with goals",
    "tests/behavior/features/general/cli_commands.feature::Initialize interactively",
    "tests/behavior/features/general/cli_commands.feature::Run the wizard via command line",
    "tests/behavior/features/general/cli_commands.feature::Generate specifications with custom requirements file",
    "tests/behavior/features/general/cli_commands.feature::Generate tests with custom specification file",
    "tests/behavior/features/general/cli_commands.feature::Generate code without parameters",
    "tests/behavior/features/general/cli_commands.feature::Run with specific target",
    "tests/behavior/features/general/cli_commands.feature::Configure with key and value",
    "tests/behavior/features/general/cli_commands.feature::View configuration for specific key",
    "tests/behavior/features/general/cli_commands.feature::View all configuration",
    "tests/behavior/features/general/cli_commands.feature::Handle invalid command",
    "tests/behavior/features/general/cli_commands.feature::Run an EDRR cycle from a manifest",
    "tests/behavior/features/general/cli_commands.feature::Validate project configuration",
    "tests/behavior/features/general/cli_commands.feature::Validate environment configuration",
    "tests/behavior/features/general/cli_commands.feature::Serve API on custom port",
    "tests/behavior/features/general/cli_commands.feature::Doctor warns about missing environment variables",
    "tests/behavior/features/general/cli_commands.feature::Handle invalid manifest in EDRR cycle",
    "tests/behavior/features/general/interactive_flow_webui.feature::Gather project settings using the WebUI",
    "tests/behavior/features/general/config_loader.feature::Detect project.yaml configuration",
    "tests/behavior/features/general/config_loader.feature::Detect pyproject.toml configuration",
    "tests/behavior/features/general/config_loader.feature::Create configuration file",
    "tests/behavior/features/general/run_pipeline_command.feature::Run unit tests with default settings",
    "tests/behavior/features/general/run_pipeline_command.feature::Run integration tests with default settings",
    "tests/behavior/features/general/run_pipeline_command.feature::Run behavior tests with default settings",
    "tests/behavior/features/general/run_pipeline_command.feature::Run all tests with verbose output",
    "tests/behavior/features/general/run_pipeline_command.feature::Run a specific test file",
    "tests/behavior/features/general/run_pipeline_command.feature::Run tests with a non-existent target",
    "tests/behavior/features/general/webui_onboarding_flow.feature::Open onboarding page",
    "tests/behavior/features/general/webui_onboarding_flow.feature::Submit onboarding form via WebUI",
    "tests/behavior/features/general/webui_spec_editor_extended.feature::Load an existing specification file",
    "tests/behavior/features/general/webui_spec_editor_extended.feature::Handle non-existent specification file",
    "tests/behavior/features/general/webui_spec_editor_extended.feature::Edit and save without regenerating",
    "tests/behavior/features/general/devsynth_doctor.feature::Suggest initialization when config is absent",
    "tests/behavior/features/general/serve_command.feature::Start the API server with default settings",
    "tests/behavior/features/general/serve_command.feature::Start the API server with a custom port",
    "tests/behavior/features/general/serve_command.feature::Start the API server with verbose logging",
    "tests/behavior/features/general/serve_command.feature::Attempt to start the API server on a port that's already in use",
    "tests/behavior/features/general/delegate_task.feature::Delegate a team task to multiple agents",
    "tests/behavior/features/general/delegate_task.feature::Delegate a task with dialectical reasoning and consensus",
    "tests/behavior/features/general/edrr_cycle.feature::Run EDRR cycle with manifest file",
    "tests/behavior/features/general/edrr_cycle.feature::Handle missing manifest file",
    "tests/behavior/features/general/edrr_cycle.feature::Handle invalid manifest file",
    "tests/behavior/features/general/wsde_memory_integration.feature::Store and retrieve WSDE team state",
    "tests/behavior/features/general/wsde_memory_integration.feature::Store and retrieve solutions with EDRR phase tagging",
    "tests/behavior/features/general/wsde_memory_integration.feature::Store and retrieve dialectical reasoning results",
    "tests/behavior/features/general/wsde_memory_integration.feature::Access knowledge graph for enhanced reasoning",
    "tests/behavior/features/general/wsde_memory_integration.feature::Use different memory backends for WSDE artifacts",
    "tests/behavior/features/general/inspect_code_command.feature::Inspect a codebase with default settings",
    "tests/behavior/features/general/inspect_code_command.feature::Inspect a codebase with a specific path",
    "tests/behavior/features/general/inspect_code_command.feature::Inspect a codebase with verbose output",
    "tests/behavior/features/general/inspect_code_command.feature::Inspect a codebase and generate a report",
    "tests/behavior/features/general/inspect_code_command.feature::Inspect a non-existent path",
    "tests/behavior/features/general/self_analyzer.feature::Analyze codebase architecture",
    "tests/behavior/features/general/self_analyzer.feature::Detect architecture type",
    "tests/behavior/features/general/self_analyzer.feature::Identify layers in codebase",
    "tests/behavior/features/general/self_analyzer.feature::Analyze layer dependencies",
    "tests/behavior/features/general/self_analyzer.feature::Check architecture violations",
    "tests/behavior/features/general/self_analyzer.feature::Analyze code quality",
    "tests/behavior/features/general/self_analyzer.feature::Analyze complexity metrics",
    "tests/behavior/features/general/self_analyzer.feature::Analyze readability metrics",
    "tests/behavior/features/general/self_analyzer.feature::Analyze maintainability metrics",
    "tests/behavior/features/general/self_analyzer.feature::Analyze test coverage",
    "tests/behavior/features/general/self_analyzer.feature::Identify improvement opportunities",
    "tests/behavior/features/general/self_analyzer.feature::Generate comprehensive insights",
    "tests/behavior/features/general/self_analyzer.feature::Integrate with EDRR workflow",
    "tests/behavior/features/general/self_analyzer.feature::Integrate with WSDE team",
    "tests/behavior/features/general/uxbridge.feature::CLI asks a question",
    "tests/behavior/features/general/uxbridge.feature::WebUI displays results",
    "tests/behavior/features/general/uxbridge.feature::Agent API confirms a choice",
    "tests/behavior/features/general/ingest_command.feature::Successfully ingest a project with a valid manifest",
    "tests/behavior/features/general/ingest_command.feature::Attempt to ingest a project with an invalid manifest",
    "tests/behavior/features/general/ingest_command.feature::Ingest a project with additional options",
    "tests/behavior/features/general/ingest_command.feature::Ingest a project with a non-existent manifest file",
    "tests/behavior/features/general/webapp_generation.feature::Generate a Flask web application with default parameters",
    "tests/behavior/features/general/webapp_generation.feature::Generate a web application with custom framework",
    "tests/behavior/features/general/webapp_generation.feature::Generate a web application with custom name",
    "tests/behavior/features/general/webapp_generation.feature::Generate a web application in a custom location",
    "tests/behavior/features/general/webapp_generation.feature::Generate a web application with all custom parameters",
    "tests/behavior/features/general/webapp_generation.feature::Handle unsupported framework",
    "tests/behavior/features/general/edrr_real_llm_integration.feature::Run EDRR cycle with real LLM for simple task",
    "tests/behavior/features/general/edrr_real_llm_integration.feature::Run EDRR cycle with real LLM for complex project",
    "tests/behavior/features/general/edrr_real_llm_integration.feature::EDRR with real LLM handles memory integration",
    "tests/behavior/features/general/alignment_metrics_command.feature::Collect metrics successfully",
    "tests/behavior/features/general/alignment_metrics_command.feature::Handle failure during metrics collection",
    "tests/behavior/features/general/requirements_wizard_navigation.feature::Navigate forward and backward",
    "tests/behavior/features/general/apispec_generation.feature::Generate a REST API specification with default parameters",
    "tests/behavior/features/general/apispec_generation.feature::Generate an API specification with custom API type",
    "tests/behavior/features/general/apispec_generation.feature::Generate an API specification with custom format",
    "tests/behavior/features/general/apispec_generation.feature::Generate an API specification with custom name",
    "tests/behavior/features/general/apispec_generation.feature::Generate an API specification in a custom location",
    "tests/behavior/features/general/apispec_generation.feature::Generate an API specification with all custom parameters",
    "tests/behavior/features/general/apispec_generation.feature::Handle unsupported API type",
    "tests/behavior/features/general/apispec_generation.feature::Handle unsupported format",
    "tests/behavior/features/general/promise_system.feature::Agent registers a capability",
    "tests/behavior/features/general/promise_system.feature::Agent creates a promise",
    "tests/behavior/features/general/promise_system.feature::Agent fulfills a promise",
    "tests/behavior/features/general/promise_system.feature::Agent rejects a promise",
    "tests/behavior/features/general/promise_system.feature::Unauthorized agent cannot create a promise",
    "tests/behavior/features/general/promise_system.feature::Creating a chain of promises",
    "tests/behavior/features/general/doctor_command.feature::Warn about invalid environment configuration",
    "tests/behavior/features/general/doctor_command.feature::Validate existing environment configuration",
    "tests/behavior/features/general/doctor_command.feature::Validate configuration using the check alias",
    "tests/behavior/features/general/doctor_command.feature::Warn when essential environment variables are missing",
    "tests/behavior/features/general/doctor_command.feature::Warn about invalid YAML files in the config directory",
    "tests/behavior/features/general/doctor_command.feature::Detect invalid YAML syntax in project.yaml",
    "tests/behavior/features/general/doctor_command.feature::Warn about unsupported configuration keys",
    "tests/behavior/features/general/doctor_command.feature::Warn when .env file is missing",
    "tests/behavior/features/general/refactor_command.feature::Get refactoring suggestions for a project",
    "tests/behavior/features/general/refactor_command.feature::Get refactoring suggestions with a specific focus",
    "tests/behavior/features/general/refactor_command.feature::Get refactoring suggestions with verbose output",
    "tests/behavior/features/general/refactor_command.feature::Get refactoring suggestions for a specific file",
    "tests/behavior/features/general/refactor_command.feature::Get refactoring suggestions for a non-existent file",
    "tests/behavior/features/general/analyze_commands.feature::Inspect code in the current directory",
    "tests/behavior/features/general/analyze_commands.feature::Inspect code in a specific directory",
    "tests/behavior/features/general/analyze_commands.feature::Handle errors during code inspection",
    "tests/behavior/features/general/analyze_commands.feature::Analyze config in the current directory",
    "tests/behavior/features/general/analyze_commands.feature::Analyze config in a specific directory",
    "tests/behavior/features/general/analyze_commands.feature::Update config with new findings",
    "tests/behavior/features/general/analyze_commands.feature::Prune config entries that no longer exist",
    "tests/behavior/features/general/analyze_commands.feature::Handle missing configuration file",
    "tests/behavior/features/general/validate_metadata_command.feature::Validate metadata successfully",
    "tests/behavior/features/general/validate_metadata_command.feature::Handle missing documentation directory",
    "tests/behavior/features/general/agent_api_health_metrics.feature::Check API health",
    "tests/behavior/features/general/agent_api_health_metrics.feature::Check API health with authentication",
    "tests/behavior/features/general/agent_api_health_metrics.feature::Check API health with invalid authentication",
    "tests/behavior/features/general/agent_api_health_metrics.feature::Get API metrics",
    "tests/behavior/features/general/agent_api_health_metrics.feature::Get API metrics with authentication",
    "tests/behavior/features/general/agent_api_health_metrics.feature::Get API metrics with invalid authentication",
    "tests/behavior/features/general/uxbridge_cli_webui.feature::Init command executed through shared bridge",
    "tests/behavior/features/general/requirements_gathering.feature::Gather goals using the CLI wizard",
    "tests/behavior/features/general/requirements_gathering.feature::Gather goals using the WebUI wizard",
    "tests/behavior/features/general/project_initialization.feature::Initialize a new project with default settings",
    "tests/behavior/features/general/project_initialization.feature::Initialize a project with custom settings",
    "tests/behavior/features/general/project_initialization.feature::Interactive initialization",
    "tests/behavior/features/general/doctor.feature::Run doctor with valid configuration",
    "tests/behavior/features/general/test_generation.feature::Generate unit tests from requirements",
    "tests/behavior/features/general/test_generation.feature::Generate behavior tests from requirements",
    "tests/behavior/features/general/consensus_building.feature::Voting mechanisms for critical decisions",
    "tests/behavior/features/general/consensus_building.feature::Conflict resolution in decision making",
    "tests/behavior/features/general/consensus_building.feature::Weighted voting based on expertise",
    "tests/behavior/features/general/consensus_building.feature::Tie-breaking strategies",
    "tests/behavior/features/general/consensus_building.feature::Decision tracking and explanation",
    "tests/behavior/features/general/config_enable_feature.feature::Enable code generation feature",
    "tests/behavior/features/general/memory_manager.feature::Query memory using GraphMemoryAdapter",
    "tests/behavior/features/general/memory_manager.feature::Query memory using VectorMemoryAdapter",
    "tests/behavior/features/general/memory_manager.feature::Query memory using TinyDBMemoryAdapter",
    "tests/behavior/features/general/memory_manager.feature::Tag memory items with EDRR phases",
    "tests/behavior/features/general/memory_manager.feature::Query memory items by EDRR phase",
    "tests/behavior/features/general/memory_manager.feature::Maintain relationships between items across EDRR phases",
    "tests/behavior/features/general/edrr_enhanced_phase_transitions.feature::Adaptive phase duration based on task complexity",
    "tests/behavior/features/general/edrr_enhanced_phase_transitions.feature::Phase-specific metrics for better monitoring",
    "tests/behavior/features/general/edrr_enhanced_phase_transitions.feature::Intelligent phase transition based on quality thresholds",
    "tests/behavior/features/general/edrr_enhanced_phase_transitions.feature::Dynamic phase transition criteria based on previous results",
    "tests/behavior/features/general/edrr_enhanced_phase_transitions.feature::Phase transition with comprehensive context preservation",
    "tests/behavior/features/general/workflow_execution.feature::Execute a complete workflow without errors",
    "tests/behavior/features/general/workflow_execution.feature::Handle errors in workflow execution",
    "tests/behavior/features/general/workflow_execution.feature::Resume a workflow after human intervention",
    "tests/behavior/features/general/workflow_execution.feature::Execute multiple workflows in sequence",
    "tests/behavior/features/general/workflow_execution.feature::Handle workflow with long-running steps",
    "tests/behavior/features/general/user_guide_enhancement.feature::CLI Command Reference is complete and accurate",
    "tests/behavior/features/general/user_guide_enhancement.feature::WebUI Guide includes screenshots and workflows",
    "tests/behavior/features/general/user_guide_enhancement.feature::Quick Start Guide includes common use cases",
    "tests/behavior/features/general/user_guide_enhancement.feature::Troubleshooting section covers common issues",
    "tests/behavior/features/general/user_guide_enhancement.feature::Configuration reference includes all options",
    "tests/behavior/features/general/memory_context_system.feature::Store and retrieve memory item",
    "tests/behavior/features/general/memory_context_system.feature::Store memory item with metadata",
    "tests/behavior/features/general/memory_context_system.feature::Search for memory items",
    "tests/behavior/features/general/memory_context_system.feature::Add and retrieve context values",
    "tests/behavior/features/general/memory_context_system.feature::Get full context",
    "tests/behavior/features/general/memory_context_system.feature::Context persistence across operations",
    "tests/behavior/features/general/additional_storage_backends.feature::Initialize TinyDB memory store",
    "tests/behavior/features/general/additional_storage_backends.feature::Store and retrieve items with TinyDB",
    "tests/behavior/features/general/additional_storage_backends.feature::Search items with TinyDB",
    "tests/behavior/features/general/additional_storage_backends.feature::TinyDB memory store persistence",
    "tests/behavior/features/general/additional_storage_backends.feature::Initialize DuckDB memory store",
    "tests/behavior/features/general/additional_storage_backends.feature::Store and retrieve items with DuckDB",
    "tests/behavior/features/general/additional_storage_backends.feature::Search items with DuckDB",
    "tests/behavior/features/general/additional_storage_backends.feature::DuckDB memory store persistence",
    "tests/behavior/features/general/additional_storage_backends.feature::Store and retrieve vectors with DuckDB",
    "tests/behavior/features/general/additional_storage_backends.feature::Perform similarity search with DuckDB",
    "tests/behavior/features/general/additional_storage_backends.feature::Initialize LMDB memory store",
    "tests/behavior/features/general/additional_storage_backends.feature::Store and retrieve items with LMDB",
    "tests/behavior/features/general/additional_storage_backends.feature::Search items with LMDB",
    "tests/behavior/features/general/additional_storage_backends.feature::LMDB memory store persistence",
    "tests/behavior/features/general/additional_storage_backends.feature::LMDB transaction support",
    "tests/behavior/features/general/additional_storage_backends.feature::LMDB transaction rollback",
    "tests/behavior/features/general/additional_storage_backends.feature::Initialize FAISS vector store",
    "tests/behavior/features/general/additional_storage_backends.feature::Store and retrieve vectors with FAISS",
    "tests/behavior/features/general/additional_storage_backends.feature::Perform similarity search with FAISS",
    "tests/behavior/features/general/additional_storage_backends.feature::FAISS vector store persistence",
    "tests/behavior/features/general/additional_storage_backends.feature::Get FAISS collection statistics",
    "tests/behavior/features/general/prompt_management.feature::Register a prompt template",
    "tests/behavior/features/general/prompt_management.feature::Use a prompt template with an agent",
    "tests/behavior/features/general/prompt_management.feature::Prompt template versioning",
    "tests/behavior/features/general/prompt_management.feature::Prompt efficacy tracking",
    "tests/behavior/features/general/prompt_management.feature::Structured reflection after prompt response",
    "tests/behavior/features/general/prompt_management.feature::Dynamic prompt adjustment based on feedback",
    "tests/behavior/features/general/prompt_management.feature::Track prompt variant performance",
    "tests/behavior/features/general/prompt_management.feature::Generate new prompt variants through mutation",
    "tests/behavior/features/general/prompt_management.feature::Generate new prompt variants through recombination",
    "tests/behavior/features/general/prompt_management.feature::Automatic A/B testing of prompt variants",
    "tests/behavior/features/general/prompt_management.feature::Continuous prompt optimization cycle",
    "tests/behavior/features/general/memory_adapter_integration.feature::Store items in graph and tinydb adapters",
    "tests/behavior/features/general/advanced_graph_memory_features.feature::Use RDFLib namespace handling and graph serialization",
    "tests/behavior/features/general/advanced_graph_memory_features.feature::Use advanced RDF triple patterns",
    "tests/behavior/features/general/advanced_graph_memory_features.feature::Apply memory volatility controls",
    "tests/behavior/features/general/advanced_graph_memory_features.feature::Apply advanced memory decay",
    "tests/behavior/features/general/advanced_graph_memory_features.feature::Integrate with another memory store",
    "tests/behavior/features/general/advanced_graph_memory_features.feature::Integrate with a vector store",
    "tests/behavior/features/general/code_generation.feature::Generate code from requirements and tests",
    "tests/behavior/features/general/code_generation.feature::Iterative code refinement",
    "tests/behavior/features/general/agent_api_interactions.feature::Invoke core workflows via HTTP endpoints",
    "tests/behavior/features/general/agent_api_interactions.feature::Generate specifications via HTTP endpoint",
    "tests/behavior/features/general/agent_api_interactions.feature::Generate tests via HTTP endpoint",
    "tests/behavior/features/general/agent_api_interactions.feature::Generate code via HTTP endpoint",
    "tests/behavior/features/general/agent_api_interactions.feature::Run diagnostics via HTTP endpoint",
    "tests/behavior/features/general/agent_api_interactions.feature::Run EDRR cycle via HTTP endpoint",
    "tests/behavior/features/general/cross_interface_consistency_extended.feature::Error handling is consistent across interfaces",
    "tests/behavior/features/general/cross_interface_consistency_extended.feature::User input handling is consistent across interfaces",
    "tests/behavior/features/general/project_documentation_ingestion.feature::Ingest documentation from configured docs directory",
    "tests/behavior/features/general/spec_command.feature::Generate specifications from a requirements file",
    "tests/behavior/features/general/spec_command.feature::Handle missing requirements file",
    "tests/behavior/features/general/environment_variables.feature::Load OpenAI API key from .env file",
    "tests/behavior/features/general/environment_variables.feature::Load Serper API key from .env file",
    "tests/behavior/features/general/environment_variables.feature::Override environment variables with command line configuration",
    "tests/behavior/features/general/environment_variables.feature::Load multiple environment variables from .env file",
    "tests/behavior/features/general/project_ingestion.feature::Ingest a project with default parameters",
    "tests/behavior/features/general/project_ingestion.feature::Ingest a project with custom manifest path",
    "tests/behavior/features/general/project_ingestion.feature::Perform a dry run of project ingestion",
    "tests/behavior/features/general/project_ingestion.feature::Ingest a project with verbose output",
    "tests/behavior/features/general/project_ingestion.feature::Validate project configuration without ingestion",
    "tests/behavior/features/general/project_ingestion.feature::Ingest a project with all custom parameters",
    "tests/behavior/features/general/project_ingestion.feature::Handle missing manifest file",
    "tests/behavior/features/general/project_ingestion.feature::Handle invalid manifest file",
    "tests/behavior/features/general/setup_wizard.feature::Run the setup wizard",
    "tests/behavior/features/general/setup_wizard.feature::Cancel the setup wizard",
    "tests/behavior/features/general/wsde_agent_model.feature::Peer-based collaboration",
    "tests/behavior/features/general/wsde_agent_model.feature::Context-driven leadership",
    "tests/behavior/features/general/wsde_agent_model.feature::Autonomous collaboration",
    "tests/behavior/features/general/wsde_agent_model.feature::Consensus-based decision making",
    "tests/behavior/features/general/wsde_agent_model.feature::Dialectical review process",
    "tests/behavior/features/general/webui_doctor.feature::Run doctor diagnostics",
    "tests/behavior/features/general/wsde_edrr_integration.feature::Phase-specific expertise utilization",
    "tests/behavior/features/general/wsde_edrr_integration.feature::Quality-based phase transitions",
    "tests/behavior/features/general/wsde_edrr_integration.feature::Micro-cycle implementation",
    "tests/behavior/features/general/wsde_edrr_integration.feature::Dialectical reasoning across EDRR phases",
    "tests/behavior/features/general/wsde_edrr_integration.feature::Error handling and recovery",
    "tests/behavior/features/general/doctor_missing_env.feature::Warn when OPENAI_API_KEY is missing",
    "tests/behavior/features/general/non_hierarchical_collaboration.feature::Peer-based behavior in WSDE team",
    "tests/behavior/features/general/non_hierarchical_collaboration.feature::Role rotation based on task context",
    "tests/behavior/features/general/non_hierarchical_collaboration.feature::Expertise-based task delegation",
    "tests/behavior/features/general/non_hierarchical_collaboration.feature::Adaptive leadership selection",
    "tests/behavior/features/general/non_hierarchical_collaboration.feature::Collaborative problem-solving without hierarchy",
    "tests/behavior/features/general/edrr_coordinator.feature::Coordinate components through the Expand phase",
    "tests/behavior/features/general/edrr_coordinator.feature::Coordinate components through the Differentiate phase",
    "tests/behavior/features/general/edrr_coordinator.feature::Coordinate components through the Refine phase",
    "tests/behavior/features/general/edrr_coordinator.feature::Coordinate components through the Retrospect phase",
    "tests/behavior/features/general/edrr_coordinator.feature::Start EDRR cycle from a manifest file",
    "tests/behavior/features/general/edrr_coordinator.feature::Track comprehensive logging and traceability",
    "tests/behavior/features/general/wsde_message_passing_peer_review.feature::Message passing between agents",
    "tests/behavior/features/general/wsde_message_passing_peer_review.feature::Broadcast message to multiple agents",
    "tests/behavior/features/general/wsde_message_passing_peer_review.feature::Message passing with priority levels",
    "tests/behavior/features/general/wsde_message_passing_peer_review.feature::Message passing with structured content",
    "tests/behavior/features/general/wsde_message_passing_peer_review.feature::Peer review request and execution",
    "tests/behavior/features/general/wsde_message_passing_peer_review.feature::Peer review with acceptance criteria",
    "tests/behavior/features/general/wsde_message_passing_peer_review.feature::Peer review with revision cycle",
    "tests/behavior/features/general/wsde_message_passing_peer_review.feature::Peer review with dialectical analysis",
    "tests/behavior/features/general/wsde_message_passing_peer_review.feature::Message and review history tracking",
    "tests/behavior/features/general/hybrid_memory_query_patterns.feature::Direct Store Query",
    "tests/behavior/features/general/hybrid_memory_query_patterns.feature::Cross-Store Query",
    "tests/behavior/features/general/hybrid_memory_query_patterns.feature::Cascading Query",
    "tests/behavior/features/general/hybrid_memory_query_patterns.feature::Federated Query",
    "tests/behavior/features/general/hybrid_memory_query_patterns.feature::Context-Aware Query",
    "tests/behavior/features/general/hybrid_memory_query_patterns.feature::Synchronization between stores",
    "tests/behavior/features/general/hybrid_memory_query_patterns.feature::Conflict resolution during synchronization",
    "tests/behavior/features/general/hybrid_memory_query_patterns.feature::Transaction boundaries across stores",
    "tests/behavior/features/general/hybrid_memory_query_patterns.feature::Asynchronous synchronization with eventual consistency",
    "tests/behavior/features/general/requirements_wizard.feature::Save requirements",
    "tests/behavior/features/general/requirements_wizard.feature::Cancel the requirements wizard",
    "tests/behavior/features/general/test_metrics.feature::Analyze test metrics with default parameters",
    "tests/behavior/features/general/test_metrics.feature::Analyze test metrics with custom time period",
    "tests/behavior/features/general/test_metrics.feature::Output test metrics to file",
    "tests/behavior/features/general/test_metrics.feature::Handle repository with no commits",
    "tests/behavior/features/general/test_metrics.feature::Handle repository with no tests",
    "tests/behavior/features/general/documentation_ingestion.feature::Ingest documentation from Markdown files",
    "tests/behavior/features/general/documentation_ingestion.feature::Ingest documentation from text files",
    "tests/behavior/features/general/documentation_ingestion.feature::Ingest documentation from JSON files",
    "tests/behavior/features/general/documentation_ingestion.feature::Ingest documentation from Python files",
    "tests/behavior/features/general/documentation_ingestion.feature::Ingest documentation from HTML files",
    "tests/behavior/features/general/documentation_ingestion.feature::Ingest documentation from RST files",
    "tests/behavior/features/general/documentation_ingestion.feature::Ingest documentation from a URL",
    "tests/behavior/features/general/documentation_ingestion.feature::Ingest documentation from multiple sources",
    "tests/behavior/features/general/documentation_ingestion.feature::Integration with memory system",
    "tests/behavior/features/general/validate_metadata.feature::Validate metadata in default directory",
    "tests/behavior/features/general/validate_metadata.feature::Validate metadata in custom directory",
    "tests/behavior/features/general/validate_metadata.feature::Validate metadata in single file",
    "tests/behavior/features/general/validate_metadata.feature::Validate metadata with verbose output",
    "tests/behavior/features/general/validate_metadata.feature::Handle directory with no Markdown files",
    "tests/behavior/features/general/validate_metadata.feature::Handle invalid metadata in Markdown files",
    "tests/behavior/features/general/api_stub_usage.feature::Initialize a project through the API stub",
    "tests/behavior/features/general/recursive_edrr_coordinator.feature::Create micro-EDRR cycles within the Expand phase",
    "tests/behavior/features/general/recursive_edrr_coordinator.feature::Create micro-EDRR cycles within the Differentiate phase",
    "tests/behavior/features/general/recursive_edrr_coordinator.feature::Create micro-EDRR cycles within the Refine phase",
    "tests/behavior/features/general/recursive_edrr_coordinator.feature::Create micro-EDRR cycles within the Retrospect phase",
    "tests/behavior/features/general/recursive_edrr_coordinator.feature::Enforce recursion depth limits",
    "tests/behavior/features/general/recursive_edrr_coordinator.feature::Apply granularity threshold checks",
    "tests/behavior/features/general/recursive_edrr_coordinator.feature::Apply cost-benefit analysis",
    "tests/behavior/features/general/recursive_edrr_coordinator.feature::Apply quality threshold monitoring",
    "tests/behavior/features/general/recursive_edrr_coordinator.feature::Apply resource limits",
    "tests/behavior/features/general/recursive_edrr_coordinator.feature::Support human judgment override",
    "tests/behavior/features/general/webui_commands.feature::Initialize a project through onboarding",
    "tests/behavior/features/general/webui_commands.feature::Generate specifications from the requirements page",
    "tests/behavior/features/general/webui_commands.feature::Inspect requirements from the requirements page",
    "tests/behavior/features/general/webui_commands.feature::Inspect code from the analysis page",
    "tests/behavior/features/general/webui_commands.feature::Generate tests from the synthesis page",
    "tests/behavior/features/general/webui_commands.feature::Generate code from the synthesis page",
    "tests/behavior/features/general/webui_commands.feature::Run the pipeline from the synthesis page",
    "tests/behavior/features/general/webui_commands.feature::Update configuration via the config page",
    "tests/behavior/features/general/webui_commands.feature::View all configuration via the config page",
    "tests/behavior/features/general/webui_commands.feature::Run an EDRR cycle from the EDRR Cycle page",
    "tests/behavior/features/general/webui_commands.feature::Check alignment from the Alignment page",
    "tests/behavior/features/general/performance_testing.feature::Memory usage remains within acceptable limits",
    "tests/behavior/features/general/performance_testing.feature::Response time for common operations",
    "tests/behavior/features/general/performance_testing.feature::Scalability with increasing data volumes",
    "tests/behavior/features/general/training_materials.feature::Access TDD/BDD-EDRR training materials",
    "tests/behavior/features/general/training_materials.feature::Complete interactive TDD/BDD-EDRR workshop",
    "tests/behavior/features/general/training_materials.feature::Generate personalized learning path",
    "tests/behavior/features/general/edrr_enhanced_memory_integration.feature::Context-aware memory retrieval",
    "tests/behavior/features/general/edrr_enhanced_memory_integration.feature::Memory persistence across cycles",
    "tests/behavior/features/general/edrr_enhanced_memory_integration.feature::Enhanced knowledge graph integration",
    "tests/behavior/features/general/edrr_enhanced_memory_integration.feature::Multi-modal memory with heterogeneous data types",
    "tests/behavior/features/general/edrr_enhanced_memory_integration.feature::Memory with temporal awareness and versioning",
    "tests/behavior/features/general/wsde_voting_mechanisms.feature::Voting on critical decisions",
    "tests/behavior/features/general/wsde_voting_mechanisms.feature::Consensus fallback for tied votes",
    "tests/behavior/features/general/wsde_voting_mechanisms.feature::Weighted voting based on expertise",
    "tests/behavior/features/general/enhanced_chromadb_integration.feature::Use caching layer to reduce disk I/O",
    "tests/behavior/features/general/enhanced_chromadb_integration.feature::Version tracking for stored artifacts",
    "tests/behavior/features/general/enhanced_chromadb_integration.feature::Retrieve specific version of an item",
    "tests/behavior/features/general/enhanced_chromadb_integration.feature::Optimized embedding storage",
    "tests/behavior/features/general/interactive_flow_cli.feature::Gather project settings using the CLI",
    "tests/behavior/features/general/cross_interface_consistency.feature::User interaction is consistent across interfaces",
    "tests/behavior/features/general/cross_interface_consistency.feature::Progress reporting is consistent across interfaces",
    "tests/behavior/features/general/cli_ux_enhancements.feature::Display progress indicators for long-running operations",
    "tests/behavior/features/general/cli_ux_enhancements.feature::Provide improved error messages",
    "tests/behavior/features/general/cli_ux_enhancements.feature::Implement command autocompletion",
    "tests/behavior/features/general/cli_ux_enhancements.feature::Show help text with examples",
    "tests/behavior/features/general/cli_ux_enhancements.feature::Provide colorized output",
    "tests/behavior/features/general/requirements_management.feature::List all requirements",
    "tests/behavior/features/general/requirements_management.feature::Show a specific requirement",
    "tests/behavior/features/general/requirements_management.feature::Create a new requirement",
    "tests/behavior/features/general/requirements_management.feature::Update an existing requirement",
    "tests/behavior/features/general/requirements_management.feature::Delete a requirement",
    "tests/behavior/features/general/requirements_management.feature::List requirement changes",
    "tests/behavior/features/general/requirements_management.feature::Approve a requirement change",
    "tests/behavior/features/general/requirements_management.feature::Reject a requirement change",
    "tests/behavior/features/general/requirements_management.feature::Start a chat session about requirements",
    "tests/behavior/features/general/requirements_management.feature::Continue an existing chat session",
    "tests/behavior/features/general/requirements_management.feature::Evaluate the impact of a requirement change",
    "tests/behavior/features/general/requirements_management.feature::Assess the impact of a new requirement",
    "tests/behavior/features/general/requirements_management.feature::Handle non-existent requirement",
    "tests/behavior/features/general/requirements_management.feature::Handle missing required parameters",
    "tests/behavior/features/general/delegate_task_consensus.feature::Reach consensus via voting",
    "tests/behavior/features/general/delegate_task_consensus.feature::No agents able to propose a solution",
    "tests/behavior/features/general/delegate_task_consensus.feature::Dialectical reasoning module raises an exception",
    "tests/behavior/features/general/requirement_analysis.feature::Analyze requirements from a text file",
    "tests/behavior/features/general/requirement_analysis.feature::Interactive requirement gathering",
    "tests/behavior/features/general/version_aware_documentation.feature::Fetch and store documentation for a specific library version",
    "tests/behavior/features/general/version_aware_documentation.feature::Use cached documentation for previously fetched versions",
    "tests/behavior/features/general/version_aware_documentation.feature::Detect version drift and update documentation",
    "tests/behavior/features/general/version_aware_documentation.feature::Query documentation across multiple libraries",
    "tests/behavior/features/general/version_aware_documentation.feature::Filter documentation by version constraints",
    "tests/behavior/features/general/version_aware_documentation.feature::Documentation ingestion with memory integration",
    "tests/behavior/features/general/project_state_analyzer.feature::Analyze project structure",
    "tests/behavior/features/general/project_state_analyzer.feature::Infer project architecture",
    "tests/behavior/features/general/project_state_analyzer.feature::Analyze MVC architecture",
    "tests/behavior/features/general/project_state_analyzer.feature::Analyze hexagonal architecture",
    "tests/behavior/features/general/project_state_analyzer.feature::Analyze layered architecture",
    "tests/behavior/features/general/project_state_analyzer.feature::Analyze microservices architecture",
    "tests/behavior/features/general/project_state_analyzer.feature::Analyze event-driven architecture",
    "tests/behavior/features/general/project_state_analyzer.feature::Analyze requirements-specification alignment",
    "tests/behavior/features/general/project_state_analyzer.feature::Analyze specification-code alignment",
    "tests/behavior/features/general/project_state_analyzer.feature::Generate project health report",
    "tests/behavior/features/general/project_state_analyzer.feature::Identify architecture violations",
    "tests/behavior/features/general/project_state_analyzer.feature::Integrate with EDRR workflow",
    "tests/behavior/features/general/project_state_analyzer.feature::Integrate with WSDE team",
    "tests/behavior/features/general/code_transformer.feature::Transform code with unused imports",
    "tests/behavior/features/general/code_transformer.feature::Transform code with redundant assignments",
    "tests/behavior/features/general/code_transformer.feature::Transform code with unused variables",
    "tests/behavior/features/general/code_transformer.feature::Transform code with string literals",
    "tests/behavior/features/general/code_transformer.feature::Transform code with style issues",
    "tests/behavior/features/general/code_transformer.feature::Apply multiple transformations to code",
    "tests/behavior/features/general/code_transformer.feature::Transform a file",
    "tests/behavior/features/general/code_transformer.feature::Transform a directory",
    "tests/behavior/features/general/code_transformer.feature::Transform a directory recursively",
    "tests/behavior/features/general/code_transformer.feature::Validate syntax before and after transformation",
    "tests/behavior/features/general/code_transformer.feature::Handle syntax errors gracefully",
    "tests/behavior/features/general/code_transformer.feature::Integrate with EDRR workflow",
    "tests/behavior/features/general/code_transformer.feature::Integrate with WSDE team",
    "tests/behavior/features/general/webui_integration.feature::WebUI shows enhanced progress indicators",
    "tests/behavior/features/general/webui_integration.feature::WebUI displays colorized output",
    "tests/behavior/features/general/webui_integration.feature::WebUI provides detailed error messages",
    "tests/behavior/features/general/webui_integration.feature::WebUI shows help text with examples",
    "tests/behavior/features/general/webui_integration.feature::WebUI integrates with UXBridge",
    "tests/behavior/features/general/webui_integration.feature::WebUI provides a responsive user interface",
    "tests/behavior/features/general/webui_integration.feature::WebUI supports all CLI commands",
    "tests/behavior/features/examples/simple_addition.feature::Add two numbers"
  ],
  "pytest_tests/performance": [
    "tests/performance/test_cache_benchmarks.py::test_cache_put_benchmark",
    "tests/performance/test_cache_benchmarks.py::test_cache_get_benchmark",
    "_________ ERROR collecting tests/performance/test_memory_benchmarks.py _________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/performance/test_memory_benchmarks.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/performance/test_memory_benchmarks.py:4: in <module>",
    "from devsynth.application.memory.memory_manager import MemoryManager",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "_____ ERROR collecting tests/performance/test_orchestration_benchmarks.py ______",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/performance/test_orchestration_benchmarks.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/performance/test_orchestration_benchmarks.py:4: in <module>",
    "from devsynth.application.orchestration.workflow import WorkflowManager",
    "src/devsynth/application/orchestration/workflow.py:24: in <module>",
    "from ...adapters.orchestration.langgraph_adapter import (",
    "src/devsynth/adapters/orchestration/langgraph_adapter.py:29: in <module>",
    "from ...adapters.agents.agent_adapter import AgentAdapter",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "________ ERROR collecting tests/performance/test_provider_benchmarks.py ________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/performance/test_provider_benchmarks.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/performance/test_provider_benchmarks.py:3: in <module>",
    "from devsynth.application.llm.offline_provider import OfflineProvider",
    "src/devsynth/application/llm/__init__.py:5: in <module>",
    "from devsynth.core.config_loader import load_config",
    "src/devsynth/core/__init__.py:10: in <module>",
    "from .workflows import (",
    "src/devsynth/core/workflows.py:20: in <module>",
    "workflow_manager = _get_workflow_manager()",
    "^^^^^^^^^^^^^^^^^^^^^^^",
    "src/devsynth/core/workflows.py:14: in _get_workflow_manager",
    "from devsynth.application.orchestration.workflow import workflow_manager",
    "src/devsynth/application/orchestration/workflow.py:24: in <module>",
    "from ...adapters.orchestration.langgraph_adapter import (",
    "src/devsynth/adapters/orchestration/langgraph_adapter.py:29: in <module>",
    "from ...adapters.agents.agent_adapter import AgentAdapter",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "ERROR tests/performance/test_memory_benchmarks.py",
    "ERROR tests/performance/test_orchestration_benchmarks.py",
    "ERROR tests/performance/test_provider_benchmarks.py",
    "!!!!!!!!!!!!!!!!!!! Interrupted: 3 errors during collection !!!!!!!!!!!!!!!!!!!!",
    "2 tests collected, 3 errors in 0.42s"
  ],
  "pytest_tests/property": [
    "________ ERROR collecting tests/property/test_core_values_properties.py ________",
    "ImportError while importing test module '/Users/ravenoak/Projects/github.com/ravenoak/devsynth/tests/property/test_core_values_properties.py'.",
    "Hint: make sure your test modules/packages have valid Python names.",
    "Traceback:",
    "/opt/homebrew/Cellar/python@3.12/3.12.11/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py:90: in import_module",
    "return _bootstrap._gcd_import(name[level:], package, level)",
    "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
    "tests/property/test_core_values_properties.py:6: in <module>",
    "from devsynth.core.values import CoreValues, find_value_conflicts",
    "src/devsynth/core/__init__.py:10: in <module>",
    "from .workflows import (",
    "src/devsynth/core/workflows.py:20: in <module>",
    "workflow_manager = _get_workflow_manager()",
    "^^^^^^^^^^^^^^^^^^^^^^^",
    "src/devsynth/core/workflows.py:14: in _get_workflow_manager",
    "from devsynth.application.orchestration.workflow import workflow_manager",
    "src/devsynth/application/orchestration/workflow.py:24: in <module>",
    "from ...adapters.orchestration.langgraph_adapter import (",
    "src/devsynth/adapters/orchestration/langgraph_adapter.py:29: in <module>",
    "from ...adapters.agents.agent_adapter import AgentAdapter",
    "src/devsynth/adapters/agents/agent_adapter.py:16: in <module>",
    "from ...application.agents.unified_agent import UnifiedAgent",
    "src/devsynth/application/agents/__init__.py:17: in <module>",
    "from .agent_memory_integration import AgentMemoryIntegration",
    "src/devsynth/application/agents/agent_memory_integration.py:14: in <module>",
    "from devsynth.adapters.memory.memory_adapter import MemorySystemAdapter",
    "src/devsynth/adapters/memory/memory_adapter.py:9: in <module>",
    "from ...application.memory.tinydb_store import TinyDBStore",
    "src/devsynth/application/memory/__init__.py:13: in <module>",
    "from .memory_manager import MemoryManager",
    "src/devsynth/application/memory/memory_manager.py:22: in <module>",
    "from .circuit_breaker import CircuitBreaker, circuit_breaker_registry, with_circuit_breaker",
    "E   ImportError: cannot import name 'circuit_breaker_registry' from 'devsynth.application.memory.circuit_breaker' (/Users/ravenoak/Projects/github.com/ravenoak/devsynth/src/devsynth/application/memory/circuit_breaker.py)",
    "ERROR tests/property/test_core_values_properties.py",
    "!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!",
    "no tests collected, 1 error in 0.39s"
  ],
  "markers_fast,medium,slow,isolation": {
    "unit": {
      "fast": [],
      "medium": [
        "tests/unit/adapters/llm/test_llm_adapter.py::test_llm_backend_adapter_init_succeeds",
        "tests/unit/adapters/llm/test_llm_adapter.py::test_create_provider_has_expected",
        "tests/unit/adapters/llm/test_llm_adapter.py::test_register_provider_type_has_expected",
        "tests/unit/adapters/llm/test_llm_adapter.py::test_integration_with_openai_provider_has_expected",
        "tests/unit/adapters/llm/test_llm_adapter.py::test_integration_with_anthropic_provider_has_expected",
        "tests/unit/adapters/providers/test_embeddings.py::test_openai_provider_embed_calls_api_succeeds",
        "tests/unit/adapters/providers/test_embeddings.py::test_openai_provider_aembed_calls_api[asyncio]",
        "tests/unit/adapters/providers/test_embeddings.py::test_aembed_function_success_with_lmstudio[asyncio]",
        "tests/unit/adapters/providers/test_embeddings.py::test_aembed_function_error_propagation[asyncio]",
        "tests/unit/adapters/providers/test_embeddings.py::test_openai_provider_aembed_calls_api[trio]",
        "tests/unit/adapters/providers/test_embeddings.py::test_aembed_function_success_with_lmstudio[trio]",
        "tests/unit/adapters/providers/test_embeddings.py::test_aembed_function_error_propagation[trio]",
        "tests/unit/adapters/providers/test_embeddings.py::test_lmstudio_provider_embed_calls_api_succeeds",
        "tests/unit/adapters/providers/test_embeddings.py::test_embed_function_success_with_lmstudio_succeeds",
        "tests/unit/adapters/providers/test_fallback.py::test_retry_with_exponential_backoff_success_succeeds",
        "tests/unit/adapters/providers/test_fallback.py::test_retry_with_exponential_backoff_failure_raises_error",
        "tests/unit/adapters/providers/test_fallback.py::test_retry_with_exponential_backoff_jitter_succeeds",
        "tests/unit/adapters/providers/test_fallback.py::test_retry_with_exponential_backoff_on_retry_callback_succeeds",
        "tests/unit/adapters/providers/test_fallback.py::test_retry_with_exponential_backoff_retryable_exceptions_raises_error",
        "tests/unit/adapters/providers/test_fallback.py::test_retry_with_exponential_backoff_no_jitter_succeeds",
        "tests/unit/adapters/providers/test_provider_factory.py::test_create_provider_fallbacks_to_lmstudio_succeeds",
        "tests/unit/adapters/providers/test_provider_factory.py::test_create_provider_default_with_missing_key_succeeds",
        "tests/unit/adapters/providers/test_provider_factory.py::test_create_provider_openai_succeeds",
        "tests/unit/adapters/test_provider_factory.py::test_create_provider_env_fallback_has_expected",
        "tests/unit/adapters/test_provider_factory.py::test_explicit_openai_missing_key_raises_error",
        "tests/unit/adapters/test_provider_system.py::test_embed_success_succeeds",
        "tests/unit/adapters/test_provider_system.py::test_embed_error_succeeds",
        "tests/unit/adapters/test_provider_system.py::test_aembed_success_succeeds",
        "tests/unit/adapters/test_provider_system.py::test_aembed_error_succeeds",
        "tests/unit/adapters/test_provider_system.py::test_complete_success_succeeds",
        "tests/unit/adapters/test_provider_system.py::test_complete_error_succeeds",
        "tests/unit/adapters/test_provider_system.py::test_acomplete_success_succeeds",
        "tests/unit/adapters/test_provider_system.py::test_acomplete_error_succeeds",
        "tests/unit/adapters/test_provider_system.py::test_provider_factory_create_provider_succeeds",
        "tests/unit/adapters/test_provider_system.py::test_get_provider_succeeds",
        "tests/unit/adapters/test_provider_system.py::test_base_provider_methods_succeeds",
        "tests/unit/adapters/test_provider_system.py::test_provider_initialization_succeeds[OpenAIProvider-config0]",
        "tests/unit/adapters/test_provider_system.py::test_provider_initialization_succeeds[LMStudioProvider-config1]",
        "tests/unit/adapters/test_provider_system.py::test_fallback_provider_succeeds",
        "tests/unit/adapters/test_provider_system.py::test_get_env_or_default_succeeds",
        "tests/unit/adapters/test_provider_system.py::test_get_provider_config_has_expected",
        "tests/unit/adapters/test_provider_system.py::test_openai_provider_complete_has_expected",
        "tests/unit/adapters/test_provider_system.py::test_openai_provider_complete_error_raises_error",
        "tests/unit/adapters/test_provider_system.py::test_openai_provider_complete_retry_has_expected",
        "tests/unit/adapters/test_provider_system.py::test_openai_provider_acomplete_has_expected",
        "tests/unit/adapters/test_provider_system.py::test_openai_provider_embed_has_expected",
        "tests/unit/adapters/test_provider_system.py::test_lmstudio_provider_complete_has_expected",
        "tests/unit/adapters/test_provider_system.py::test_fallback_provider_async_methods_has_expected",
        "tests/unit/adapters/test_provider_system.py::test_provider_with_empty_inputs_has_expected",
        "tests/unit/adapters/test_provider_system.py::test_provider_factory_injected_config_selects_provider",
        "tests/unit/adapters/test_provider_system.py::test_fallback_provider_respects_order",
        "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_initialization_succeeds",
        "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_generate_text_succeeds",
        "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_generate_text_with_context_succeeds",
        "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_generate_text_no_llm_port_succeeds",
        "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_generate_text_with_context_no_llm_port_succeeds",
        "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_process_abstract_method_succeeds",
        "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_create_wsde_succeeds",
        "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_update_wsde_succeeds",
        "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_get_role_prompt_succeeds",
        "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_generate_text_error_raises_error",
        "tests/unit/application/agents/test_base_agent.py::TestBaseAgent::test_generate_text_with_context_error_raises_error",
        "tests/unit/application/agents/test_code_agent.py::TestCodeAgent::test_initialization_succeeds",
        "tests/unit/application/agents/test_code_agent.py::TestCodeAgent::test_process_succeeds",
        "tests/unit/application/agents/test_code_agent.py::TestCodeAgent::test_process_with_empty_inputs_succeeds",
        "tests/unit/application/agents/test_code_agent.py::TestCodeAgent::test_get_capabilities_succeeds",
        "tests/unit/application/agents/test_code_agent.py::TestCodeAgent::test_get_capabilities_with_custom_capabilities_succeeds",
        "tests/unit/application/agents/test_code_agent.py::TestCodeAgent::test_process_error_handling_raises_error",
        "tests/unit/application/agents/test_critic_agent.py::TestCriticAgent::test_initialization_succeeds",
        "tests/unit/application/agents/test_critic_agent.py::TestCriticAgent::test_process_succeeds",
        "tests/unit/application/agents/test_critic_agent.py::TestCriticAgent::test_process_with_empty_inputs_succeeds",
        "tests/unit/application/agents/test_critic_agent.py::TestCriticAgent::test_process_no_llm_port_succeeds",
        "tests/unit/application/agents/test_critic_agent.py::TestCriticAgent::test_get_capabilities_succeeds",
        "tests/unit/application/agents/test_critic_agent.py::TestCriticAgent::test_get_capabilities_with_custom_capabilities_succeeds",
        "tests/unit/application/agents/test_critic_agent.py::TestCriticAgent::test_process_error_handling_raises_error",
        "tests/unit/application/agents/test_critic_agent.py::TestCriticAgent::test_create_wsde_error_fails",
        "tests/unit/application/agents/test_diagram_agent.py::TestDiagramAgent::test_initialization_succeeds",
        "tests/unit/application/agents/test_diagram_agent.py::TestDiagramAgent::test_process_succeeds",
        "tests/unit/application/agents/test_diagram_agent.py::TestDiagramAgent::test_process_with_empty_inputs_succeeds",
        "tests/unit/application/agents/test_diagram_agent.py::TestDiagramAgent::test_get_capabilities_succeeds",
        "tests/unit/application/agents/test_diagram_agent.py::TestDiagramAgent::test_get_capabilities_with_custom_capabilities_succeeds",
        "tests/unit/application/agents/test_diagram_agent.py::TestDiagramAgent::test_process_error_handling_raises_error",
        "tests/unit/application/agents/test_documentation_agent.py::TestDocumentationAgent::test_initialization_succeeds",
        "tests/unit/application/agents/test_documentation_agent.py::TestDocumentationAgent::test_process_succeeds",
        "tests/unit/application/agents/test_documentation_agent.py::TestDocumentationAgent::test_process_with_empty_inputs_succeeds",
        "tests/unit/application/agents/test_documentation_agent.py::TestDocumentationAgent::test_get_capabilities_succeeds",
        "tests/unit/application/agents/test_documentation_agent.py::TestDocumentationAgent::test_get_capabilities_with_custom_capabilities_succeeds",
        "tests/unit/application/agents/test_documentation_agent.py::TestDocumentationAgent::test_process_error_handling_raises_error",
        "tests/unit/application/agents/test_multi_language_code.py::TestMultiLanguageCodeAgent::test_initialization_succeeds",
        "tests/unit/application/agents/test_multi_language_code.py::TestMultiLanguageCodeAgent::test_process_supported_languages_succeed[python]",
        "tests/unit/application/agents/test_multi_language_code.py::TestMultiLanguageCodeAgent::test_process_supported_languages_succeed[javascript]",
        "tests/unit/application/agents/test_multi_language_code.py::TestMultiLanguageCodeAgent::test_process_polyglot_succeeds",
        "tests/unit/application/agents/test_multi_language_code.py::TestMultiLanguageCodeAgent::test_process_polyglot_with_invalid_language",
        "tests/unit/application/agents/test_multi_language_code.py::TestMultiLanguageCodeAgent::test_process_unsupported_language_raises_error",
        "tests/unit/application/agents/test_multi_language_code.py::TestMultiLanguageCodeAgent::test_process_wsde_creation_error_logs_and_returns",
        "tests/unit/application/agents/test_multi_language_code.py::TestMultiLanguageCodeAgent::test_process_calls_llm_generate",
        "tests/unit/application/agents/test_multi_language_code.py::TestMultiLanguageCodeAgent::test_process_without_llm_returns_placeholder",
        "tests/unit/application/agents/test_planner_agent.py::TestPlannerAgent::test_initialization_succeeds",
        "tests/unit/application/agents/test_planner_agent.py::TestPlannerAgent::test_process_succeeds",
        "tests/unit/application/agents/test_planner_agent.py::TestPlannerAgent::test_process_with_empty_inputs_succeeds",
        "tests/unit/application/agents/test_planner_agent.py::TestPlannerAgent::test_get_capabilities_succeeds",
        "tests/unit/application/agents/test_planner_agent.py::TestPlannerAgent::test_get_capabilities_with_custom_capabilities_succeeds",
        "tests/unit/application/agents/test_planner_agent.py::TestPlannerAgent::test_process_error_handling_raises_error",
        "tests/unit/application/agents/test_refactor_agent.py::TestRefactorAgent::test_initialization_succeeds",
        "tests/unit/application/agents/test_refactor_agent.py::TestRefactorAgent::test_process_succeeds",
        "tests/unit/application/agents/test_refactor_agent.py::TestRefactorAgent::test_process_with_empty_inputs_succeeds",
        "tests/unit/application/agents/test_refactor_agent.py::TestRefactorAgent::test_get_capabilities_succeeds",
        "tests/unit/application/agents/test_refactor_agent.py::TestRefactorAgent::test_get_capabilities_with_custom_capabilities_succeeds",
        "tests/unit/application/agents/test_refactor_agent.py::TestRefactorAgent::test_process_error_handling_code_wsde_fails",
        "tests/unit/application/agents/test_refactor_agent.py::TestRefactorAgent::test_process_error_handling_explanation_wsde_fails",
        "tests/unit/application/agents/test_specification_agent.py::TestSpecificationAgent::test_process_succeeds",
        "tests/unit/application/agents/test_specification_agent.py::TestSpecificationAgent::test_get_capabilities_with_custom_capabilities_succeeds",
        "tests/unit/application/agents/test_test_agent.py::TestTestAgent::test_initialization_succeeds",
        "tests/unit/application/agents/test_test_agent.py::TestTestAgent::test_process_succeeds",
        "tests/unit/application/agents/test_test_agent.py::TestTestAgent::test_get_capabilities_with_custom_capabilities_succeeds",
        "tests/unit/application/agents/test_test_agent.py::TestTestAgent::test_process_error_handling",
        "tests/unit/application/agents/test_unified_agent_generic.py::test_process_generic_task_succeeds",
        "tests/unit/application/agents/test_validation_agent.py::TestValidationAgent::test_process_succeeds",
        "tests/unit/application/cli/test_config_validation.py::test_config_warnings_succeeds",
        "tests/unit/application/cli/test_config_validation.py::test_config_success_succeeds",
        "tests/unit/application/cli/test_doctor_cmd.py::test_doctor_cmd_old_python_and_missing_env_warn_succeeds",
        "tests/unit/application/cli/test_doctor_cmd.py::test_doctor_cmd_success_is_valid",
        "tests/unit/application/cli/test_doctor_cmd.py::test_doctor_cmd_invalid_config_is_valid",
        "tests/unit/application/cli/test_doctor_cmd.py::test_doctor_cmd_missing_env_vars_succeeds[OPENAI_API_KEY]",
        "tests/unit/application/cli/test_doctor_cmd.py::test_doctor_cmd_missing_env_vars_succeeds[ANTHROPIC_API_KEY]",
        "tests/unit/application/cli/test_doctor_cmd.py::test_doctor_cmd_warns_missing_optional_feature_pkg_succeeds",
        "tests/unit/application/cli/test_doctor_cmd.py::test_doctor_cmd_warns_missing_memory_store_pkg_succeeds[chromadb-chromadb]",
        "tests/unit/application/cli/test_doctor_cmd.py::test_doctor_cmd_warns_missing_memory_store_pkg_succeeds[tinydb-tinydb]",
        "tests/unit/application/cli/test_doctor_cmd.py::test_doctor_cmd_warns_missing_uvicorn_succeeds",
        "tests/unit/application/cli/test_doctor_cmd.py::test_check_cmd_alias_succeeds",
        "tests/unit/application/cli/test_doctor_cmd.py::test_doctor_cmd_invokes_service_check",
        "tests/unit/application/cli/test_serve_cmd.py::test_serve_cmd_missing_uvicorn_succeeds",
        "tests/unit/application/code_analysis/test_ast_transformer.py::TestAstTransformer::test_add_docstring_succeeds",
        "tests/unit/application/code_analysis/test_ast_transformer.py::TestAstTransformer::test_complex_transformations_succeeds",
        "tests/unit/application/code_analysis/test_ast_transformer.py::TestAstTransformer::test_extract_function_succeeds",
        "tests/unit/application/code_analysis/test_ast_transformer.py::TestAstTransformer::test_optimize_string_literals_succeeds",
        "tests/unit/application/code_analysis/test_ast_transformer.py::TestAstTransformer::test_remove_unused_imports_and_variables_succeeds",
        "tests/unit/application/code_analysis/test_ast_transformer.py::TestAstTransformer::test_rename_function_succeeds",
        "tests/unit/application/code_analysis/test_ast_transformer.py::TestAstTransformer::test_rename_parameter_succeeds",
        "tests/unit/application/code_analysis/test_ast_transformer.py::TestAstTransformer::test_rename_variable_succeeds",
        "tests/unit/application/code_analysis/test_ast_transformer.py::TestAstTransformer::test_validate_syntax_is_valid",
        "tests/unit/application/code_analysis/test_project_state_analyzer.py::TestProjectStateAnalyzer::test_initialization_succeeds",
        "tests/unit/application/code_analysis/test_project_state_analyzer.py::TestProjectStateAnalyzer::test_analyze_succeeds",
        "tests/unit/application/code_analysis/test_project_state_analyzer.py::TestProjectStateAnalyzer::test_index_files_succeeds",
        "tests/unit/application/code_analysis/test_project_state_analyzer.py::TestProjectStateAnalyzer::test_detect_languages_succeeds",
        "tests/unit/application/code_analysis/test_project_state_analyzer.py::TestProjectStateAnalyzer::test_infer_architecture_succeeds",
        "tests/unit/application/code_analysis/test_project_state_analyzer.py::TestProjectStateAnalyzer::test_identify_components_succeeds",
        "tests/unit/application/code_analysis/test_project_state_analyzer.py::TestProjectStateAnalyzer::test_analyze_requirements_spec_alignment_succeeds",
        "tests/unit/application/code_analysis/test_project_state_analyzer.py::TestProjectStateAnalyzer::test_generate_health_report_succeeds",
        "tests/unit/application/code_analysis/test_self_analyzer.py::TestSelfAnalyzer::test_initialization_succeeds",
        "tests/unit/application/code_analysis/test_self_analyzer.py::TestSelfAnalyzer::test_analyze_succeeds",
        "tests/unit/application/code_analysis/test_self_analyzer.py::TestSelfAnalyzer::test_analyze_architecture_succeeds",
        "tests/unit/application/code_analysis/test_self_analyzer.py::TestSelfAnalyzer::test_detect_architecture_type_succeeds",
        "tests/unit/application/code_analysis/test_self_analyzer.py::TestSelfAnalyzer::test_identify_layers_succeeds",
        "tests/unit/application/code_analysis/test_self_analyzer.py::TestSelfAnalyzer::test_analyze_layer_dependencies_succeeds",
        "tests/unit/application/code_analysis/test_self_analyzer.py::TestSelfAnalyzer::test_check_architecture_violations_succeeds",
        "tests/unit/application/code_analysis/test_self_analyzer.py::TestSelfAnalyzer::test_analyze_code_quality_succeeds",
        "tests/unit/application/code_analysis/test_self_analyzer.py::TestSelfAnalyzer::test_analyze_test_coverage_succeeds",
        "tests/unit/application/code_analysis/test_self_analyzer.py::TestSelfAnalyzer::test_identify_improvement_opportunities_succeeds",
        "tests/unit/application/code_analysis/test_transformer.py::TestAstTransformer::test_record_change_succeeds",
        "tests/unit/application/code_analysis/test_transformer.py::TestUnusedImportRemover::test_remove_unused_imports_succeeds",
        "tests/unit/application/code_analysis/test_transformer.py::TestRedundantAssignmentRemover::test_remove_redundant_assignments_succeeds",
        "tests/unit/application/code_analysis/test_transformer.py::TestUnusedVariableRemover::test_remove_unused_variables_succeeds",
        "tests/unit/application/code_analysis/test_transformer.py::TestStringLiteralOptimizer::test_optimize_string_literals_succeeds",
        "tests/unit/application/code_analysis/test_transformer.py::TestCodeStyleTransformer::test_improve_code_style_succeeds",
        "tests/unit/application/code_analysis/test_transformer.py::TestCodeTransformer::test_transform_code_succeeds",
        "tests/unit/application/code_analysis/test_transformer.py::TestCodeTransformer::test_transform_file_succeeds",
        "tests/unit/application/code_analysis/test_transformer.py::TestCodeTransformer::test_transform_directory_succeeds",
        "tests/unit/application/code_analysis/test_transformer.py::TestCodeTransformer::test_find_python_files_succeeds",
        "tests/unit/application/code_analysis/test_transformer.py::TestSymbolUsageCounter::test_count_symbol_usage_succeeds",
        "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreaker::test_initialization",
        "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreaker::test_execute_success",
        "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreaker::test_execute_failure",
        "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreaker::test_circuit_opens_after_threshold",
        "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreaker::test_open_circuit_rejects_requests",
        "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreaker::test_half_open_after_timeout",
        "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreaker::test_half_open_to_open_on_failure",
        "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreaker::test_reset",
        "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreaker::test_get_state",
        "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreakerRegistry::test_get_or_create",
        "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreakerRegistry::test_get",
        "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreakerRegistry::test_reset_all",
        "tests/unit/application/memory/test_circuit_breaker.py::TestCircuitBreakerRegistry::test_get_all_states",
        "tests/unit/application/memory/test_circuit_breaker.py::TestWithCircuitBreaker::test_decorator",
        "tests/unit/application/memory/test_circuit_breaker.py::TestWithCircuitBreaker::test_decorator_with_failure",
        "tests/unit/application/memory/test_circuit_breaker.py::test_global_registry",
        "tests/unit/application/memory/test_lmdb_store.py::TestLMDBStore::test_init_succeeds",
        "tests/unit/application/memory/test_lmdb_store.py::TestLMDBStore::test_store_and_retrieve_succeeds",
        "tests/unit/application/memory/test_lmdb_store.py::TestLMDBStore::test_retrieve_nonexistent_succeeds",
        "tests/unit/application/memory/test_lmdb_store.py::TestLMDBStore::test_search_succeeds",
        "tests/unit/application/memory/test_lmdb_store.py::TestLMDBStore::test_delete_succeeds",
        "tests/unit/application/memory/test_lmdb_store.py::TestLMDBStore::test_token_usage_succeeds",
        "tests/unit/application/memory/test_lmdb_store.py::TestLMDBStore::test_persistence_succeeds",
        "tests/unit/application/memory/test_lmdb_store.py::TestLMDBStore::test_close_and_reopen_succeeds",
        "tests/unit/application/memory/test_lmdb_store.py::TestLMDBStore::test_transaction_isolation_succeeds",
        "tests/unit/application/memory/test_lmdb_store.py::TestLMDBStore::test_transaction_abort_succeeds",
        "tests/unit/application/memory/test_memory_adapters_regression.py::test_store_retrieve_search_update[TinyDBMemoryAdapter]",
        "tests/unit/application/memory/test_memory_adapters_regression.py::test_store_retrieve_search_update[GraphMemoryAdapter]",
        "tests/unit/application/memory/test_memory_adapters_regression.py::test_vector_adapter_operations",
        "tests/unit/application/memory/test_memory_adapters_regression.py::test_tinydb_adapter_transaction_support",
        "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_init_succeeds",
        "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_store_and_retrieve_succeeds",
        "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_retrieve_nonexistent_succeeds",
        "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_search_succeeds",
        "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_search_by_id_and_date_range_succeeds",
        "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_delete_succeeds",
        "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_token_usage_succeeds",
        "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_persistence_succeeds",
        "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_store_vector_succeeds",
        "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_similarity_search_succeeds",
        "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_delete_vector_succeeds",
        "tests/unit/application/memory/test_rdflib_store.py::TestRDFLibStore::test_get_collection_stats_succeeds",
        "tests/unit/application/memory/test_vector_memory_adapter_extra.py::test_similarity_empty_store",
        "tests/unit/application/memory/test_vector_memory_adapter_extra.py::test_similarity_zero_norm",
        "tests/unit/application/memory/test_vector_memory_adapter_extra.py::test_delete_missing",
        "tests/unit/application/memory/test_vector_memory_adapter_extra.py::test_collection_stats",
        "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_invalid_config_type_is_valid",
        "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_invalid_config_range_is_valid",
        "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_invalid_config_syntax_raises_error",
        "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_missing_required_fields_is_valid",
        "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_env_var_override_succeeds",
        "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_config_file_merging_succeeds",
        "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_invalid_feature_flag_is_valid",
        "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_unknown_setting_is_valid",
        "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_config_with_comments_succeeds",
        "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_empty_config_file_succeeds",
        "tests/unit/config/test_config_validation_extended.py::TestConfigValidationExtended::test_config_with_null_values_succeeds",
        "tests/unit/config/test_project_config_validation.py::test_valid_project_config_loads_succeeds",
        "tests/unit/config/test_project_config_validation.py::test_invalid_project_config_raises",
        "tests/unit/config/test_unified_loader.py::test_loads_from_pyproject_succeeds",
        "tests/unit/config/test_unified_loader.py::test_loads_from_yaml_succeeds",
        "tests/unit/config/test_unified_loader.py::test_save_round_trip_yaml_succeeds",
        "tests/unit/config/test_unified_loader.py::test_save_round_trip_pyproject_succeeds",
        "tests/unit/core/test_config_loader.py::test_load_from_dev_synth_yaml_succeeds",
        "tests/unit/core/test_config_loader.py::test_load_from_pyproject_toml_succeeds",
        "tests/unit/core/test_config_loader.py::test_yaml_toml_equivalence_succeeds",
        "tests/unit/core/test_config_loader.py::test_load_project_config_yaml_succeeds",
        "tests/unit/core/test_config_loader.py::test_load_project_config_pyproject_succeeds",
        "tests/unit/core/test_core_values.py::test_load_core_values_succeeds",
        "tests/unit/core/test_core_values.py::test_find_value_conflicts_succeeds",
        "tests/unit/core/test_core_values.py::test_check_report_for_value_conflicts_succeeds",
        "tests/unit/core/test_unified_config_loader.py::test_unified_loader_detects_yaml_succeeds",
        "tests/unit/core/test_unified_config_loader.py::test_unified_loader_detects_pyproject_succeeds",
        "tests/unit/core/test_unified_config_loader.py::test_unified_loader_prefers_pyproject_succeeds",
        "tests/unit/core/test_unified_config_loader.py::test_unified_config_save_updates_pyproject_succeeds",
        "tests/unit/core/test_unified_config_loader.py::test_unified_config_exists_for_both_formats_returns_expected_result",
        "tests/unit/domain/models/test_wsde_base_methods.py::TestWSDEBaseMethods::test_add_agents_succeeds",
        "tests/unit/domain/models/test_wsde_base_methods.py::TestWSDEBaseMethods::test_register_dialectical_hook_succeeds",
        "tests/unit/domain/models/test_wsde_base_methods.py::TestWSDEBaseMethods::test_send_message_succeeds",
        "tests/unit/domain/models/test_wsde_base_methods.py::TestWSDEBaseMethods::test_broadcast_message_succeeds",
        "tests/unit/domain/models/test_wsde_base_methods.py::TestWSDEBaseMethods::test_get_messages_succeeds",
        "tests/unit/domain/models/test_wsde_base_methods.py::TestWSDEBaseMethods::test_conduct_peer_review_succeeds",
        "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_categorize_critiques_by_domain_succeeds",
        "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_identify_domain_conflicts_succeeds",
        "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_prioritize_critiques_succeeds",
        "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_resolve_code_improvement_conflict_succeeds",
        "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_resolve_content_improvement_conflict_succeeds",
        "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_check_code_standards_compliance_succeeds",
        "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_check_content_standards_compliance_succeeds",
        "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_check_pep8_compliance_succeeds",
        "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_check_security_best_practices_succeeds",
        "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_balance_security_and_performance_succeeds",
        "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_balance_security_and_usability_succeeds",
        "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_balance_performance_and_maintainability_succeeds",
        "tests/unit/domain/models/test_wsde_dialectical_reasoning.py::TestWSDEDialecticalReasoning::test_generate_detailed_synthesis_reasoning_succeeds",
        "tests/unit/domain/test_memory_type.py::test_memory_type_serialization_deserialization",
        "tests/unit/domain/test_memory_type.py::test_working_memory_alias",
        "tests/unit/domain/test_memory_type.py::test_memory_type_members_complete",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[short_term]",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[long_term]",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[working]",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[episodic]",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[solution]",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[dialectical_reasoning]",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[team_state]",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[knowledge_graph]",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[relationship]",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[code_analysis]",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[code]",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[code_transformation]",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[documentation]",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[context]",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[conversation]",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[task_history]",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[knowledge]",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[error_log]",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[collaboration_task]",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[collaboration_message]",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[collaboration_team]",
        "tests/unit/domain/test_memory_type.py::test_memory_type_lookup_by_value[peer_review]",
        "tests/unit/domain/test_primus_selection_edge_cases.py::test_rotation_without_expertise_is_deterministic_succeeds",
        "tests/unit/domain/test_primus_selection_edge_cases.py::test_documentation_task_prefers_doc_agents_succeeds",
        "tests/unit/domain/test_primus_selection_edge_cases.py::test_has_been_primus_resets_after_full_rotation_succeeds",
        "tests/unit/domain/test_primus_selection_edge_cases.py::test_edge_case_coverage_succeeds",
        "tests/unit/domain/test_requirement_interfaces.py::TestRequirementInterfaces::test_dialectical_reasoner_creates_session_and_message",
        "tests/unit/domain/test_requirement_interfaces.py::TestRequirementInterfaces::test_inmemory_change_repository",
        "tests/unit/domain/test_requirement_interfaces.py::TestRequirementInterfaces::test_inmemory_impact_assessment_repository",
        "tests/unit/domain/test_requirement_interfaces.py::TestRequirementInterfaces::test_inmemory_requirement_repository_crud",
        "tests/unit/domain/test_requirement_interfaces.py::TestRequirementInterfaces::test_inmemory_requirement_repository_filters",
        "tests/unit/domain/test_wsde_core_methods.py::test_assign_roles_sets_roles",
        "tests/unit/domain/test_wsde_core_methods.py::test_select_primus_by_expertise_prefers_match",
        "tests/unit/domain/test_wsde_core_methods.py::test_build_consensus_produces_result",
        "tests/unit/fallback/test_retry_conditions.py::test_should_retry_prevents_retry",
        "tests/unit/fallback/test_retry_conditions.py::test_should_retry_allows_retry_until_success",
        "tests/unit/fallback/test_retry_conditions.py::test_retry_on_result_triggers_retry",
        "tests/unit/fallback/test_retry_conditions.py::test_retry_conditions_abort_when_condition_fails",
        "tests/unit/fallback/test_retry_conditions.py::test_retry_conditions_allow_retry",
        "tests/unit/fallback/test_retry_conditions.py::test_exponential_backoff",
        "tests/unit/fallback/test_retry_conditions.py::test_fallback_provider_order",
        "tests/unit/fallback/test_retry_counts.py::test_retry_count_metrics",
        "tests/unit/fallback/test_retry_counts.py::test_retry_only_network_errors",
        "tests/unit/fallback/test_retry_metrics.py::test_retry_metrics_success",
        "tests/unit/fallback/test_retry_metrics.py::test_retry_metrics_failure",
        "tests/unit/fallback/test_retry_metrics.py::test_retry_metrics_abort_when_not_retryable",
        "tests/unit/fallback/test_retry_metrics.py::test_retry_metrics_invalid_result",
        "tests/unit/fallback/test_retry_metrics.py::test_retry_metrics_success_without_retries",
        "tests/unit/fallback/test_retry_metrics.py::test_retry_error_metrics",
        "tests/unit/fallback/test_retry_metrics.py::test_retry_error_map_prevents_retry",
        "tests/unit/interface/test_api_advanced.py::test_endpoint",
        "tests/unit/interface/test_api_advanced.py::test_error_handling_in_all_endpoints",
        "tests/unit/interface/test_api_advanced.py::test_all_endpoints_authentication_succeeds",
        "tests/unit/interface/test_api_advanced.py::test_parameter_validation_is_valid",
        "tests/unit/interface/test_api_advanced.py::test_edge_cases_succeeds",
        "tests/unit/interface/test_api_endpoints.py::test_endpoint",
        "tests/unit/interface/test_api_endpoints.py::test_health_endpoint_requires_authentication_succeeds",
        "tests/unit/interface/test_api_endpoints.py::test_metrics_endpoint_requires_authentication_succeeds",
        "tests/unit/interface/test_api_endpoints.py::test_init_endpoint_initializes_project_succeeds",
        "tests/unit/interface/test_api_endpoints.py::test_gather_endpoint_collects_requirements_succeeds",
        "tests/unit/interface/test_api_endpoints.py::test_synthesize_endpoint_runs_pipeline_succeeds",
        "tests/unit/interface/test_api_endpoints.py::test_spec_endpoint_generates_specifications_succeeds",
        "tests/unit/interface/test_api_endpoints.py::test_test_endpoint_generates_tests_succeeds",
        "tests/unit/interface/test_api_endpoints.py::test_code_endpoint_generates_code_succeeds",
        "tests/unit/interface/test_api_endpoints.py::test_doctor_endpoint_runs_diagnostics_succeeds",
        "tests/unit/interface/test_api_endpoints.py::test_edrr_cycle_endpoint_runs_cycle_succeeds",
        "tests/unit/interface/test_api_endpoints.py::test_status_endpoint_returns_messages_returns_expected_result",
        "tests/unit/interface/test_api_endpoints.py::test_endpoint_succeeds",
        "tests/unit/interface/test_api_endpoints.py::test_endpoints_handle_errors_properly_raises_error",
        "tests/unit/interface/test_state_access.py::test_is_session_state_available",
        "tests/unit/interface/test_state_access.py::test_handle_state_error",
        "tests/unit/interface/test_state_access.py::test_get_session_value_with_none_session_state",
        "tests/unit/interface/test_state_access.py::test_get_session_value_with_attribute_access",
        "tests/unit/interface/test_state_access.py::test_get_session_value_with_dict_access",
        "tests/unit/interface/test_state_access.py::test_get_session_value_with_missing_key",
        "tests/unit/interface/test_state_access.py::test_get_session_value_with_exception",
        "tests/unit/interface/test_state_access.py::test_set_session_value_with_none_session_state",
        "tests/unit/interface/test_state_access.py::test_set_session_value_with_attribute_access",
        "tests/unit/interface/test_state_access.py::test_set_session_value_with_dict_access",
        "tests/unit/interface/test_state_access.py::test_set_session_value_with_attribute_exception",
        "tests/unit/interface/test_state_access.py::test_set_session_value_with_dict_exception",
        "tests/unit/interface/test_state_access.py::test_set_session_value_with_both_exceptions",
        "tests/unit/interface/test_state_access.py::test_integration_with_streamlit",
        "tests/unit/interface/test_wizard_state_manager.py::test_wizard_state_manager_initialization",
        "tests/unit/interface/test_wizard_state_manager.py::test_get_wizard_state_new",
        "tests/unit/interface/test_wizard_state_manager.py::test_get_wizard_state_existing",
        "tests/unit/interface/test_wizard_state_manager.py::test_has_wizard_state",
        "tests/unit/interface/test_wizard_state_manager.py::test_validate_wizard_state_valid",
        "tests/unit/interface/test_wizard_state_manager.py::test_validate_wizard_state_missing_key",
        "tests/unit/interface/test_wizard_state_manager.py::test_validate_wizard_state_invalid_step",
        "tests/unit/interface/test_wizard_state_manager.py::test_validate_wizard_state_mismatched_steps",
        "tests/unit/interface/test_wizard_state_manager.py::test_reset_wizard_state",
        "tests/unit/interface/test_wizard_state_manager.py::test_reset_wizard_state_error",
        "tests/unit/interface/test_wizard_state_manager.py::test_get_current_step",
        "tests/unit/interface/test_wizard_state_manager.py::test_go_to_step",
        "tests/unit/interface/test_wizard_state_manager.py::test_next_step",
        "tests/unit/interface/test_wizard_state_manager.py::test_previous_step",
        "tests/unit/interface/test_wizard_state_manager.py::test_set_completed",
        "tests/unit/interface/test_wizard_state_manager.py::test_is_completed",
        "tests/unit/interface/test_wizard_state_manager.py::test_get_value",
        "tests/unit/interface/test_wizard_state_manager.py::test_set_value",
        "tests/unit/interface/test_wizard_state_manager.py::test_simulate_wizard_manager_navigation",
        "tests/unit/interface/test_wizard_state_manager.py::test_set_wizard_manager_data",
        "tests/unit/interface/test_wizard_state_manager.py::test_gather_wizard_state_manager",
        "tests/unit/interface/test_wizard_state_manager.py::test_gather_wizard_workflow"
      ],
      "slow": [
        "tests/unit/adapters/providers/test_embeddings.py::test_lmstudio_provider_embed_error_succeeds"
      ],
      "isolation": []
    },
    "integration": {
      "fast": [],
      "medium": [
        "tests/integration/general/test_provider_system.py::TestProviderConfig::test_get_provider_config_has_expected",
        "tests/integration/general/test_provider_system.py::TestProviderFactory::test_create_openai_provider_has_expected",
        "tests/integration/general/test_provider_system.py::TestProviderFactory::test_create_lm_studio_provider_has_expected",
        "tests/integration/general/test_provider_system.py::TestProviderFactory::test_fallback_to_lm_studio_succeeds",
        "tests/integration/general/test_provider_system.py::TestProviderIntegration::test_openai_complete_succeeds",
        "tests/integration/general/test_provider_system.py::TestProviderIntegration::test_lm_studio_complete_succeeds",
        "tests/integration/general/test_provider_system.py::TestFallbackProvider::test_fallback_provider_complete_has_expected",
        "tests/integration/general/test_provider_system.py::TestFallbackProvider::test_fallback_provider_all_fail_fails",
        "tests/integration/general/test_provider_system.py::TestSimplifiedAPI::test_get_provider_has_expected",
        "tests/integration/general/test_provider_system.py::TestSimplifiedAPI::test_complete_function_succeeds",
        "tests/integration/general/test_provider_system.py::TestSimplifiedAPI::test_embed_function_succeeds"
      ],
      "slow": [],
      "isolation": []
    },
    "behavior": {
      "fast": [],
      "medium": [],
      "slow": [],
      "isolation": []
    },
    "performance": {
      "fast": [],
      "medium": [],
      "slow": [],
      "isolation": []
    },
    "property": {
      "fast": [],
      "medium": [],
      "slow": [],
      "isolation": []
    }
  }
}
