{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "DevSynth Project Manifest Schema",
  "description": "Defines the essential project structure for DevSynth ingestion.",
  "type": "object",
  "properties": {
    "projectName": {
      "type": "string",
      "description": "The unique name of the project."
    },
    "version": {
      "type": "string",
      "description": "The version of the manifest file itself."
    },
    "lastUpdated": {
      "type": "string",
      "format": "date-time",
      "description": "Timestamp of the last update to the manifest."
    },
    "structure": {
      "type": "object",
      "description": "Defines the essential project structure",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["single_package", "monorepo", "multi_project_submodules", "custom"],
          "description": "The overall type of the project structure."
        },
        "primaryLanguage": {
          "type": "string",
          "description": "Primary programming language used in the project."
        },
        "directories": {
          "type": "object",
          "properties": {
            "source": {
              "type": "array",
              "items": {"type": "string"},
              "description": "Paths to source code directories, relative to project root."
            },
            "tests": {
              "type": "array",
              "items": {"type": "string"},
              "description": "Paths to test directories, relative to project root."
            },
            "docs": {
              "type": "array",
              "items": {"type": "string"},
              "description": "Paths to documentation directories, relative to project root."
            }
          },
          "required": ["source"]
        },
        "customLayouts": {
          "type": "object",
          "description": "Configuration for non-standard project layouts",
          "properties": {
            "type": {
              "type": "string",
              "enum": ["monorepo", "multi_project"],
              "description": "The type of custom layout."
            },
            "packagesRoot": {
              "type": "string",
              "description": "Root directory for packages in a monorepo."
            },
            "packages": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the package."
                  },
                  "path": {
                    "type": "string",
                    "description": "Path to the package directory."
                  },
                  "source": {
                    "type": "string",
                    "description": "Source directory within the package."
                  },
                  "tests": {
                    "type": "string",
                    "description": "Tests directory within the package."
                  }
                },
                "required": ["name", "path"]
              }
            }
          }
        },
        "entryPoints": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Main entry points for the application."
        },
        "ignore": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Glob patterns for files to ignore."
        },
        "include": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Glob patterns for files to explicitly include."
        }
      },
      "required": ["type", "directories"]
    },
    "keyArtifacts": {
      "type": "object",
      "description": "Optional list of important artifacts to highlight",
      "properties": {
        "docs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "Path to the document from the project root."
              },
              "purpose": {
                "type": "string",
                "description": "Brief description of the document's purpose."
              }
            },
            "required": ["path"]
          }
        }
      }
    },
    "resources": {
      "type": "object",
      "description": "Configuration for global and project-level resources",
      "properties": {
        "global": {
          "type": "object",
          "description": "Global resources that DevSynth needs to interact with",
          "properties": {
            "configDir": {
              "type": "string",
              "description": "Path to the global configuration directory."
            },
            "cacheDir": {
              "type": "string",
              "description": "Path to the global cache directory."
            },
            "logsDir": {
              "type": "string",
              "description": "Path to the global logs directory."
            },
            "memoryDir": {
              "type": "string",
              "description": "Path to the global memory directory."
            }
          },
          "required": ["configDir"]
        },
        "project": {
          "type": "object",
          "description": "Project-level resources that DevSynth needs to interact with",
          "properties": {
            "configDir": {
              "type": "string",
              "description": "Path to the project configuration directory."
            },
            "cacheDir": {
              "type": "string",
              "description": "Path to the project cache directory."
            },
            "logsDir": {
              "type": "string",
              "description": "Path to the project logs directory."
            },
            "memoryDir": {
              "type": "string",
              "description": "Path to the project memory directory."
            }
          },
          "required": ["configDir"]
        }
      },
      "required": ["global", "project"]
    },
    "features": {
      "type": "object",
      "description": "Optional feature flags controlling advanced capabilities",
      "properties": {
        "wsde_collaboration": {"type": "boolean"},
        "dialectical_reasoning": {"type": "boolean"},
        "code_generation": {"type": "boolean"},
        "test_generation": {"type": "boolean"},
        "documentation_generation": {"type": "boolean"},
        "experimental_features": {"type": "boolean"}
      }
    },
    "cursor_integration": {
      "type": "object",
      "description": "Cursor IDE integration configuration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable Cursor IDE integration features",
          "default": true
        },
        "rules_directory": {
          "type": "string",
          "description": "Path to Cursor rules directory",
          "default": ".cursor/rules"
        },
        "commands_directory": {
          "type": "string",
          "description": "Path to Cursor commands directory",
          "default": ".cursor/commands"
        },
        "modes_configured": {
          "type": "boolean",
          "description": "Whether custom Cursor modes are configured",
          "default": false
        },
        "edrr_enhanced": {
          "type": "boolean",
          "description": "Enable EDRR-enhanced Cursor workflows",
          "default": true
        },
        "sdd_bdd_integration": {
          "type": "boolean",
          "description": "Enable SDD+BDD integration with Cursor",
          "default": true
        }
      }
    },
    "development_workflow": {
      "type": "object",
      "description": "Development workflow configuration",
      "properties": {
        "edrr_framework": {
          "type": "object",
          "properties": {
            "enabled": {"type": "boolean", "default": true},
            "cursor_enhanced": {"type": "boolean", "default": true},
            "default_phase": {"type": "string", "enum": ["expand", "differentiate", "refine", "retrospect"], "default": "expand"}
          }
        },
        "specification_driven": {
          "type": "object",
          "properties": {
            "sdd_enabled": {"type": "boolean", "default": true},
            "bdd_enabled": {"type": "boolean", "default": true},
            "cursor_commands_available": {"type": "boolean", "default": true}
          }
        }
      }
    }
  },
  "required": [
    "projectName",
    "version",
    "structure"
  ]
}
