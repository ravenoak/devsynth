> """
> Exceptions for the collaboration module.
> """
  
! from devsynth.logging_setup import DevSynthLogger
! from devsynth.exceptions import (
!     DevSynthError,
!     CollaborationError as BaseCollaborationError,
!     AgentExecutionError as BaseAgentExecutionError,
!     ConsensusError as BaseConsensusError,
!     RoleAssignmentError as BaseRoleAssignmentError,
!     TeamConfigurationError as BaseTeamConfigurationError
! )
  
  # Create a logger for this module
! logger = DevSynthLogger(__name__)
  
  # For backward compatibility, redefine the exceptions with the same interface
! class CollaborationError(BaseCollaborationError):
!     """Base exception for collaboration errors."""
!     def __init__(self, message, agent_id=None, role=None, task=None, error_code=None):
!         super().__init__(message, agent_id=agent_id, role=role, task=task, error_code=error_code)
  
  
! class AgentExecutionError(BaseAgentExecutionError):
!     """Exception raised when an agent fails to execute a task."""
!     def __init__(self, message, agent_id=None, role=None, task=None, error_code=None):
!         super().__init__(message, agent_id=agent_id, task=task, error_code=error_code)
  
  
! class ConsensusError(BaseConsensusError):
!     """Exception raised when agents cannot reach consensus."""
!     def __init__(self, message, agent_id=None, role=None, task=None, agent_ids=None, topic=None, error_code=None):
!         super().__init__(
!             message, 
!             agent_ids=agent_ids or ([agent_id] if agent_id else None), 
!             topic=topic, 
!             error_code=error_code
!         )
  
  
! class RoleAssignmentError(BaseRoleAssignmentError):
!     """Exception raised when there's an issue with role assignment."""
!     def __init__(self, message, agent_id=None, role=None, task=None, error_code=None):
!         super().__init__(message, agent_id=agent_id, role=role, error_code=error_code)
  
  
! class TeamConfigurationError(BaseTeamConfigurationError):
!     """Exception raised when there's an issue with team configuration."""
!     def __init__(self, message, agent_id=None, role=None, task=None, team_id=None, error_code=None):
          # BaseTeamConfigurationError expects message, team_id, and error_code
          # but it's trying to pass details to CollaborationError which doesn't accept it
          # We need to modify how we call the parent class
  
          # First, create a new instance of CollaborationError with the correct parameters
!         collaboration_error = CollaborationError(
!             message=message,
!             agent_id=agent_id,
!             role=role,
!             task=task,
!             error_code=error_code or "TEAM_CONFIGURATION_ERROR"
!         )
  
          # Then copy its attributes to this instance
!         self.message = collaboration_error.message
!         self.error_code = collaboration_error.error_code
!         self.details = collaboration_error.details.copy()
  
          # Add team_id to details if provided
!         if team_id is not None:
!             self.details["team_id"] = team_id
  
          # Initialize the Exception base class
!         Exception.__init__(self, message)
