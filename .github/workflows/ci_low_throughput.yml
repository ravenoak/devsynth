name: DevSynth Low-Throughput CI (post-0.1.0a1)

on:
  push:
    branches:
      - main
      - 'release/*'
  pull_request:
    branches:
      - main
      - 'release/*'
  workflow_dispatch:
  # Restored push/pull_request triggers after v0.1.0a1 tagging
env:
  PYTHON_VERSION: '3.12'

jobs:
  marker-verification:
    name: Verify test markers
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: '1.8.3'
      - name: Install deps (dev + tests minimal extras)
        run: |
          poetry install --with dev --extras minimal --extras tests
      - name: Verify markers
        run: |
          poetry run python scripts/verify_test_markers.py --report --report-file test_markers_report.json
      - name: Upload marker report
        uses: actions/upload-artifact@v4
        with:
          name: marker-report
          path: test_markers_report.json

  unit-fast:
    name: Unit fast path
    runs-on: ubuntu-latest
    needs: marker-verification
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: '1.8.3'
      - name: Install deps
        run: |
          poetry install --with dev --extras minimal --extras tests
      - name: Run fast unit tests (smoke disabled plugins)
        env:
          PYTEST_DISABLE_PLUGIN_AUTOLOAD: '1'
        run: |
          poetry run devsynth run-tests --target unit-tests --speed=fast --no-parallel --smoke --maxfail=1

  lint-type-security:
    name: Lint / Type / Security gates
    runs-on: ubuntu-latest
    needs: unit-fast
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: '1.8.3'
      - name: Install deps
        run: |
          poetry install --with dev --extras minimal
      - name: Black check
        run: poetry run black --check .
      - name: isort check
        run: poetry run isort --check-only .
      - name: flake8
        run: poetry run flake8 src/ tests/
      - name: mypy (strict)
        run: poetry run mypy src/devsynth
      - name: bandit (exclude tests)
        run: poetry run bandit -r src/devsynth -x tests
      - name: safety
        run: poetry run safety check --full-report

  nightly-full-profile:
    if: ${{ false }}  # placeholder; enable by editing condition after release
    name: Nightly Full Profile (segmented, no parallel)
    runs-on: ubuntu-latest
    needs: lint-type-security
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: '1.8.3'
      - name: Install maintainer profile
        run: |
          poetry install --with dev,docs --extras "tests retrieval chromadb memory llm api webui"
      - name: Run full-profile segmented with reports
        env:
          DEVSYNTH_STRICT_COVERAGE: '1'
          DEVSYNTH_COV_FAIL_UNDER: '90'
        run: |
          poetry run devsynth run-tests --target all-tests --speed fast --speed medium --speed slow --no-parallel --segment --segment-size 50 --report --cov=src/devsynth --cov-report=term-missing:skip-covered --cov-report=html:test_reports/htmlcov --cov-report=json:test_reports/coverage.json
      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: full-profile-reports
          path: |
            test_reports/
            diagnostics/
