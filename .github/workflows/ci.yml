name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: read

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  POETRY_VIRTUALENVS_CREATE: true
  POETRY_VIRTUALENVS_IN_PROJECT: true
  PYTHONUNBUFFERED: 1
  # Default resource flags to prevent external calls in CI per docs/tasks.md
  DEVSYNTH_RESOURCE_CHROMADB_AVAILABLE: "false"
  DEVSYNTH_RESOURCE_FAISS_AVAILABLE: "false"
  DEVSYNTH_RESOURCE_KUZU_AVAILABLE: "false"
  DEVSYNTH_RESOURCE_LMDB_AVAILABLE: "false"
  DEVSYNTH_RESOURCE_LMSTUDIO_AVAILABLE: "false"
  DEVSYNTH_PROPERTY_TESTING: "false"
  # Ensure no file logging in tests
  DEVSYNTH_NO_FILE_LOGGING: "1"

jobs:
  lint_fast:
    name: Lint and Fast Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: '1.8.3'

      - name: Cache Poetry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ./.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies (minimal for lint + tests)
        run: |
          poetry install --with dev --extras minimal

      - name: Show tool versions
        run: |
          poetry run python --version
          poetry --version

      - name: Run code style checks (Black)
        run: |
          poetry run black --check .

      - name: Run import sorting checks (isort)
        run: |
          poetry run isort --check-only .

      - name: Run flake8
        run: |
          poetry run flake8 src/ tests/

      - name: Run fast tests (no parallel, fail fast)
        run: |
          poetry run devsynth run-tests --speed=fast --no-parallel --maxfail=1 --report

      - name: Upload fast test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fast-test-report
          path: test_reports/

  full_suite:
    name: Full Test Suite (All markers, resources off)
    runs-on: ubuntu-latest
    needs: lint_fast
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: '1.8.3'

      - name: Cache Poetry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ./.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies (tests baseline extras)
        run: |
          poetry install --with dev --extras tests retrieval chromadb api

      - name: Show tool versions
        run: |
          poetry run python --version
          poetry --version

      - name: Run full tests (all markers, HTML report)
        env:
          # Explicitly disable network for tests that rely on it by default
          # If tests provide a dedicated fixture to disable network, they should still pass.
          DEVSYNTH_DISABLE_NETWORK: "true"
        run: |
          poetry run devsynth run-tests --speed=all --no-parallel --maxfail=1 --report

      - name: Upload full test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: full-test-report
          path: test_reports/
