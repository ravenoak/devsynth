from __future__ import annotations

from collections.abc import Iterable, Sequence
from contextlib import AbstractContextManager
from typing import Any, Protocol

__all__ = [
    "DeltaGenerator",
    "Sidebar",
    "SessionState",
    "ProgressBar",
    "ComponentsModule",
]

class SessionState(Protocol):
    def __getitem__(self, key: str) -> Any: ...
    def __setitem__(self, key: str, value: Any) -> None: ...
    def get(self, key: str, default: Any | None = ...) -> Any: ...
    def __contains__(self, key: object) -> bool: ...
    def __getattr__(self, name: str) -> Any: ...
    def __setattr__(self, name: str, value: Any) -> None: ...

class ProgressBar(Protocol):
    def progress(self, value: float | int) -> None: ...

class DeltaGenerator(Protocol):
    def button(self, label: str, *, key: str | None = ...) -> bool: ...
    def markdown(self, body: str, *, unsafe_allow_html: bool = ...) -> None: ...
    def write(self, *args: Any, **kwargs: Any) -> None: ...
    def progress(self, value: float | int) -> ProgressBar: ...
    def success(self, message: str) -> None: ...
    def error(self, message: str) -> None: ...
    def info(self, message: str) -> None: ...
    def warning(self, message: str) -> None: ...
    def caption(self, message: str) -> None: ...
    def json(self, obj: Any) -> None: ...
    def selectbox(
        self,
        label: str,
        options: Sequence[str],
        *,
        index: int | None = ...,
        key: str | None = ...,
    ) -> str: ...
    def text_input(
        self,
        label: str,
        value: str = ...,
        *,
        key: str | None = ...,
    ) -> str: ...
    def checkbox(
        self,
        label: str,
        *,
        value: bool = ...,
        key: str | None = ...,
    ) -> bool: ...

class Sidebar(Protocol):
    def radio(
        self,
        label: str,
        options: Sequence[str],
        *,
        index: int | None = ...,
    ) -> str: ...
    def title(self, title: str) -> None: ...
    def markdown(self, body: str, *, unsafe_allow_html: bool = ...) -> None: ...

class ComponentsV1(Protocol):
    def html(
        self,
        body: str,
        *,
        height: int | None = ...,
        scrolling: bool | None = ...,
        key: str | None = ...,
    ) -> None: ...

class ComponentsModule(Protocol):
    v1: ComponentsV1

sidebar: Sidebar
session_state: SessionState
components: ComponentsModule

def header(body: str) -> None: ...
def subheader(body: str) -> None: ...
def markdown(body: str, *, unsafe_allow_html: bool = ...) -> None: ...
def caption(body: str) -> None: ...
def info(body: str) -> None: ...
def warning(body: str) -> None: ...
def error(body: str) -> None: ...
def success(body: str) -> None: ...
def write(*args: Any, **kwargs: Any) -> None: ...
def set_page_config(
    *, page_title: str | None = ..., layout: str | None = ...
) -> None: ...
def selectbox(
    label: str,
    options: Sequence[str],
    *,
    index: int | None = ...,
    key: str | None = ...,
) -> str: ...
def checkbox(label: str, *, value: bool = ..., key: str | None = ...) -> bool: ...
def text_input(label: str, value: str = ..., *, key: str | None = ...) -> str: ...
def text_area(
    label: str,
    value: str = ...,
    *,
    height: int | None = ...,
    key: str | None = ...,
) -> str: ...
def form_submit_button(label: str, *, type: str | None = ...) -> bool: ...
def button(label: str, *, key: str | None = ...) -> bool: ...
def divider() -> None: ...
def json(obj: Any) -> None: ...
def columns(spec: int | Iterable[float]) -> Sequence[DeltaGenerator]: ...
def container() -> DeltaGenerator: ...
def expander(
    label: str, *, expanded: bool = ...
) -> AbstractContextManager[DeltaGenerator]: ...
def form(key: str) -> AbstractContextManager[None]: ...
def spinner(text: str) -> AbstractContextManager[None]: ...
def progress(value: float | int) -> ProgressBar: ...
def code(body: str, *, language: str | None = ...) -> None: ...
