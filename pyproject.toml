[tool.poetry]
name = "devsynth"
version = "0.1.0"
description = "DevSynth project"
authors = ["DevSynth Team"]
readme = "README.md"
packages = [{include = "devsynth", from = "src"}]

[tool.poetry.dependencies]
python = "<3.13,>=3.12"
typer = "^0.15.4"
rich = "^13.9.4"
pydantic = "^2.11.5"
pydantic-settings = "^2.9.1"
langgraph = "^0.4.7"
langchain = "^0.3.25"
tiktoken = {version = "^0.9.0", optional = true}
networkx = "^3.4.2"
langchain-openai = "^0.3.18"
langchain-community = "^0.3.24"
openai = "^1.86.0"
toml = "^0.10.2"
requests = "^2.32.3"
fastapi = "^0.115.12"
dspy-ai = {version = "^2.6.27", optional = true}
structlog = "^25.3.0"
tinydb = {version = "^4.8.2", optional = true}
duckdb = {version = "^1.3.0", optional = true}
lmdb = {version = "^1.6.2", optional = true}
faiss-cpu = {version = "^1.11.0", optional = true}
rdflib = "^7.1.4"
astor = {version = "^0.8.1", optional = true}
argon2-cffi = "^25.1.0"
cryptography = "^45.0.4"
prometheus-client = "^0.20.0"
streamlit = "^1.32.0"
httpx = {version = "^0.28.1", optional = true}
chromadb = {version = "^1.0.9", optional = true}
kuzu = {version = "^0.10.0", optional = true}
numpy = "^1.26.4"
torch = "^2.7.1"
transformers = "^4.53.0"
pyyaml = "^6.0"
pendulum = "^3.1.0"
tqdm = "^4.67.1"
mcp = {version = "^1.10.1", extras = ["cli"]}

[tool.poetry.group.dev.dependencies]
responses = ">=0.25.7"
pytest = ">=8.3.5"
pytest-bdd = ">=8.1.0"
pytest-cov = ">=6.1.1"
pytest-mock = ">=3.14.1"
pytest-xdist = ">=3.7.0"
black = ">=25.1.0"
isort = ">=5.13.2"
pre-commit = ">=3.8.0"
psutil = ">=5.9.8"
mypy = {version = ">=1.15.0", optional = true}
tinydb = ">=4.8.2"
faker = "^37.4.0"
ipywidgets = "^8.1.7"
trio = "^0.30.0"
pytest-asyncio = "^1.0.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
mkdocs-material = "^9.6.14"
mkdocstrings-python = "^1.16.11"
mkdocs-gen-files = "^0.5.0"
mkdocs-include-markdown-plugin = "^7.1.5"
mkdocs-typer2 = "^0.1.4"
mkdocs-literate-nav = "^0.6.2"
mkdocs-section-index = "^0.3.10"

[tool.poetry.extras]
# docs: build the project documentation
# minimal: baseline runtime requirements without heavy optional dependencies
# retrieval: enables vector retrieval support via kuzu and faiss
# dsp: includes dspy integration
# chromadb: use chromadb as the vector store
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings-python",
    "mkdocs-gen-files",
    "mkdocs-include-markdown-plugin",
    "mkdocs-typer2",
    "mkdocs-literate-nav",
    "mkdocs-section-index",
]
minimal = [
    "typer",
    "rich",
    "pydantic",
    "pydantic-settings",
    "langgraph",
    "tiktoken",
    "networkx",
    "toml",
    "pyyaml",
    "requests",
    "tinydb",
    "duckdb",
    "lmdb",
    "rdflib",
    "astor",
    "httpx",
]

retrieval = ["kuzu", "faiss-cpu"]
dsp = ["dspy-ai"]
chromadb = ["chromadb"]
memory = ["tinydb", "duckdb", "lmdb", "kuzu", "faiss-cpu", "chromadb"]
llm = ["tiktoken", "httpx", "dspy-ai"]
dev = [
    "responses",
    "pytest",
    "pytest-bdd",
    "pytest-cov",
    "pytest-mock",
    "pytest-xdist",
    "black",
    "isort",
    "pre-commit",
    "psutil",
    "mypy",
    "pydantic-settings",
    "toml",
    "pyyaml",
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings-python",
    "mkdocs-gen-files",
    "mkdocs-include-markdown-plugin",
    "mkdocs-typer2",
    "mkdocs-literate-nav",
    "mkdocs-section-index",
]

[tool.poetry.scripts]
devsynth = "devsynth.adapters.cli:run_cli"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 88

[tool.devsynth]
project_root = "."
language = "python"
directories = {source = ["src"], tests = ["tests"], docs = ["docs"]}
features = {}

# Per-module options
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
